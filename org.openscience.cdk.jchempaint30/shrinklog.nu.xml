<?xml version="1.0" encoding="UTF-8"?>
<yshrink version="0.1">
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-core.jar -->
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-editor.jar -->
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-org_openscience_cdk.jar -->
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-org_openscience_cdk_io.jar -->
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-org_xmlcml.jar -->
<!-- parsing /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-nu.jar -->
<entrypoints>
	<class name="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void fixHydrogenIsotopes(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.MDLV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLV2000Reader" />
	<field name="input" class="org.openscience.cdk.io.MDLV2000Reader" />
	<field name="logger" class="org.openscience.cdk.io.MDLV2000Reader" />
	<field name="interpretHydrogenIsotopes" class="org.openscience.cdk.io.MDLV2000Reader" />
	<field name="forceReadAs3DCoords" class="org.openscience.cdk.io.MDLV2000Reader" />
	<class name="org.xmlcml.euclid.Angle$Range" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.euclid.Angle$Range" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Angle$Range" />
	<method signature="org.xmlcml.euclid.Angle$Range valueOf(java.lang.String)" class="org.xmlcml.euclid.Angle$Range" />
	<method signature="org.xmlcml.euclid.Angle$Range[] values()" class="org.xmlcml.euclid.Angle$Range" />
	<field name="SIGNED" class="org.xmlcml.euclid.Angle$Range" />
	<field name="$VALUES" class="org.xmlcml.euclid.Angle$Range" />
	<field name="UNLIMITED" class="org.xmlcml.euclid.Angle$Range" />
	<field name="UNSIGNED" class="org.xmlcml.euclid.Angle$Range" />
	<class name="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<method signature="org.xmlcml.cml.element.CMLMolecule$HydrogenControl[] values()" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<method signature="org.xmlcml.cml.element.CMLMolecule$HydrogenControl valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="ADD_TO_EXPLICIT_HYDROGENS" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="REPLACE_HYDROGEN_COUNT" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="ADD_TO_HYDROGEN_COUNT" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="USE_EXPLICIT_HYDROGENS" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="USE_HYDROGEN_COUNT" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<field name="NO_EXPLICIT_HYDROGENS" class="org.xmlcml.cml.element.CMLMolecule$HydrogenControl" />
	<class name="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SDFFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SDFFormat" />
	<class name="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MOPAC7Format" />
	<class name="org.xmlcml.euclid.IntArray" />
	<method signature="int xxpartition(org.xmlcml.euclid.IntArray,int[],int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntArray,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int partition(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int[] getReverseArray()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int indexOfSmallestElement()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void addArray(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntSet indexSortDescending()" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray trim(org.xmlcml.euclid.ArrayBase$Trim,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="boolean isClear()" class="org.xmlcml.euclid.IntArray" />
	<method signature="boolean checkSize(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int[] deleteElements(int[],int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int size()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void setElements(int,int[])" class="org.xmlcml.euclid.IntArray" />
	<method signature="int largestElement()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void xxinssort(org.xmlcml.euclid.IntArray,int[],int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void xxiqsort(org.xmlcml.euclid.IntArray,int[],int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void reverse()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void checkConformable(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void shallowCopy(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void subtractEquals(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int sumAllElements()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void sortDescending()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void setElementAt(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int,int[])" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray multiplyBy(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntSet indexSortAscending()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int innerProduct()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void deleteElement(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void xfswap(int[],int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void addElement(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray applyFilter(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void deleteElements(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void makeSpace(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int elementAt(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void xxfswap(org.xmlcml.euclid.IntArray,int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntRange getRange()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int getMin()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void insertArray(int,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void iqsort(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int[])" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray plus(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int[] copy(int[])" class="org.xmlcml.euclid.IntArray" />
	<method signature="void inssort(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void contractArray()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int absSumAllElements()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void setAllElements(int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="int smallestElement()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int[] getArray()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntArray,int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(java.lang.String[])" class="org.xmlcml.euclid.IntArray" />
	<method signature="void insertElementAt(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray getSubArray(int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void negative()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntArray" />
	<method signature="java.lang.Object clone()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void sortAscending()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int getMax()" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int,java.lang.String,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray cumulativeSum()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int indexOfLargestElement()" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray getReorderedArray(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.IntArray" />
	<method signature="java.lang.String[] getStringValues()" class="org.xmlcml.euclid.IntArray" />
	<method signature="boolean equals(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntArray subtract(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="void clearArray()" class="org.xmlcml.euclid.IntArray" />
	<method signature="int dotProduct(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntSet outOfRange(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntArray" />
	<method signature="org.xmlcml.euclid.IntSet inRange(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntArray" />
	<field name="bufsize" class="org.xmlcml.euclid.IntArray" />
	<field name="XXCUTOFF" class="org.xmlcml.euclid.IntArray" />
	<field name="CUTOFF" class="org.xmlcml.euclid.IntArray" />
	<field name="nelem" class="org.xmlcml.euclid.IntArray" />
	<field name="logger" class="org.xmlcml.euclid.IntArray" />
	<field name="maxelem" class="org.xmlcml.euclid.IntArray" />
	<field name="array" class="org.xmlcml.euclid.IntArray" />
	<class name="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CacaoCartesianFormat" />
	<class name="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape valueOf(java.lang.String)" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape[] values()" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<field name="OVAL" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<field name="$VALUES" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<field name="SQUARE" class="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape" />
	<class name="org.openscience.cdk.ConformerContainer$1" />
	<class name="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="double[] getAtomicMasses(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="double[][] getRotationMatrix()" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="javax.vecmath.Point3d[] getPoint3dArray(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="double getRMSD()" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="javax.vecmath.Point3d[] getPoint3dArray(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Atom[],org.openscience.cdk.Atom[],double[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void align()" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,double[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="javax.vecmath.Point3d getCenterOfMass(javax.vecmath.Point3d[],double[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Atom[],org.openscience.cdk.Atom[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void rotateAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="javax.vecmath.Point3d getCenterOfMass()" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<method signature="double[] getAtomicMasses(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="p1" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="npoint" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="cm2" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="p2" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="rp" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="cm1" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="wts" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="rmsd" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="atwt1" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="U" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="logger" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="$assertionsDisabled" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<field name="atwt2" class="org.openscience.cdk.geometry.alignment.KabschAlignment" />
	<class name="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPotentialElements()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPotentialList)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void addPotential(org.xmlcml.cml.element.AbstractPotential)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPotentialList" />
	<class name="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay,org.openscience.cdk.interfaces.IBond$Stereo,boolean)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="org.openscience.cdk.interfaces.IBond$Stereo getStereoForNewBond()" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="javax.vecmath.Point2d roundAngle(javax.vecmath.Point2d,javax.vecmath.Point2d,double)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="isBond" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="newSource" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="bondLength" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="start" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="stereoForNewBond" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="source" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="makeInitialBond" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="merge" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="dest" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.AddBondDragModule" />
	<class name="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void updateMenusWithLanguage()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="java.lang.String getSmiles()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="org.openscience.jchempaint.RenderPanel getRenderPanel()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="org.openscience.jchempaint.controller.ControllerHub get2DHub()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void setChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModel()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void updateStatusBar()" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<method signature="void announceError(java.lang.Throwable)" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="renderPanel" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="menus" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="statusBar" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="showStatusBar" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="insertTextPanel" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="logger" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="popupmenuitems" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="guistring" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<field name="buttons" class="org.openscience.jchempaint.AbstractJChemPaintPanel" />
	<class name="org.openscience.cdk.io.Mol2Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="boolean isElementSymbol(java.lang.String)" class="org.openscience.cdk.io.Mol2Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.Mol2Reader" />
	<field name="input" class="org.openscience.cdk.io.Mol2Reader" />
	<field name="logger" class="org.openscience.cdk.io.Mol2Reader" />
	<class name="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="void removeMonomer(java.lang.String)" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String)" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.interfaces.IPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IPolymer" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.FormalChargeAtom" />
	<class name="org.xmlcml.cml.element.Sprout" />
	<method signature="java.lang.String toString()" class="org.xmlcml.cml.element.Sprout" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.Sprout" />
	<method signature="void &lt;init&gt;(java.lang.String,org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLAngle,org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.Sprout" />
	<field name="length" class="org.xmlcml.cml.element.Sprout" />
	<field name="atom" class="org.xmlcml.cml.element.Sprout" />
	<field name="angle" class="org.xmlcml.cml.element.Sprout" />
	<field name="torsion" class="org.xmlcml.cml.element.Sprout" />
	<class name="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.List getGraph()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.BitSet buildB(java.util.BitSet,java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="int getSecondGraphSize()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="int getFirstGraphSize()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void parseRec(java.util.BitSet,java.util.BitSet,java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void setMaxIteration(int)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.BitSet projectG2(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void setAllMap(boolean)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.List getSolutions()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void clear()" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void parse(java.util.BitSet,java.util.BitSet,boolean,boolean)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void setAllStructure(boolean)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="boolean mustContinue(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="boolean isContainedIn(java.util.BitSet,java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void addNode(org.openscience.cdk.isomorphism.mcss.RNode)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void solution(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.BitSet projectG1(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="java.util.List bitSetToRMap(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void setSecondGraphSize(int)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<method signature="void setFirstGraphSize(int)" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="maxIteration" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="stop" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="findAllStructure" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="graphBitSet" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="solutionList" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="c2" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="secondGraphSize" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="firstGraphSize" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="nbIteration" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="findAllMap" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="graph" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<field name="c1" class="org.openscience.cdk.isomorphism.mcss.RGraph" />
	<class name="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer$1)" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="org.openscience.cdk.interfaces.ILonePair next()" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainer$LonePairIterator" />
	<class name="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule()" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<field name="input" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<field name="builder" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<field name="parserHelper" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<field name="parser" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<field name="molecule" class="org.openscience.cdk.io.PCSubstanceXMLReader" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="java.lang.String getSmarts()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<field name="smarts" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom" />
	<class name="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void startObject(java.lang.String)" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void setDocumentProperty(java.lang.String,java.lang.String)" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void clearData()" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void endDocument()" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void endObject(java.lang.String)" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void startDocument()" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<method signature="void setObjectProperty(java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="bond_id" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="eventReader" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="currentMolecule" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="builder" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="numberOfAtoms" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="bond_a2" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="currentAtom" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="bond_a1" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="bond_stereo" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="logger" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="bond_order" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<field name="atomEnumeration" class="org.openscience.cdk.io.iterator.event.EventCMLHandler" />
	<class name="org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer" />
	<class name="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="double calculatePiElectronegativity(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int,int)" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="void setMaxIterations(int)" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="double calculatePiElectronegativity(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="void setMaxResonStruc(int)" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="int getMaxIterations()" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="int getMaxResonStruc()" class="org.openscience.cdk.charges.PiElectronegativity" />
	<method signature="void &lt;init&gt;(int,int)" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="acOldP" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="pepe" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="maxI" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="maxRS" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="gasteigerFactors" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="molPi" class="org.openscience.cdk.charges.PiElectronegativity" />
	<field name="peoe" class="org.openscience.cdk.charges.PiElectronegativity" />
	<class name="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.XYZFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.XYZFormat" />
	<class name="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addFragmentList(org.xmlcml.cml.element.AbstractFragmentList)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addJoin(org.xmlcml.cml.element.AbstractJoin)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLElements getFragmentListElements()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setCountExpression(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLElements getJoinElements()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getCountExpression()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="org.xmlcml.cml.attribute.main.CountExpressionAttribute getCountExpressionAttribute()" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractFragment)" class="org.xmlcml.cml.element.AbstractFragment" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_countexpression" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractFragment" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractFragment" />
	<class name="org.openscience.jchempaint.renderer.elements.path.LineTo" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.LineTo" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.LineTo" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.LineTo" />
	<field name="point" class="org.openscience.jchempaint.renderer.elements.path.LineTo" />
	<class name="org.openscience.cdk.LonePair" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.LonePair" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.LonePair" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.LonePair" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.LonePair" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.LonePair" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.LonePair" />
	<method signature="java.lang.Integer getElectronCount()" class="org.openscience.cdk.LonePair" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.LonePair" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.LonePair" />
	<field name="atom" class="org.openscience.cdk.LonePair" />
	<field name="serialVersionUID" class="org.openscience.cdk.LonePair" />
	<field name="electronCount" class="org.openscience.cdk.LonePair" />
	<class name="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setSphere3(double[])" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractRegion)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setRegionRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRegionRefsAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBox3Attribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setBox3(double[])" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getRegionRefs()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="double[] getSphere3()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomSetRefAttribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getAtomSetRef()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setSphere3(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="double[] getBox3()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSphere3Attribute()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setBox3(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<method signature="void setAtomSetRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_atomsetref" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_sphere3" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_regionrefs" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_box3" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractRegion" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractRegion" />
	<class name="org.openscience.cdk.io.MDLWriter$1" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLWriter$1" />
	<field name="$SwitchMap$org$openscience$cdk$interfaces$IBond$Stereo" class="org.openscience.cdk.io.MDLWriter$1" />
	<class name="org.openscience.cdk.graph.PathTools" />
	<method signature="int getMolecularGraphDiameter(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void breadthFirstSearch(org.openscience.cdk.interfaces.IAtomContainer,java.util.List,org.openscience.cdk.interfaces.IMolecule,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int breadthFirstTargetSearch(org.openscience.cdk.interfaces.IAtomContainer,java.util.List,org.openscience.cdk.interfaces.IAtom,int,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void resetFlags(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void findPathBetween(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,java.util.List)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] findClosestByBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="java.util.List getPathsOfLength(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="java.util.List getAllPaths(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="boolean depthFirstTargetSearch(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int getVertexCountAtDistance(org.openscience.cdk.interfaces.IAtomContainer,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int[][] computeFloydAPSP(int[][])" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int[][] computeFloydAPSP(double[][])" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void breadthFirstSearch(org.openscience.cdk.interfaces.IAtomContainer,java.util.List,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int getMolecularGraphRadius(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="java.util.List getShortestPath(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.PathTools" />
	<method signature="java.util.List getPathsOfLengthUpto(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.graph.PathTools" />
	<method signature="int[] getInt2DColumnSum(int[][])" class="org.openscience.cdk.graph.PathTools" />
	<field name="DEBUG" class="org.openscience.cdk.graph.PathTools" />
	<field name="allPaths" class="org.openscience.cdk.graph.PathTools" />
	<class name="org.openscience.cdk.io.listener.PropertiesListener" />
	<method signature="void processIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<method signature="void setOutputWriter(java.io.Writer)" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<method signature="void &lt;init&gt;(java.util.Properties)" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<method signature="void frameRead(org.openscience.cdk.io.ReaderEvent)" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<field name="out" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<field name="props" class="org.openscience.cdk.io.listener.PropertiesListener" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="void removeEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="void addEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.EdgeListFactory,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="java.util.List getUnmodifiableVertexEdges()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="int edgeCount()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<field name="m_vertexEdges" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<field name="m_unmodifiableVertexEdges" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer" />
	<class name="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setError(double[])" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractCellParameter)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setError(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="double[] getError()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_error" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractCellParameter" />
	<class name="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setFormat(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormatAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addIdentifier(org.xmlcml.cml.element.AbstractIdentifier)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addReactionScheme(org.xmlcml.cml.element.AbstractReactionScheme)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionSchemeElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionStepListElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getFormat()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addReaction(org.xmlcml.cml.element.AbstractReaction)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void addReactionStepList(org.xmlcml.cml.element.AbstractReactionStepList)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactionScheme)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElements getIdentifierElements()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_format" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactionScheme" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="int getNumOfConnection()" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="void setNumOfConnection(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<field name="numOfConnection" class="org.openscience.cdk.isomorphism.matchers.smarts.ExplicitConnectionAtom" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryBond getRight()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void setRight(org.openscience.cdk.isomorphism.matchers.IQueryBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void setLeft(org.openscience.cdk.isomorphism.matchers.IQueryBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="java.lang.String getOperator()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryBond getLeft()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<field name="right" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<field name="left" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<field name="operator" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorBond" />
	<class name="org.xmlcml.cml.element.CMLObject" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLObject" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLObject" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLObject)" class="org.xmlcml.cml.element.CMLObject" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLObject" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLObject" />
	<class name="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="void addReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="void removeAllReactions()" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="int getReactionCount()" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="org.openscience.cdk.interfaces.IReaction getReaction(int)" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="java.lang.Iterable reactions()" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="void removeReaction(int)" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IReactionSet" />
	<method signature="void removeReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.interfaces.IReactionSet" />
	<class name="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void processComplexContent(java.util.Map)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void processAttributes(java.util.Map)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setSimpleType(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="java.util.List getElementTypeList()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void processContentTypes()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setSimpleContentType(org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setExtension(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setComplexType(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="nu.xom.Element getComplexType()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="nu.xom.Element getSimpleType()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="org.xmlcml.cml.base.CMLType getSimpleContentType()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setAttributeList(java.util.List)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="nu.xom.Element getXsdElement()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void &lt;init&gt;(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void processSimpleContent(java.util.Map)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="nu.xom.Element getExtension()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setAttributeGroupNameList(java.util.List)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void init()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="java.util.List getAttributeList()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="java.lang.String toString()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setXsdElement(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="java.util.List getAttributeGroupNameList()" class="org.xmlcml.cml.base.CMLElementType" />
	<method signature="void setElementTypeList(java.util.List)" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="extension" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="complexType" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="simpleType" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="elementTypeList" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="simpleContentType" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="xsdElement" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="attributeList" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="attributeGroupNameList" class="org.xmlcml.cml.base.CMLElementType" />
	<field name="name" class="org.xmlcml.cml.base.CMLElementType" />
	<class name="org.xmlcml.euclid.EuclidRuntimeException" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.EuclidException)" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<field name="serialVersionUID" class="org.xmlcml.euclid.EuclidRuntimeException" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTOrExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTOrExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrExpression" />
	<class name="org.xmlcml.cml.base.Message" />
	<method signature="void writeFile(java.io.Writer)" class="org.xmlcml.cml.base.Message" />
	<method signature="void writeXML(java.io.Writer)" class="org.xmlcml.cml.base.Message" />
	<method signature="void &lt;init&gt;(java.lang.Throwable,java.lang.String)" class="org.xmlcml.cml.base.Message" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLLog$Severity,java.lang.String)" class="org.xmlcml.cml.base.Message" />
	<method signature="void writeThrowable(java.io.Writer)" class="org.xmlcml.cml.base.Message" />
	<method signature="void writeString(java.io.Writer)" class="org.xmlcml.cml.base.Message" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.Message" />
	<method signature="void &lt;init&gt;(java.io.File,java.lang.String)" class="org.xmlcml.cml.base.Message" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.Message" />
	<field name="file" class="org.xmlcml.cml.base.Message" />
	<field name="severity" class="org.xmlcml.cml.base.Message" />
	<field name="t" class="org.xmlcml.cml.base.Message" />
	<field name="s" class="org.xmlcml.cml.base.Message" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="void setOrder(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<method signature="int getOrder()" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<field name="order" class="org.openscience.cdk.smiles.smarts.parser.ASTValence" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="int hashCode()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph,java.util.Set)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="java.util.List vertexList()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="java.util.Set inducedVertices(java.util.Set)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="boolean equals(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="boolean checkConsistency()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph,java.util.Collection)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<method signature="double weight()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<field name="serialVersionUID" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<field name="$assertionsDisabled" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycle" />
	<class name="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="java.lang.Object provideNextVertex()" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.lang.Object)" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph)" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="void encounterVertex(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="boolean isConnectedComponentExhausted()" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<method signature="void encounterVertexAgain(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<field name="m_queue" class="org._3pq.jgrapht.traverse.BreadthFirstIterator" />
	<class name="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReactionScheme newReactionScheme()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemFile newChemFile()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAminoAcid newAminoAcid()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule(int,int,int,int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron newSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(java.lang.String,int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemObject newChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(java.lang.String,int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron newSingleElectron()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer(int,int,int,int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBMonomer newPDBMonomer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(int,java.lang.String,int,double,double)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBStructure newPDBStructure()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ILonePair newLonePair(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReaction newReaction()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBPolymer newPDBPolymer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBioPolymer newBioPolymer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemModel newChemModel()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IFragmentAtom newFragmentAtom()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPolymer newPolymer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ICrystal newCrystal()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer newElectronContainer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMapping newMapping(org.openscience.cdk.interfaces.IChemObject,org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(int,java.lang.String,double,double)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAdductFormula newAdductFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(java.lang.String,java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomParity newAtomParity(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IStrand newStrand()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReactionSet newReactionSet()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ILonePair newLonePair()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet newMolecularFormulaSet()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence newChemSequence()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula newMolecularFormula()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom[],org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemObject newChemObject()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainerSet newAtomContainerSet()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ICrystal newCrystal(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet newRingSet()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAdductFormula newAdductFormula()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet newMolecularFormulaSet(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMonomer newMonomer()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(int,java.lang.String)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet newMoleculeSet()" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.interfaces.IChemObjectBuilder" />
	<class name="org.xmlcml.euclid.Real" />
	<method signature="boolean isEqual(int,double[],double[],double)" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isEqual(int,double[],double[])" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isEqual(double,double,double)" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isGreaterThan(double,double)" class="org.xmlcml.euclid.Real" />
	<method signature="void initArray(int,double[],double)" class="org.xmlcml.euclid.Real" />
	<method signature="double normalize(double,int)" class="org.xmlcml.euclid.Real" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real" />
	<method signature="void printArray(double[])" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isLessThan(double,double)" class="org.xmlcml.euclid.Real" />
	<method signature="void setEpsilon(double)" class="org.xmlcml.euclid.Real" />
	<method signature="void zeroArray(int,double[])" class="org.xmlcml.euclid.Real" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isZero(double)" class="org.xmlcml.euclid.Real" />
	<method signature="double getEpsilon()" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isZero(double,double)" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isEqual(double,double)" class="org.xmlcml.euclid.Real" />
	<method signature="boolean isEqual(double[],double[],double)" class="org.xmlcml.euclid.Real" />
	<field name="epsx" class="org.xmlcml.euclid.Real" />
	<field name="logger" class="org.xmlcml.euclid.Real" />
	<class name="org.xmlcml.molutil.ChemicalElement$AS" />
	<method signature="org.xmlcml.molutil.ChemicalElement$AS valueOf(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<method signature="org.xmlcml.molutil.ChemicalElement$AS[] values()" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<method signature="boolean equals(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,int)" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="S" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="value" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="O" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Al" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="R" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Mg" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="H" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="C" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Br" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Si" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="He" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="P" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Ar" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Li" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="B" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="I" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Ne" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Na" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="$VALUES" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Be" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="F" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="N" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="n" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<field name="Cl" class="org.xmlcml.molutil.ChemicalElement$AS" />
	<class name="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="void setAtomAt(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBondOrderOnly" />
	<class name="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="java.lang.String getResSeq()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="java.lang.String getChainID()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void initValues()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="java.lang.String getICode()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void setResSeq(java.lang.String)" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void setICode(java.lang.String)" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<method signature="void setChainID(java.lang.String)" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<field name="resSeq" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<field name="iCode" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<field name="chainID" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<field name="serialVersionUID" class="org.openscience.cdk.protein.data.PDBMonomer" />
	<class name="org.xmlcml.molutil.Molutils" />
	<method signature="org.xmlcml.euclid.Point3 calculate3DCoordinates3(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,double)" class="org.xmlcml.molutil.Molutils" />
	<method signature="java.util.List calculate3DCoordinates1(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,int,double,double)" class="org.xmlcml.molutil.Molutils" />
	<method signature="double getBondLength(org.xmlcml.molutil.ChemicalElement,org.xmlcml.molutil.ChemicalElement)" class="org.xmlcml.molutil.Molutils" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.molutil.Molutils" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.molutil.Molutils" />
	<method signature="void testCalculate3DCoordinates()" class="org.xmlcml.molutil.Molutils" />
	<method signature="void main(java.lang.String[])" class="org.xmlcml.molutil.Molutils" />
	<method signature="java.util.List calculate3DCoordinates0(org.xmlcml.euclid.Point3,int,double)" class="org.xmlcml.molutil.Molutils" />
	<method signature="java.util.List calculate3DCoordinates2(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,int,double,double)" class="org.xmlcml.molutil.Molutils" />
	<field name="LINEAR" class="org.xmlcml.molutil.Molutils" />
	<field name="TRIGONAL_ANGLE" class="org.xmlcml.molutil.Molutils" />
	<field name="DEFAULT" class="org.xmlcml.molutil.Molutils" />
	<field name="logger" class="org.xmlcml.molutil.Molutils" />
	<field name="TETRAHEDRAL" class="org.xmlcml.molutil.Molutils" />
	<field name="TETRAHEDRAL_ANGLE" class="org.xmlcml.molutil.Molutils" />
	<field name="TRIGONAL" class="org.xmlcml.molutil.Molutils" />
	<field name="ANY" class="org.xmlcml.molutil.Molutils" />
	<class name="org.xmlcml.cml.element.CMLPotential" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPotential" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPotential)" class="org.xmlcml.cml.element.CMLPotential" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPotential" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPotential" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPotential" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPotential" />
	<class name="org.openscience.cdk.interfaces.ILonePair" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.interfaces.ILonePair" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.ILonePair" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.ILonePair" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.ILonePair" />
	<class name="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ChemDrawFormat" />
	<class name="org.openscience.cdk.graph.invariant.CanonicalLabeler$1" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.invariant.CanonicalLabeler)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$1" />
	<field name="this$0" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$1" />
	<class name="org.xmlcml.cml.attribute.UnitsAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.UnitsAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.UnitsAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.UnitsAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.UnitsAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.UnitsAttribute" />
	<class name="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.MDLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLReader" />
	<field name="input" class="org.openscience.cdk.io.MDLReader" />
	<field name="logger" class="org.openscience.cdk.io.MDLReader" />
	<field name="forceReadAs3DCoords" class="org.openscience.cdk.io.MDLReader" />
	<class name="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void removeEntry(org.xmlcml.cml.element.CMLEntry)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLDictionary)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void indexEntries()" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="org.xmlcml.cml.element.CMLEntry getCMLEntry(java.lang.String)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="org.xmlcml.cml.element.CMLDictionary createDictionary(java.io.File)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="nu.xom.Document createDictionary0(java.io.File)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="nu.xom.Document createDictionary0(java.net.URL)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="org.xmlcml.cml.element.CMLEntry getGenericEntry(java.lang.String)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void addEntry(org.xmlcml.cml.element.CMLEntry)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void addEntryInOrder(org.xmlcml.cml.element.CMLEntry)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="void removeEntryById(java.lang.String)" class="org.xmlcml.cml.element.CMLDictionary" />
	<method signature="org.xmlcml.cml.element.CMLDictionary createDictionary(java.net.URL)" class="org.xmlcml.cml.element.CMLDictionary" />
	<field name="logger" class="org.xmlcml.cml.element.CMLDictionary" />
	<field name="NS" class="org.xmlcml.cml.element.CMLDictionary" />
	<field name="entryMap" class="org.xmlcml.cml.element.CMLDictionary" />
	<class name="org.openscience.cdk.ringsearch.Queue" />
	<method signature="void push(java.lang.Object)" class="org.openscience.cdk.ringsearch.Queue" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ringsearch.Queue" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.Queue" />
	<method signature="java.lang.Object pop()" class="org.openscience.cdk.ringsearch.Queue" />
	<field name="serialVersionUID" class="org.openscience.cdk.ringsearch.Queue" />
	<class name="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="java.util.Set connectedSetOf(java.lang.Object)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void vertexAdded(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="boolean pathExists(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="boolean isGraphConnected()" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="java.util.List connectedSets()" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void vertexRemoved(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void init()" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void edgeRemoved(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="java.util.List lazyFindConnectedSets()" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.DirectedGraph)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<method signature="void edgeAdded(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<field name="m_graph" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<field name="m_vertexToConnectedSet" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<field name="m_connectedSets" class="org._3pq.jgrapht.alg.ConnectivityInspector" />
	<class name="org.xmlcml.cml.interfacex.HasScalar" />
	<method signature="double getDouble()" class="org.xmlcml.cml.interfacex.HasScalar" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.HasScalar" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.interfacex.HasScalar" />
	<method signature="int getInt()" class="org.xmlcml.cml.interfacex.HasScalar" />
	<class name="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="java.lang.String toStringFromSets(java.util.Collection,java.util.Collection)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean containsEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean addAllEdges(java.util.Collection)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean removeAllVertices(java.util.Collection)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="java.lang.String toString()" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean addAllVertices(java.util.Collection)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean assertVertexExist(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="java.util.List removeAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean removeAllEdges(java.util.Collection)" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<method signature="boolean removeAllEdges(org._3pq.jgrapht.Edge[])" class="org._3pq.jgrapht.graph.AbstractGraph" />
	<class name="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle[] values()" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle valueOf(java.lang.String)" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<field name="NORMAL" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<field name="$VALUES" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<field name="BOLD" class="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle" />
	<class name="org.xmlcml.cml.element.CMLReactionConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="FROM_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="REACTANT_S" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="PRODUCT_I" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="REACTANT_I" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="IGNORE_ORDER" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="MAP_REACTION_ATOM_MAP_INCOMPLETE" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="PRODUCT_S" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="FROM_SPECTATOR_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<field name="MAP_REACTION_ATOM_MAP_COMPLETE" class="org.xmlcml.cml.element.CMLReactionConstants" />
	<class name="org.openscience.cdk.FragmentAtom" />
	<method signature="void setExpanded(boolean)" class="org.openscience.cdk.FragmentAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.FragmentAtom" />
	<method signature="void setExactMass(java.lang.Double)" class="org.openscience.cdk.FragmentAtom" />
	<method signature="void setFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.FragmentAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.FragmentAtom" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getFragment()" class="org.openscience.cdk.FragmentAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.FragmentAtom" />
	<method signature="java.lang.Double getExactMass()" class="org.openscience.cdk.FragmentAtom" />
	<method signature="boolean isExpanded()" class="org.openscience.cdk.FragmentAtom" />
	<field name="isExpanded" class="org.openscience.cdk.FragmentAtom" />
	<field name="fragment" class="org.openscience.cdk.FragmentAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.FragmentAtom" />
	<class name="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getA1()" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="boolean equals(java.lang.Object)" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="int getMarker()" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.SmilesGenerator,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getA2()" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<field name="a2" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<field name="marker" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<field name="a1" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<field name="this$0" class="org.openscience.cdk.smiles.SmilesGenerator$BrokenBond" />
	<class name="org.openscience.jchempaint.action.ChangeBondAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeBondAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeBondAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeBondAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeBondAction" />
	<class name="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void init()" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void close()" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<field name="input" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<field name="inchiTool" class="org.openscience.cdk.io.INChIPlainTextReader" />
	<class name="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs4Attribute()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="java.lang.String[] getAtomRefs4()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomParity)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setAtomRefs4(java.lang.String[])" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setAtomRefs4(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_att_atomrefs4" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomParity" />
	<class name="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern cleanAbundance(org.openscience.cdk.formula.IsotopePattern,double)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="void &lt;init&gt;(double)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="boolean isNotZero(double)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern getIsotopes(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="boolean calculateAbundanceAndMass(java.lang.String)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<method signature="double searchMass(java.util.Set,double)" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<field name="abundance_Mass" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<field name="builder" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<field name="minAbundance" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<field name="logger" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<field name="isoFactory" class="org.openscience.cdk.formula.IsotopePatternGenerator" />
	<class name="org.openscience.cdk.io.listener.IReaderListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.IReaderListener" />
	<method signature="void frameRead(org.openscience.cdk.io.ReaderEvent)" class="org.openscience.cdk.io.listener.IReaderListener" />
	<class name="org.xmlcml.cml.element.CMLFragment" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLFragment" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLFragment)" class="org.xmlcml.cml.element.CMLFragment" />
	<method signature="java.lang.Class getIndexableListClass()" class="org.xmlcml.cml.element.CMLFragment" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLFragment" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFragment" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLFragment" />
	<field name="NS" class="org.xmlcml.cml.element.CMLFragment" />
	<class name="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRings(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getConnectedRings(org.openscience.cdk.interfaces.IRing)" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRings(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IRingSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.interfaces.IRingSet" />
	<class name="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.JMEFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.JMEFormat" />
	<class name="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="void setSchema(nu.xom.Element)" class="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="nu.xom.Element getSchema()" class="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="nu.xom.Element readAndAssembleSchemaComponents(java.lang.String)" class="org.xmlcml.cml.base.AbstractGenerator" />
	<method signature="java.lang.String getValue()" class="org.xmlcml.cml.base.AbstractGenerator" />
	<field name="schemaManager" class="org.xmlcml.cml.base.AbstractGenerator" />
	<field name="nameList" class="org.xmlcml.cml.base.AbstractGenerator" />
	<field name="schema" class="org.xmlcml.cml.base.AbstractGenerator" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="boolean hasMoreElements()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="java.lang.Object nextElement()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt,org.openscience.cdk.graph.rebond.Bspt$Tuple,double,boolean)" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="double foundDistance2()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<method signature="boolean isWithin(org.openscience.cdk.graph.rebond.Bspt$Tuple)" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="distance" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="i" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="sp" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="distance2" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="center" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="leaf" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="stack" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="foundDistance2" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="tHemisphere" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<field name="centerValues" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere" />
	<class name="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void addReactantList(org.xmlcml.cml.element.AbstractReactantList)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactantListElements()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactantList)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactantElements()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<method signature="void addReactant(org.xmlcml.cml.element.AbstractReactant)" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactantList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactantList" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightVertexEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightVertexEvent" />
	<method signature="void setVertex(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightVertexEvent" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightVertexEvent" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightVertexEvent" />
	<class name="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer processFormula(org.openscience.cdk.interfaces.IAtomContainer,java.lang.String)" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<method signature="void processConnections(java.lang.String,org.openscience.cdk.interfaces.IAtomContainer,int)" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<method signature="java.lang.String chopBranch(java.lang.String)" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<field name="logger" class="org.openscience.cdk.io.inchi.INChIContentProcessorTool" />
	<class name="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionElements()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYieldAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setRatio(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactionStep)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addReactionScheme(org.xmlcml.cml.element.AbstractReactionScheme)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionSchemeElements()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="double getYield()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void addReaction(org.xmlcml.cml.element.AbstractReaction)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setRatio(double)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setYield(double)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRatioAttribute()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="double getRatio()" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<method signature="void setYield(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_ratio" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<field name="_att_yield" class="org.xmlcml.cml.element.AbstractReactionStep" />
	<class name="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="void remove()" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence next()" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemFile,org.openscience.cdk.ChemFile$1)" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemFile)" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<field name="this$0" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<field name="pointer" class="org.openscience.cdk.ChemFile$ChemSequenceIterator" />
	<class name="org.xmlcml.cml.element.CMLLattice" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLatticeVector,org.xmlcml.cml.element.CMLLatticeVector,org.xmlcml.cml.element.CMLLatticeVector)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void sort(java.util.List,int,int)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void addLatticeVectors(org.xmlcml.cml.element.CMLLatticeVector,org.xmlcml.cml.element.CMLLatticeVector,org.xmlcml.cml.element.CMLLatticeVector)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getCMLVector3(int)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void sort(java.util.List)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLatticeVector[])" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLattice)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="double[] getCellParameters()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="double getVolume()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="boolean newVector(java.util.List,int,int)" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="org.xmlcml.cml.element.CMLLattice getReducedCell()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLattice" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLLattice" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLattice" />
	<class name="org.xmlcml.cml.element.CMLArray" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.lang.String[] getSplitContent()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void append(int)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(int[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void ensureDelimiterAttribute(org.xmlcml.cml.attribute.DelimiterAttribute$Action)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.lang.String[] getStrings()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setUnits(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setArray(java.lang.String[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setArray(int[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(double[],java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="int[] getInts()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setSize(int)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(java.lang.String[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.util.List getStringValues()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(int[],java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void appendXML(java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void append(double)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDelimiterAttribute()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="int getArraySize()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void resetSize(int)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setDelimiter(java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(java.lang.String[],java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void checkNumericConformability(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.lang.Object getPrimitiveArray()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="java.lang.String getDelimiter()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void append(java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="org.xmlcml.cml.element.CMLArray subtract(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void resetDataType(java.lang.String)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="org.xmlcml.cml.element.CMLArray plus(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="void setArray(double[])" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="double[] getDoubles()" class="org.xmlcml.cml.element.CMLArray" />
	<method signature="int getSize()" class="org.xmlcml.cml.element.CMLArray" />
	<field name="delimiterAttribute" class="org.xmlcml.cml.element.CMLArray" />
	<field name="NS" class="org.xmlcml.cml.element.CMLArray" />
	<field name="logger" class="org.xmlcml.cml.element.CMLArray" />
	<class name="org.xmlcml.cml.element.CMLProductList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLProductList)" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLProductList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLProductList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLProductList" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticQueryBond" />
	<class name="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="void addBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer" />
	<class name="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<method signature="void init()" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<method signature="java.util.List readAtomTypes(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<field name="input" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<field name="parser" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<field name="logger" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeReader" />
	<class name="org.xmlcml.euclid.EuclidException" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.EuclidException" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.EuclidException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.EuclidException" />
	<field name="serialVersionUID" class="org.xmlcml.euclid.EuclidException" />
	<class name="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_2Format" />
	<class name="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void setChemModelRelay(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.RotateModule" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="atomCoordsMap" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="rotationPerformed" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="rotationCenter" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="selectionMade" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="selection" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="rotationAngle" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="logger" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.RotateModule" />
	<field name="startCoordsRelativeToRotationCenter" class="org.openscience.jchempaint.controller.RotateModule" />
	<class name="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getGradientElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCMLValueAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getConstraint()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addGradient(org.xmlcml.cml.element.AbstractGradient)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setConstraint(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstraintAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getCMLValue()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getExpressionElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractParameter)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void addExpression(org.xmlcml.cml.element.AbstractExpression)" class="org.xmlcml.cml.element.AbstractParameter" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_constraint" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_value" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractParameter" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractParameter" />
	<class name="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void addJoin(org.xmlcml.cml.element.AbstractJoin)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractFragmentList)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void addFragment(org.xmlcml.cml.element.AbstractFragment)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLElements getJoinElements()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLElements getFragmentElements()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractFragmentList" />
	<class name="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void startAtomTypeElement(java.lang.String,org.xml.sax.Attributes)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="java.util.List getAtomTypes()" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void endAtomTypeElement(java.lang.String)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void startDocument()" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void characters(char[],int,int)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<method signature="void endElement(java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="atomTypes" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="NS_ATOMTYPE" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="builder" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="currentAtomType" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="currentChars" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<field name="logger" class="org.openscience.cdk.config.atomtypes.OWLAtomTypeHandler" />
	<class name="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getConnectedAtomContainer()" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="boolean isFilled()" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<method signature="java.util.Collection elements(java.lang.Class)" class="org.openscience.jchempaint.renderer.selection.IChemObjectSelection" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTSIMPLEBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTOREXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTNOTEXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTANYATOM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTATOMICMASS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTVALENCE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTLOWANDBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTSMARTS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTEXPLICITATOM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTREACTION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTRECURSIVESMARTSEXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTELEMENT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTNOTBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTALIPHATIC" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTNONCHHEAVYATOM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTTOTALCONNECTIVITY" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="jjtNodeName" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTRINGIDENTIFIER" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTTOTALHCOUNT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTCHARGE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTEXPLICITHIGHANDEXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTIMPLICITHCOUNT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTEXPLICITCONNECTIVITY" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTCHIRALITY" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTSTART" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTVOID" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTATOM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTGROUP" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTRINGMEMBERSHIP" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTIMPLICITHIGHANDBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTHYBRDIZATIONNUMBER" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTIMPLICITHIGHANDEXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTPERIODICGROUPNUMBER" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTLOWANDEXPRESSION" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTSMALLESTRINGSIZE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTATOMICNUMBER" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTAROMATIC" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTRINGCONNECTIVITY" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTEXPLICITHIGHANDBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<field name="JJTORBOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTreeConstants" />
	<class name="org.openscience.jchempaint.JChemPaintMenuBar" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,java.lang.String)" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<method signature="javax.swing.JMenu getMenuForEmbedded(org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<method signature="void addNormalMenuBar(org.openscience.jchempaint.JChemPaintPanel,java.lang.String)" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<field name="guiString" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<field name="menuHelper" class="org.openscience.jchempaint.JChemPaintMenuBar" />
	<class name="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="void remove()" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="void createShortestPathGraph()" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.SimpleGraph,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="java.util.List edgeList(org._3pq.jgrapht.Graph,java.util.List)" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="edgeIteratorStack" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="sourceVertex" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="targetVertex" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="next" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="shortestPathGraph" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="g" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<field name="vertexStack" class="org.openscience.cdk.graph.MinimalPathIterator" />
	<class name="org.xmlcml.cml.element.CMLAmount" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAmount" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAmount)" class="org.xmlcml.cml.element.CMLAmount" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAmount" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAmount" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAmount" />
	<class name="org.xmlcml.euclid.Real2" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="void multiplyEquals(double)" class="org.xmlcml.euclid.Real2" />
	<method signature="double[] getXY()" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Angle getAngle(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="double getY()" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 getCentroid(java.util.List)" class="org.xmlcml.euclid.Real2" />
	<method signature="int getSerialOfNearestPoint(java.util.List,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="double dotProduct(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 getTransformed(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Real2" />
	<method signature="double getX()" class="org.xmlcml.euclid.Real2" />
	<method signature="void transformBy(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Real2" />
	<method signature="boolean isOrigin()" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.RealMatrix getDistanceMatrix(java.util.List,java.util.List)" class="org.xmlcml.euclid.Real2" />
	<method signature="void setX(double)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 plus(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.Real2" />
	<method signature="boolean isOrigin(double)" class="org.xmlcml.euclid.Real2" />
	<method signature="double getLength()" class="org.xmlcml.euclid.Real2" />
	<method signature="void swap()" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2[] makePoints(org.xmlcml.euclid.Real2,int,double,double,double)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 getUnitVector()" class="org.xmlcml.euclid.Real2" />
	<method signature="void setY(double)" class="org.xmlcml.euclid.Real2" />
	<method signature="double getSquaredDistance(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="void sortDescending()" class="org.xmlcml.euclid.Real2" />
	<method signature="void negative()" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real2" />
	<method signature="void sortAscending()" class="org.xmlcml.euclid.Real2" />
	<method signature="double getAngle()" class="org.xmlcml.euclid.Real2" />
	<method signature="double getDistance(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="double elementAt(int)" class="org.xmlcml.euclid.Real2" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 makePoint(double,double)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2[] addPolygonOnLine(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,int,int,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Real2" />
	<method signature="void clear()" class="org.xmlcml.euclid.Real2" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Real2" />
	<method signature="void plusEquals(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 subtract(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 getMidPoint(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2" />
	<method signature="org.xmlcml.euclid.Real2 multiplyBy(double)" class="org.xmlcml.euclid.Real2" />
	<field name="y" class="org.xmlcml.euclid.Real2" />
	<field name="x" class="org.xmlcml.euclid.Real2" />
	<class name="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="org.openscience.cdk.tools.ILoggingTool initializeLoggingTool(java.lang.Class,java.lang.String)" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="org.openscience.cdk.tools.ILoggingTool createLoggingTool(java.lang.Class)" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="void setLoggingToolClass(java.lang.Class)" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="org.openscience.cdk.tools.ILoggingTool instantiateWithCreateMethod(java.lang.Class,java.lang.Class)" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<method signature="java.lang.Class getLoggingToolClass()" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<field name="userSetILoggerTool" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<field name="STDOUT_LOGGING_TOOL_CLASS" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<field name="DEFAULT_LOGGING_TOOL_CLASS" class="org.openscience.cdk.tools.LoggingToolFactory" />
	<class name="org.openscience.cdk.qsar.result.BooleanResultType" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.BooleanResultType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.BooleanResultType" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.result.BooleanResultType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.BooleanResultType" />
	<class name="org.openscience.cdk.RingSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.RingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRings(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.RingSet" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.RingSet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.RingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getConnectedRings(org.openscience.cdk.interfaces.IRing)" class="org.openscience.cdk.RingSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.RingSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.RingSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.RingSet" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRings(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.RingSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.RingSet" />
	<field name="LARGE_FIRST" class="org.openscience.cdk.RingSet" />
	<field name="serialVersionUID" class="org.openscience.cdk.RingSet" />
	<field name="SMALL_FIRST" class="org.openscience.cdk.RingSet" />
	<class name="org.xmlcml.euclid.Axis$Axis3" />
	<method signature="org.xmlcml.euclid.Axis$Axis3 valueOf(java.lang.String)" class="org.xmlcml.euclid.Axis$Axis3" />
	<method signature="org.xmlcml.euclid.Axis$Axis3[] values()" class="org.xmlcml.euclid.Axis$Axis3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Axis$Axis3" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,int)" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="Z" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="value" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="axis" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="$VALUES" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="Y" class="org.xmlcml.euclid.Axis$Axis3" />
	<field name="X" class="org.xmlcml.euclid.Axis$Axis3" />
	<class name="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSerialAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setSerial(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getSerial()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractModule)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractModule" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_serial" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractModule" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractModule" />
	<class name="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromContextAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setFromContext(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromTypeAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToTypeAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getFromType()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getToType()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getFromContext()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMap)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getToContext()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setFromType(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setToType(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setToContext(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToContextAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void addLink(org.xmlcml.cml.element.AbstractLink)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="org.xmlcml.cml.base.CMLElements getLinkElements()" class="org.xmlcml.cml.element.AbstractMap" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_fromcontext" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_tocontext" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_fromtype" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_totype" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMap" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMap" />
	<class name="org.openscience.cdk.ReactionScheme" />
	<method signature="int getReactionSchemeCount()" class="org.openscience.cdk.ReactionScheme" />
	<method signature="void add(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.ReactionScheme" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ReactionScheme" />
	<method signature="java.lang.Iterable reactionSchemes()" class="org.openscience.cdk.ReactionScheme" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ReactionScheme" />
	<method signature="void removeReactionScheme(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.ReactionScheme" />
	<method signature="void removeAllReactionSchemes()" class="org.openscience.cdk.ReactionScheme" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ReactionScheme" />
	<field name="reactionScheme" class="org.openscience.cdk.ReactionScheme" />
	<field name="serialVersionUID" class="org.openscience.cdk.ReactionScheme" />
	<class name="org.openscience.cdk.geometry.surface.Triangle" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point3d,javax.vecmath.Point3d,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.surface.Triangle" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.surface.Triangle" />
	<field name="p3" class="org.openscience.cdk.geometry.surface.Triangle" />
	<field name="p1" class="org.openscience.cdk.geometry.surface.Triangle" />
	<field name="p2" class="org.openscience.cdk.geometry.surface.Triangle" />
	<class name="org.openscience.cdk.AminoAcid" />
	<method signature="void setCTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AminoAcid" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.AminoAcid" />
	<method signature="org.openscience.cdk.interfaces.IAtom getCTerminus()" class="org.openscience.cdk.AminoAcid" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.AminoAcid" />
	<method signature="org.openscience.cdk.interfaces.IAtom getNTerminus()" class="org.openscience.cdk.AminoAcid" />
	<method signature="void addNTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AminoAcid" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AminoAcid" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.AminoAcid" />
	<method signature="void setNTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AminoAcid" />
	<method signature="void addCTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AminoAcid" />
	<field name="cTerminus" class="org.openscience.cdk.AminoAcid" />
	<field name="nTerminus" class="org.openscience.cdk.AminoAcid" />
	<field name="serialVersionUID" class="org.openscience.cdk.AminoAcid" />
	<class name="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.TextGroupElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void drawFilledWedge(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visitElementGroup(org.openscience.jchempaint.renderer.elements.ElementGroup)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.WigglyLineElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.PathElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.TextElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.WedgeLineElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.GeneralPath)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.IRenderingElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.LineElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="java.awt.geom.PathIterator getPathIterator(org.openscience.jchempaint.renderer.elements.GeneralPath,java.awt.geom.AffineTransform)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void drawCrissCrossWedge(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.OvalElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void setFontManager(org.openscience.jchempaint.renderer.font.IFontManager)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.AtomSymbolElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void setRendererModel(org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.ElementGroup)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void &lt;init&gt;(java.awt.Graphics2D)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.RectangleElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.ArrowElement)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<method signature="void drawDashedWedge(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<field name="rendererModel" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<field name="fontManager" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<field name="map" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<field name="strokeMap" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<field name="g" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor" />
	<class name="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdgenAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getProcessAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addFormula(org.xmlcml.cml.element.AbstractFormula)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setFormalCharge(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setSymmetryOriented(boolean)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getFormula()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondArrayElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addBondArray(org.xmlcml.cml.element.AbstractBondArray)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getIdgen()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormulaAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpinMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setSymmetryOriented(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyListElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getFormulaElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addPropertyList(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setFormalCharge(int)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setProcess(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getProcess()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getChirality()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormalChargeAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setFormula(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setSpinMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void addAtomArray(org.xmlcml.cml.element.AbstractAtomArray)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="int getFormalCharge()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setChirality(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="boolean getSymmetryOriented()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getChiralityAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSymmetryOrientedAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setIdgen(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setSpinMultiplicity(int)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="int getSpinMultiplicity()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomArrayElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractMolecule" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_process" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_spinmultiplicity" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_idgen" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_formalcharge" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_formula" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_chirality" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_symmetryoriented" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMolecule" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMolecule" />
	<class name="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<method signature="void addToAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<field name="EMPTY_SELECTION" class="org.openscience.jchempaint.renderer.selection.AbstractSelection" />
	<class name="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double getTotalAtomCount()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String createConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void debug(java.io.Writer)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void forceConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula createFormula(java.lang.String,boolean)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void setAllowNegativeCounts(boolean)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula createFormula(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void combineSubFormulaElementVectors()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void createFromString(java.lang.String,org.xmlcml.cml.element.CMLFormula$Type)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseMultipliedElementCountWhitespace(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseSubMoiety(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean equals(org.xmlcml.cml.element.CMLFormula,double)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean equalsConcise(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void multiplyBy(double)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String removeChargeFromConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int parseCharge(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String[] getElementTypes()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double getCalculatedMass(java.util.List,org.xmlcml.euclid.RealArray)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double[] getCounts()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getFormalChargeString()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula createFormula(java.lang.String,org.xmlcml.cml.element.CMLFormula$Type,boolean)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean isAllowNegativeCounts()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula getDifference(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void normalize()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void checkAtomArrayFormat(org.xmlcml.cml.element.CMLAtomArray)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseMoiety0(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double getCalculatedMolecularMass()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean isEmpty()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula getAggregateFormula()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void addFormula(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void setConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String makeCharge(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void setFormalCharge(int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getCompactedConcise(java.lang.String,boolean)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getFormattedString()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getFormattedString(org.xmlcml.cml.element.CMLFormula$Type,org.xmlcml.cml.element.CMLFormula$Sort,boolean)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean equalsAggregate(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseElementCountWhitespace(java.lang.String,org.xmlcml.cml.element.CMLFormula$Type)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int getFormalCharge()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void aggregate(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int grabWhite(java.lang.String,int,int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="nu.xom.Element getSubscriptedConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseAny(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getConciseNoCharge()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void appendChild(nu.xom.Element)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula createFormula(java.lang.String,org.xmlcml.cml.element.CMLFormula$Type)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int grabCount(java.lang.String,int,int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLFormula createAggregatedFormula(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String normalizeConciseAndFormalCharge(java.lang.String,int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void parseMoiety(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="boolean isProcessedConcise()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void mainTest(java.lang.String[])" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLFormula)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void add(java.lang.String,double)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int grabElement(java.lang.String,int,int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="int grabCharge(java.lang.String,int,int)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double getAtomicMass(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String getCompactedConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="java.lang.String toFormulaString()" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="void setAtomArray(org.xmlcml.cml.element.CMLAtomArray)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="org.xmlcml.cml.element.CMLAtomArray createAndAddAtomArrayAndFormalChargeFromConcise(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula" />
	<method signature="double divideBy(org.xmlcml.cml.element.CMLFormula,double)" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="NPLACES" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="NDEC" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="processedConcise" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="logger" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="NS" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="SMILES1" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="allowNegativeCounts" class="org.xmlcml.cml.element.CMLFormula" />
	<field name="SMILES" class="org.xmlcml.cml.element.CMLFormula" />
	<class name="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void addAtomType(org.xmlcml.cml.element.AbstractAtomType)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomTypeElements()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomTypeList)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomTypeList" />
	<class name="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="memory" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="command" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="proccount" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="basis" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="usecheckpoint" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="writer" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="shell" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="comment" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<field name="method" class="org.openscience.cdk.io.program.GaussianInputWriter" />
	<class name="org.openscience.cdk.graph.AtomContainerBondPermutor" />
	<method signature="void initObjectArray()" class="org.openscience.cdk.graph.AtomContainerBondPermutor" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.AtomContainerBondPermutor" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer makeResult()" class="org.openscience.cdk.graph.AtomContainerBondPermutor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.AtomContainerBondPermutor" />
	<class name="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="int getElectronCount()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.util.List getABFsByL(int)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBasisSet)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBasisSet$Basis,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="org.xmlcml.cml.element.CMLBasisSet createBasisSet()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void setBasis(org.xmlcml.cml.element.CMLBasisSet$Basis)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void setMolecule(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.util.List getABFsByN(int)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.util.List getABFsBySymbol(java.lang.String)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.util.List getABFsByLM(java.lang.String)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.util.List getABFsByM(int)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="void setMolecularOrbitalCoefficients(org.xmlcml.cml.element.CMLEigen)" class="org.xmlcml.cml.element.CMLBasisSet" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLBasisSet" />
	<field name="basis" class="org.xmlcml.cml.element.CMLBasisSet" />
	<field name="coefficients" class="org.xmlcml.cml.element.CMLBasisSet" />
	<field name="molecule" class="org.xmlcml.cml.element.CMLBasisSet" />
	<class name="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getStart()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setStart(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrderAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractActionList)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getDuration()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setStartCondition(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setEndCondition(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setOrder(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStartConditionAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setEnd(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getStartCondition()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getEndCondition()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEndConditionAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDurationAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStartAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setDuration(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getEnd()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getOrder()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEndAttribute()" class="org.xmlcml.cml.element.AbstractActionList" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_duration" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_order" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_endcondition" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_start" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_startcondition" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractActionList" />
	<field name="_att_end" class="org.xmlcml.cml.element.AbstractActionList" />
	<class name="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removingFlagsAromaticity(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer setFlags(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="double[][] assignPiFactors(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="int getMaxGasteigerIters()" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="int getMaxResoStruc()" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void setStepSize(int)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer setAntiFlags(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,int,boolean)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainerSet getHyperconjugationInteractions(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="double getTopologicalFactors(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void setMaxGasteigerIters(int)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="double getElectrostaticPotentialN(org.openscience.cdk.interfaces.IAtomContainer,int,double[])" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void cleanFlagReactiveCenter(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer assignGasteigerPiPartialCharges(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="double[][] assignrPiMarsilliFactors(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="int getStepSize()" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<method signature="void setMaxResoStruc(int)" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="fS" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="MX_RESON" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="ISCHANGEDFC" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="STEP_SIZE" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="MX_ITERATIONS" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="fE" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="logger" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<field name="factory" class="org.openscience.cdk.charges.GasteigerPEPEPartialCharges" />
	<class name="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="java.lang.Iterable molecularFormulas()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void removeMolecularFormula(int)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IMolecularFormulaSet)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="int size()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(int)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void addMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void removeMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<method signature="void removeAllMolecularFormulas()" class="org.openscience.cdk.interfaces.IMolecularFormulaSet" />
	<class name="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SVGFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SVGFormat" />
	<class name="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void fireVertexTraversed(org._3pq.jgrapht.event.VertexTraversalEvent)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void setCrossComponentTraversal(boolean)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void setReuseEvents(boolean)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void fireConnectedComponentFinished(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void addTraversalListener(org._3pq.jgrapht.event.TraversalListener)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void fireConnectedComponentStarted(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void remove()" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void removeTraversalListener(org._3pq.jgrapht.event.TraversalListener)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="boolean isReuseEvents()" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="boolean isCrossComponentTraversal()" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<method signature="void fireEdgeTraversed(org._3pq.jgrapht.event.EdgeTraversalEvent)" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<field name="m_crossComponentTraversal" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<field name="m_traversalListeners" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<field name="m_reuseEvents" class="org._3pq.jgrapht.traverse.AbstractGraphIterator" />
	<class name="org.xmlcml.euclid.Window2" />
	<method signature="void transformBy(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Window2" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Window2" />
	<method signature="org.xmlcml.euclid.Real2 getOrigin()" class="org.xmlcml.euclid.Window2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Window2" />
	<method signature="void drawRect(java.awt.Graphics)" class="org.xmlcml.euclid.Window2" />
	<method signature="org.xmlcml.euclid.Real2 getExtent(int)" class="org.xmlcml.euclid.Window2" />
	<method signature="org.xmlcml.euclid.Real2 getDim()" class="org.xmlcml.euclid.Window2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Window2" />
	<method signature="void fillRect(java.awt.Graphics)" class="org.xmlcml.euclid.Window2" />
	<method signature="org.xmlcml.euclid.Real2 getFarPoint()" class="org.xmlcml.euclid.Window2" />
	<field name="dim" class="org.xmlcml.euclid.Window2" />
	<field name="farPoint" class="org.xmlcml.euclid.Window2" />
	<field name="Y" class="org.xmlcml.euclid.Window2" />
	<field name="origin" class="org.xmlcml.euclid.Window2" />
	<field name="X" class="org.xmlcml.euclid.Window2" />
	<class name="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void connectedComponentStarted(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.alg.ConnectivityInspector)" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.alg.ConnectivityInspector,org._3pq.jgrapht.alg.ConnectivityInspector$1)" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void connectedComponentFinished(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<method signature="void vertexTraversed(org._3pq.jgrapht.event.VertexTraversalEvent)" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<field name="m_currentConnectedSet" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<field name="this$0" class="org._3pq.jgrapht.alg.ConnectivityInspector$MyTraversalListener" />
	<class name="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void connectedComponentStarted(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void edgeTraversed(org._3pq.jgrapht.event.EdgeTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void connectedComponentFinished(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<method signature="void vertexTraversed(org._3pq.jgrapht.event.VertexTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListenerAdapter" />
	<class name="org.openscience.cdk.Bond" />
	<method signature="org.openscience.cdk.interfaces.IBond$Stereo getStereo()" class="org.openscience.cdk.Bond" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getConnectedAtoms(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Bond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getConnectedAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.Bond" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.Bond" />
	<method signature="boolean isConnectedTo(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.Bond" />
	<method signature="javax.vecmath.Point3d get3DCenter()" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.Bond" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom[],org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.Bond" />
	<method signature="int getAtomCount()" class="org.openscience.cdk.Bond" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.Bond" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.Bond" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getOrder()" class="org.openscience.cdk.Bond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom(int)" class="org.openscience.cdk.Bond" />
	<method signature="void setOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.Bond" />
	<method signature="java.lang.Iterable atoms()" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Bond" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Bond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Bond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Bond" />
	<method signature="javax.vecmath.Point2d get2DCenter()" class="org.openscience.cdk.Bond" />
	<method signature="void setStereo(org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.Bond" />
	<field name="atoms" class="org.openscience.cdk.Bond" />
	<field name="atomCount" class="org.openscience.cdk.Bond" />
	<field name="order" class="org.openscience.cdk.Bond" />
	<field name="serialVersionUID" class="org.openscience.cdk.Bond" />
	<field name="stereo" class="org.openscience.cdk.Bond" />
	<class name="org.openscience.jchempaint.action.EditAtomContainerPropsAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.EditAtomContainerPropsAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.EditAtomContainerPropsAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.EditAtomContainerPropsAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.EditAtomContainerPropsAction" />
	<class name="org._3pq.jgrapht.edge.UndirectedEdge" />
	<method signature="java.lang.String toString()" class="org._3pq.jgrapht.edge.UndirectedEdge" />
	<method signature="void &lt;init&gt;(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.edge.UndirectedEdge" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.edge.UndirectedEdge" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.edge.UndirectedEdge" />
	<class name="org.openscience.cdk.io.INChIReader" />
	<method signature="void init()" class="org.openscience.cdk.io.INChIReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.INChIReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.INChIReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void close()" class="org.openscience.cdk.io.INChIReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile()" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.INChIReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.INChIReader" />
	<field name="input" class="org.openscience.cdk.io.INChIReader" />
	<field name="parser" class="org.openscience.cdk.io.INChIReader" />
	<field name="logger" class="org.openscience.cdk.io.INChIReader" />
	<class name="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="javax.swing.Icon getIcon(java.io.File)" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="java.lang.String getName(java.io.File)" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="java.lang.String getDescription(java.io.File)" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="java.lang.String getTypeDescription(java.io.File)" class="org.openscience.jchempaint.io.JCPFileView" />
	<method signature="java.lang.Boolean isTraversable(java.io.File)" class="org.openscience.jchempaint.io.JCPFileView" />
	<class name="org.xmlcml.euclid.Complex" />
	<method signature="double getImaginary()" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(double)" class="org.xmlcml.euclid.Complex" />
	<method signature="org.xmlcml.euclid.Polar getPolar()" class="org.xmlcml.euclid.Complex" />
	<method signature="double getR()" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(double,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Complex" />
	<method signature="void negative()" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Complex" />
	<method signature="org.xmlcml.euclid.Complex divideBy(org.xmlcml.euclid.Complex)" class="org.xmlcml.euclid.Complex" />
	<method signature="double getReal()" class="org.xmlcml.euclid.Complex" />
	<method signature="org.xmlcml.euclid.Complex multiply(org.xmlcml.euclid.Complex)" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Complex)" class="org.xmlcml.euclid.Complex" />
	<method signature="org.xmlcml.euclid.Complex sqrt(org.xmlcml.euclid.Complex)" class="org.xmlcml.euclid.Complex" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Complex" />
	<method signature="org.xmlcml.euclid.Angle getTheta()" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Complex" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Complex" />
	<class name="org.openscience.cdk.interfaces.IElement" />
	<method signature="void setSymbol(java.lang.String)" class="org.openscience.cdk.interfaces.IElement" />
	<method signature="java.lang.String getSymbol()" class="org.openscience.cdk.interfaces.IElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IElement" />
	<method signature="java.lang.Integer getAtomicNumber()" class="org.openscience.cdk.interfaces.IElement" />
	<method signature="void setAtomicNumber(java.lang.Integer)" class="org.openscience.cdk.interfaces.IElement" />
	<class name="org.xmlcml.cml.element.CMLPeak" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPeak" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPeak" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPeak" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPeak)" class="org.xmlcml.cml.element.CMLPeak" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPeak" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPeak" />
	<class name="org.openscience.cdk.io.MDLWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="java.lang.String formatMDLInt(int,int)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="java.lang.String formatMDLFloat(float)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="java.lang.String formatMDLString(java.lang.String,int)" class="org.openscience.cdk.io.MDLWriter" />
	<method signature="void writeChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.MDLWriter" />
	<field name="forceWriteAs2DCoords" class="org.openscience.cdk.io.MDLWriter" />
	<field name="writer" class="org.openscience.cdk.io.MDLWriter" />
	<field name="logger" class="org.openscience.cdk.io.MDLWriter" />
	<class name="org.openscience.cdk.io.formats.IChemFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.IChemFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.IChemFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.IChemFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.IChemFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.IChemFormat" />
	<class name="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2d)" class="javax.vecmath.Point2d" />
	<method signature="double distance(javax.vecmath.Point2d)" class="javax.vecmath.Point2d" />
	<method signature="double distanceLinf(javax.vecmath.Point2d)" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2d)" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2f)" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;()" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(double[])" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(double,double)" class="javax.vecmath.Point2d" />
	<method signature="void &lt;clinit&gt;()" class="javax.vecmath.Point2d" />
	<method signature="double distanceL1(javax.vecmath.Point2d)" class="javax.vecmath.Point2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2f)" class="javax.vecmath.Point2d" />
	<method signature="double distanceSquared(javax.vecmath.Point2d)" class="javax.vecmath.Point2d" />
	<class name="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMechanism)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void addMechanismComponent(org.xmlcml.cml.element.AbstractMechanismComponent)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLElements getMechanismComponentElements()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMechanism" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanism" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMechanism" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMechanism" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMechanism" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMechanism" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMechanism" />
	<class name="org.xmlcml.cml.element.CMLScalar" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;init&gt;(double)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="int getInt()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void setUnits(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="org.xmlcml.cml.attribute.DictRefAttribute getDictRefFromElementOrParent()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void subtractEquals(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="org.xmlcml.cml.element.CMLScalar plus(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void checkNumericConformability(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void setValue(double)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="org.xmlcml.cml.element.CMLScalar subtract(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="double getDouble()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void plusEquals(org.xmlcml.cml.element.CMLScalar)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void setValue(int)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void setValue(java.lang.String)" class="org.xmlcml.cml.element.CMLScalar" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLScalar" />
	<field name="logger" class="org.xmlcml.cml.element.CMLScalar" />
	<field name="NS" class="org.xmlcml.cml.element.CMLScalar" />
	<class name="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setVector3(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setPoint3(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getVector3Attribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLine3)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPoint3Attribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setVector3(double[])" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="double[] getPoint3()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="double[] getVector3()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setPoint3(double[])" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLine3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_vector3" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_point3" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLine3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLine3" />
	<class name="org.openscience.cdk.exception.NoSuchAtomTypeException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.NoSuchAtomTypeException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.NoSuchAtomTypeException" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.NoSuchAtomTypeException" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="int getMass()" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="void setMass(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<field name="mass" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass" />
	<class name="org.xmlcml.euclid.Util$Message" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.euclid.Util$Message" />
	<method signature="org.xmlcml.euclid.Util$Message valueOf(java.lang.String)" class="org.xmlcml.euclid.Util$Message" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Util$Message" />
	<method signature="org.xmlcml.euclid.Util$Message[] values()" class="org.xmlcml.euclid.Util$Message" />
	<field name="NYI" class="org.xmlcml.euclid.Util$Message" />
	<field name="value" class="org.xmlcml.euclid.Util$Message" />
	<field name="$VALUES" class="org.xmlcml.euclid.Util$Message" />
	<class name="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.VASPFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.VASPFormat" />
	<class name="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<method signature="org.openscience.cdk.interfaces.IAtomType$Hybridization[] values()" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<method signature="org.openscience.cdk.interfaces.IAtomType$Hybridization valueOf(java.lang.String)" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3D2" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP2" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="S" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3D4" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="$VALUES" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP1" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3D3" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3D5" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="SP3D1" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<field name="PLANAR3" class="org.openscience.cdk.interfaces.IAtomType$Hybridization" />
	<class name="org.xmlcml.cml.element.CMLYaxis" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLYaxis" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLYaxis)" class="org.xmlcml.cml.element.CMLYaxis" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLYaxis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLYaxis" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLYaxis" />
	<field name="NS" class="org.xmlcml.cml.element.CMLYaxis" />
	<class name="org.openscience.jchempaint.JChemPaintViewerPanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JChemPaintViewerPanel" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemModel,int,int,boolean,boolean,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.JChemPaintViewerPanel" />
	<class name="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix$Type valueOf(java.lang.String)" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix$Type[] values()" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="UNKNOWN" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="i" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="LOWER_TRIANGLE" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="SYMMETRIC" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="OUTER_PRODUCT" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="DIAGONAL" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="$VALUES" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<field name="UPPER_TRIANGLE" class="org.xmlcml.euclid.IntSquareMatrix$Type" />
	<class name="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDimensionalityAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeriodicityAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setDimensionality(int)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setPeriodicity(int)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="int getDimensionality()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setPeriodicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setDimensionality(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="int getPeriodicity()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSystem)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSystem" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_dimensionality" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_periodicity" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSystem" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSystem" />
	<class name="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IAtomContainerSet,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="int getBondCount(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void sort(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void removeElectronContainer(org.openscience.cdk.interfaces.IAtomContainerSet,org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="int getAtomCount(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="java.util.List getAllChemObjects(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="java.util.List getAllAtomContainers(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IAtomContainerSet,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="double getTotalFormalCharge(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void setAtomProperties(org.openscience.cdk.interfaces.IAtomContainerSet,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="boolean containsByID(org.openscience.cdk.interfaces.IAtomContainerSet,java.lang.String)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="void removeAtomAndConnectedElectronContainers(org.openscience.cdk.interfaces.IAtomContainerSet,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="java.util.List getAllIDs(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="int getTotalHydrogenCount(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<method signature="double getTotalCharge(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.AtomContainerSetManipulator" />
	<class name="org.openscience.cdk.SingleElectron" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.SingleElectron" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.SingleElectron" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.SingleElectron" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.SingleElectron" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.SingleElectron" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.SingleElectron" />
	<method signature="java.lang.Integer getElectronCount()" class="org.openscience.cdk.SingleElectron" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.SingleElectron" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.SingleElectron" />
	<field name="atom" class="org.openscience.cdk.SingleElectron" />
	<field name="serialVersionUID" class="org.openscience.cdk.SingleElectron" />
	<field name="electronCount" class="org.openscience.cdk.SingleElectron" />
	<class name="org.xmlcml.cml.base.HasId" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.base.HasId" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.HasId" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.base.HasId" />
	<class name="org.openscience.cdk.Mapping" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getChemObject(int)" class="org.openscience.cdk.Mapping" />
	<method signature="org.openscience.cdk.interfaces.IChemObject[] access$100(org.openscience.cdk.Mapping)" class="org.openscience.cdk.Mapping" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObject,org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.Mapping" />
	<method signature="java.lang.Iterable relatedChemObjects()" class="org.openscience.cdk.Mapping" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Mapping" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Mapping" />
	<field name="relation" class="org.openscience.cdk.Mapping" />
	<field name="serialVersionUID" class="org.openscience.cdk.Mapping" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTStart" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTStart" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTStart" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTStart" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTStart" />
	<class name="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="void remove()" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Mapping)" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Mapping,org.openscience.cdk.Mapping$1)" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<field name="this$0" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<field name="pointer" class="org.openscience.cdk.Mapping$ChemObjectIterator" />
	<class name="org.xmlcml.cml.element.CMLIsotope" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLIsotope" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLIsotope" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLIsotope)" class="org.xmlcml.cml.element.CMLIsotope" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLIsotope" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLIsotope" />
	<field name="NS" class="org.xmlcml.cml.element.CMLIsotope" />
	<class name="org.openscience.cdk.validate.CDKValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemFileNulls(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.validate.CDKValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.validate.CDKValidator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.CDKValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemSequenceNulls(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.validate.CDKValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.validate.CDKValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.CDKValidator" />
	<class name="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void flipOnReadingAndWriting(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void showEmptyInstance(boolean)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModelFromReader(org.openscience.cdk.io.ISimpleChemObjectReader)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void removeDuplicateMolecules(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void setReactionIDs(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void replaceReferencesWithClones(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void main(java.lang.String[])" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createReader(java.net.URL,java.lang.String,java.lang.String)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet generate2dCoordinates(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readFromFileReader(java.net.URL,java.lang.String,java.lang.String)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readFromFile(java.io.File,java.lang.String)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void showInstance(java.io.File,java.lang.String,org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void cleanUpChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void checkCoordinates(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void removeEmptyMolecules(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="java.io.Reader getReader(java.net.URL)" class="org.openscience.jchempaint.application.JChemPaint" />
	<method signature="org.openscience.jchempaint.JChemPaintPanel showInstance(org.openscience.cdk.interfaces.IChemModel,java.lang.String,boolean)" class="org.openscience.jchempaint.application.JChemPaint" />
	<field name="instancecounter" class="org.openscience.jchempaint.application.JChemPaint" />
	<field name="GUI_APPLICATION" class="org.openscience.jchempaint.application.JChemPaint" />
	<class name="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXMinAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXValueAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getYMin()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setMoleculeRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getYWidth()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYMin(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setPeakHeight(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getPeakShape()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXMaxAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXMax(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setAtomRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void addBond(org.xmlcml.cml.element.AbstractBond)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getYUnits()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYWidth(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakHeightAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getXMax()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String[] getMoleculeRefs()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYValueAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getPeakHeight()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXWidth(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYMax(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getXMin()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setAtomRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYMaxAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getXUnits()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPeak)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXWidth(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void addAtom(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYWidth(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMoleculeRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakStructureElements()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setPeakMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getXValue()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getXWidth()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void addPeakStructure(org.xmlcml.cml.element.AbstractPeakStructure)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setMoleculeRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setBondRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondElements()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setYValue(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getPeakUnits()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIntegralAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXWidthAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setPeakUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getPeakMultiplicity()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getIntegral()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getYValue()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXValue(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setIntegral(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setPeakHeight(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXMin(double)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="double getYMax()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setPeakShape(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYMinAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomElements()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYWidthAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setBondRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="void setXValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeak" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakShapeAttribute()" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_yvalue" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_yunits" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_peakheight" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_bondrefs" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_xmin" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_xunits" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_ywidth" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_moleculerefs" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_integral" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_ymin" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_peakmultiplicity" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_xvalue" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_ymax" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_peakshape" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_peakunits" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_xmax" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_atomrefs" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_xwidth" class="org.xmlcml.cml.element.AbstractPeak" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPeak" />
	<class name="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void init()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.listener.IReaderListener,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<method signature="void process()" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<field name="cdo" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<field name="input" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<field name="builder" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<field name="parser" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<field name="logger" class="org.openscience.cdk.io.iterator.event.EventCMLReader" />
	<class name="org.openscience.jchempaint.renderer.generators.MappingGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.MappingGenerator" />
	<method signature="double getWidthForMappingLine(org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.MappingGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.MappingGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.MappingGenerator" />
	<class name="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.INChIFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.INChIFormat" />
	<class name="nu.xom.XPathContext" />
	<method signature="void addNamespace(java.lang.String,java.lang.String)" class="nu.xom.XPathContext" />
	<method signature="void &lt;init&gt;()" class="nu.xom.XPathContext" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="nu.xom.XPathContext" />
	<method signature="nu.xom.XPathContext makeNamespaceContext(nu.xom.Element)" class="nu.xom.XPathContext" />
	<class name="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractProperty" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractProperty" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractProperty" />
	<class name="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<method signature="java.util.List getRules()" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula isValid(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<method signature="java.lang.Double isValidSum(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<field name="rules" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<field name="logger" class="org.openscience.cdk.formula.MolecularFormulaChecker" />
	<class name="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="int diagonaliseAndReturnRank(org.xmlcml.euclid.RealArray,org.xmlcml.euclid.RealSquareMatrix,org.xmlcml.euclid.EuclidRuntimeException)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean dopivot(double[][],double[][],int,int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isImproperRotation()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix subtract(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix fromLowerTriangle(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void transpose()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix copyUpperToLower()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix fromUpperTriangle(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isLowerTriangular()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix outerProduct(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix plus(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void orthogonalise()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isUnitary()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix diagonal(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(int,double)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="double determinant()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(double[][])" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix multiply(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealMatrix,int,int,int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(int,double[])" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getInverse()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix copyLowerToUpper()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="double rowDotproduct(int,int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isOrthonormal()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isUnit()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix orthonormalize()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getCrystallographicOrthogonalisation(double[],double[])" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void matinv(double[][],double[][],int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isSymmetric()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isUpperTriangular()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="boolean isOrthogonal()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="double minorDet(int)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="void shallowCopy(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="org.xmlcml.euclid.RealArray lowerTriangle()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<method signature="double trace()" class="org.xmlcml.euclid.RealSquareMatrix" />
	<field name="logger" class="org.xmlcml.euclid.RealSquareMatrix" />
	<class name="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="int matchParity(org.xmlcml.cml.element.CMLBondStereo)" class="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBondStereo)" class="org.xmlcml.cml.element.CMLBondStereo" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBondStereo" />
	<field name="NS" class="org.xmlcml.cml.element.CMLBondStereo" />
	<class name="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Centering valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Centering[] values()" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String[])" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="UNKNOWN" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="I" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="R" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="A" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="F" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="C" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="translations" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="P" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="B" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="desc" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<field name="symbol" class="org.xmlcml.cml.element.CMLCrystal$Centering" />
	<class name="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.IdAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.attribute.IdAttribute" />
	<field name="argName" class="org.xmlcml.cml.attribute.IdAttribute" />
	<field name="start" class="org.xmlcml.cml.attribute.IdAttribute" />
	<field name="end" class="org.xmlcml.cml.attribute.IdAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.IdAttribute" />
	<class name="org.openscience.jchempaint.renderer.generators.ReactionArrowGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionArrowGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ReactionArrowGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionArrowGenerator" />
	<class name="org.xmlcml.cml.element.CMLAmount$Type" />
	<method signature="org.xmlcml.cml.element.CMLAmount$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<method signature="org.xmlcml.cml.element.CMLAmount$Type[] values()" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<field name="MASS" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<field name="VOLUME" class="org.xmlcml.cml.element.CMLAmount$Type" />
	<class name="org.openscience.cdk.graph.invariant.exception.IndexOutOfBoundsException" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.exception.IndexOutOfBoundsException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.exception.IndexOutOfBoundsException" />
	<field name="serialVersionUID" class="org.openscience.cdk.graph.invariant.exception.IndexOutOfBoundsException" />
	<class name="org.xmlcml.cml.element.CMLAbundance" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAbundance" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAbundance" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAbundance" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAbundance)" class="org.xmlcml.cml.element.CMLAbundance" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAbundance" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAbundance" />
	<class name="org.xmlcml.cml.base.CMLConstants$Convention" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<method signature="boolean equals(java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Convention[] values()" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Convention valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="INCHI" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="ATC" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="CHEBI" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="PUBCHEM" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="EXTERNAL" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="DRUGBANK" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="EINECS" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="IUPAC" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="KEGG" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="SMILES" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="v" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="RTECS" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="CID" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="GMELIN" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="MESH" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="BEILSTEIN" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="CAS" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="ATOMARRAY" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<field name="MET3D" class="org.xmlcml.cml.base.CMLConstants$Convention" />
	<class name="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.FingerprintFormat" />
	<class name="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<method signature="org._3pq.jgrapht.Edge getEdge()" class="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<field name="m_edge" class="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.event.EdgeTraversalEvent" />
	<class name="org.openscience.cdk.graph.matrix.ConnectionMatrix" />
	<method signature="double[][] getMatrix(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.matrix.ConnectionMatrix" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.matrix.ConnectionMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.matrix.ConnectionMatrix" />
	<class name="org.xmlcml.euclid.ArrayBase$Trim" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<method signature="org.xmlcml.euclid.ArrayBase$Trim[] values()" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<method signature="org.xmlcml.euclid.ArrayBase$Trim valueOf(java.lang.String)" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<field name="BELOW" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<field name="ABOVE" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<field name="trim" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<field name="$VALUES" class="org.xmlcml.euclid.ArrayBase$Trim" />
	<class name="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="org.openscience.cdk.atomtype.SybylAtomTypeMatcher getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="java.lang.String mapCDKToSybylType(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="CDK_TO_SYBYL_MAP" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="factories" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="cdkMatcher" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="mapper" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="SYBYL_ATOM_TYPE_LIST" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<field name="factory" class="org.openscience.cdk.atomtype.SybylAtomTypeMatcher" />
	<class name="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<method signature="void init()" class="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<method signature="void highlightPeakInTable(int)" class="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<field name="oldnumber" class="org.openscience.jchempaint.applet.JChemPaintViewerApplet" />
	<class name="org.xmlcml.cml.element.CMLReactant" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="org.xmlcml.cml.element.CMLFormula getOrCreateFormula(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactant)" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="org.xmlcml.cml.element.CMLFormula getOrCreateFormula()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLReactant" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLReactant" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactant" />
	<class name="org.xmlcml.cml.element.CMLMap$Direction" />
	<method signature="java.lang.String toString()" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<method signature="org.xmlcml.cml.element.CMLMap$Direction valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<method signature="org.xmlcml.cml.element.CMLMap$Direction[] values()" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="EITHER" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="value" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="TO" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="BOTH" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="NEITHER" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<field name="FROM" class="org.xmlcml.cml.element.CMLMap$Direction" />
	<class name="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.layout.OverlapResolver,org.openscience.cdk.interfaces.IChemObject,org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<field name="chemObject2" class="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<field name="this$0" class="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<field name="chemObject1" class="org.openscience.cdk.layout.OverlapResolver$OverlapPair" />
	<class name="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean showCarbon(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateElements(org.openscience.cdk.interfaces.IAtom,int,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateCompactElement(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean isCarbon(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="java.awt.Color getColorForAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean canDraw(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean invisibleHydrogen(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean isHydrogen(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean hasCoordinates(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<method signature="boolean invisibleCarbon(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicAtomGenerator" />
	<class name="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createSymbolAndChargeQueryContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createSymbolChargeIDQueryContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createAnyAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createBasicQueryContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createAnyAtomForPseudoAtomQueryContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createAnyAtomAnyBondContainer(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer createSymbolAndBondOrderQueryContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.QueryAtomContainerCreator" />
	<class name="org.openscience.cdk.io.HINWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.HINWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.io.HINWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.HINWriter" />
	<field name="writer" class="org.openscience.cdk.io.HINWriter" />
	<class name="org.xmlcml.cml.interfacex.HasDictRef" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.interfacex.HasDictRef" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.HasDictRef" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.interfacex.HasDictRef" />
	<class name="org.openscience.cdk.io.iterator.event.IEventChemObjectReader" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.io.iterator.event.IEventChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.event.IEventChemObjectReader" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond" />
	<class name="org.openscience.cdk.layout.AtomPlacer$1" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.layout.AtomPlacer$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.layout.AtomPlacer)" class="org.openscience.cdk.layout.AtomPlacer$1" />
	<field name="this$0" class="org.openscience.cdk.layout.AtomPlacer$1" />
	<class name="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="boolean validate(org.openscience.cdk.interfaces.IMolecularFormula,double)" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="java.util.List getRDBEValue(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="int[] getOxidationState(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="void createTable()" class="org.openscience.cdk.formula.rules.RDBERule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.RDBERule" />
	<field name="oxidationStateTable" class="org.openscience.cdk.formula.rules.RDBERule" />
	<field name="min" class="org.openscience.cdk.formula.rules.RDBERule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.RDBERule" />
	<field name="max" class="org.openscience.cdk.formula.rules.RDBERule" />
	<class name="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<method signature="void constructPanel()" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<field name="hub" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<field name="orderField" class="org.openscience.jchempaint.dialog.editor.BondEditor" />
	<class name="org.openscience.cdk.Strand" />
	<method signature="java.util.Map getMonomers()" class="org.openscience.cdk.Strand" />
	<method signature="void removeMonomer(java.lang.String)" class="org.openscience.cdk.Strand" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String)" class="org.openscience.cdk.Strand" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Strand" />
	<method signature="void setStrandName(java.lang.String)" class="org.openscience.cdk.Strand" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.Strand" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Strand" />
	<method signature="void setStrandType(java.lang.String)" class="org.openscience.cdk.Strand" />
	<method signature="java.lang.String getStrandType()" class="org.openscience.cdk.Strand" />
	<method signature="java.lang.String getStrandName()" class="org.openscience.cdk.Strand" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.Strand" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Strand" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Strand" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.Strand" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Strand" />
	<field name="monomers" class="org.openscience.cdk.Strand" />
	<field name="strandName" class="org.openscience.cdk.Strand" />
	<field name="strandType" class="org.openscience.cdk.Strand" />
	<field name="serialVersionUID" class="org.openscience.cdk.Strand" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="boolean isPositive()" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="void setCharge(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="int getCharge()" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="void setPositive(boolean)" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<field name="isPositive" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<field name="charge" class="org.openscience.cdk.smiles.smarts.parser.ASTCharge" />
	<class name="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.JaguarFormat" />
	<class name="org.openscience.jchempaint.StringHelper" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.StringHelper" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.StringHelper" />
	<method signature="java.lang.String[] tokenize(java.lang.String)" class="org.openscience.jchempaint.StringHelper" />
	<class name="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ZindoFormat" />
	<class name="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="void lostOwnership(java.awt.datatransfer.Clipboard,java.awt.datatransfer.Transferable)" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.action.CopyPasteAction,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<method signature="boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="supportedFlavors" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="mol" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="smiles" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="this$0" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="cml" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<field name="svg" class="org.openscience.jchempaint.action.CopyPasteAction$JcpSelection" />
	<class name="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="java.util.List getAllAtomContainers(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="void markAromaticRings(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getLargestRingSet(java.util.List)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IRing getMostComplexRing(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IRing getHeaviestRing(org.openscience.cdk.interfaces.IRingSet,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="boolean ringAlreadyInSet(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="int getBondCount(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="int getAtomCount(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="void sort(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="boolean isSameRing(org.openscience.cdk.interfaces.IRingSet,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAllInOneContainer(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.tools.manipulator.RingSetManipulator" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond" />
	<class name="org.xmlcml.cml.base.SchemaManager" />
	<method signature="java.lang.String getOutdir()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void readAndCreateIndexesFromSchemaFiles()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="org.xmlcml.cml.base.TypeGenerator getTypeGenerator()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void setAttributeGenerator(org.xmlcml.cml.base.AttributeGenerator)" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="org.xmlcml.cml.base.AttributeGenerator getAttributeGenerator()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void setOutdir(java.lang.String)" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void setTypeGenerator(org.xmlcml.cml.base.TypeGenerator)" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="void setElementGenerator(org.xmlcml.cml.base.ElementGenerator)" class="org.xmlcml.cml.base.SchemaManager" />
	<method signature="org.xmlcml.cml.base.ElementGenerator getElementGenerator()" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="attributeGenerator" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="elementGenerator" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="ELEMENTS_XSD" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="outdir" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="ATTRIBUTEGROUPS_XSD" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="typeGenerator" class="org.xmlcml.cml.base.SchemaManager" />
	<field name="TYPES_XSD" class="org.xmlcml.cml.base.SchemaManager" />
	<class name="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="void close()" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.IChemObjectIO" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.IChemObjectIO" />
	<class name="org.xmlcml.cml.element.CMLMechanismComponent" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMechanismComponent)" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMechanismComponent" />
	<class name="org.openscience.cdk.ChemFile$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.ChemFile$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemFile)" class="org.openscience.cdk.ChemFile$1" />
	<field name="this$0" class="org.openscience.cdk.ChemFile$1" />
	<class name="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="void &lt;init&gt;(java.lang.String,java.io.InputStream)" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="org.openscience.cdk.atomtype.mapper.AtomTypeMapper getInstance(java.lang.String)" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="java.lang.String getMapping()" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="java.lang.String mapAtomType(java.lang.String)" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<method signature="org.openscience.cdk.atomtype.mapper.AtomTypeMapper getInstance(java.lang.String,java.io.InputStream)" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<field name="mappers" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<field name="mappings" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<field name="mappingFile" class="org.openscience.cdk.atomtype.mapper.AtomTypeMapper" />
	<class name="org.xmlcml.euclid.ArrayBase" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.ArrayBase" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.ArrayBase" />
	<field name="logger" class="org.xmlcml.euclid.ArrayBase" />
	<class name="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.MetadataNameAttribute" />
	<class name="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.SymbolAndChargeQueryAtom" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="double getLower()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="double getUpper()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,double)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,double,double)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<method signature="double round(double,int)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<field name="upper" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<field name="lower" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryAngleBond" />
	<class name="org.xmlcml.cml.element.CMLSample" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSample" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSample)" class="org.xmlcml.cml.element.CMLSample" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSample" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSample" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSample" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSample" />
	<class name="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.cml.element.CMLLine3 transform(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.cml.element.CMLLine3 subtract()" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="boolean isAntiparallelTo(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.euclid.Line3 getEuclidLine3()" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getIntersectionWith(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void setVector3(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="boolean containsPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="boolean isParallelTo(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getClosestPointTo(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Line3)" class="org.xmlcml.cml.element.CMLLine3" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLLine3" />
	<field name="POINT" class="org.xmlcml.cml.element.CMLLine3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLine3" />
	<field name="VECTOR" class="org.xmlcml.cml.element.CMLLine3" />
	<class name="org.openscience.cdk.qsar.AtomValenceTool" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.AtomValenceTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.AtomValenceTool" />
	<method signature="int getValence(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.qsar.AtomValenceTool" />
	<field name="valencesTable" class="org.openscience.cdk.qsar.AtomValenceTool" />
	<class name="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setWeight(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="double[] getKpoint()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getLabel()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setKpoint(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getKpointRef()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setLabel(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getWeightAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setKpointRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBand)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setWeight(double)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLabelAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getKpointAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setKpoint(double[])" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="double getWeight()" class="org.xmlcml.cml.element.AbstractBand" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getKpointRefAttribute()" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_weight" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_label" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_kpointref" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_kpoint" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBand" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBand" />
	<class name="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableCell)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableCell" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableCell" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableCell" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableCell" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableCell" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableCell" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableCell" />
	<class name="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLatticeVector)" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getCMLVector3()" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLatticeVector" />
	<class name="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextExp(double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextExp()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void readObject(java.io.ObjectInputStream)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void writeObject(java.io.ObjectOutputStream)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextChiSq(int)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void &lt;init&gt;(long)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="int next(int)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextGamma(double,double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextGaussian(double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextChiSq(int,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextBeta(double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void setSeed(long)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextGamma(double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="boolean nextBoolean(double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextUniform()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="int nextPoisson()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextUniform(double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextGaussian()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextExp(double,double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextChiSq()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="int nextInt(int)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="double nextGamma()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="boolean nextBoolean()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="int nextPoisson(double)" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<method signature="int nextInt()" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="GOOD_SEED" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="TEMPERING_MASK_B" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="haveNextGaussian" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="LOWER_MASK" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="TEMPERING_MASK_C" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="nextGaussian" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="M" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="MATRIX_A" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="mag01" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="N" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="serialVersionUID" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="mt" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="UPPER_MASK" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<field name="mti" class="org.xmlcml.euclid.RandomNumberGenerator" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator$UndirectedSpecifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$UndirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$UndirectedSpecifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$UndirectedSpecifics" />
	<field name="m_graph" class="org._3pq.jgrapht.traverse.CrossComponentIterator$UndirectedSpecifics" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="boolean addTuple(org.openscience.cdk.graph.rebond.Bspt$Tuple)" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt,int,int,org.openscience.cdk.graph.rebond.Bspt$Leaf)" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="void dump(int)" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<method signature="boolean isLeafWithSpace()" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="eleGE" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="eleLE" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="dim" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="splitValue" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<field name="dimMax" class="org.openscience.cdk.graph.rebond.Bspt$Node" />
	<class name="org.openscience.cdk.geometry.Projector" />
	<method signature="void project2D(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.Projector" />
	<method signature="void project2D(org.openscience.cdk.interfaces.IAtomContainer,java.util.HashMap)" class="org.openscience.cdk.geometry.Projector" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.Projector" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.Projector" />
	<class name="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Object)" class="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IBond,java.lang.Object)" class="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtom,java.lang.Object)" class="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.cml.PDBAtomCustomizer" />
	<class name="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CacaoInternalFormat" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticAtom" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryAtom getLeft()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="void setRight(org.openscience.cdk.isomorphism.matchers.IQueryAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="boolean getFlag(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="void setLeft(org.openscience.cdk.isomorphism.matchers.IQueryAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryAtom getRight()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="java.lang.String getOperator()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<field name="right" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<field name="left" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<field name="operator" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.LogicalOperatorAtom" />
	<class name="org.openscience.jchempaint.renderer.generators.ProductsBoxGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ProductsBoxGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ProductsBoxGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ProductsBoxGenerator" />
	<field name="DISTANCE" class="org.openscience.jchempaint.renderer.generators.ProductsBoxGenerator" />
	<class name="org.openscience.jchempaint.renderer.color.IAtomColorer" />
	<method signature="java.awt.Color getAtomColor(org.openscience.cdk.interfaces.IAtom,java.awt.Color)" class="org.openscience.jchempaint.renderer.color.IAtomColorer" />
	<method signature="java.awt.Color getAtomColor(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.color.IAtomColorer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.color.IAtomColorer" />
	<class name="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<method signature="org.openscience.cdk.tools.CDKHydrogenAdder getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<method signature="void addImplicitHydrogens(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<method signature="void addImplicitHydrogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<field name="tables" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<field name="ATOM_TYPE_LIST" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<field name="atomTypeList" class="org.openscience.cdk.tools.CDKHydrogenAdder" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression" />
	<class name="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void debug(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void setSplitter(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getEscapedDelimiter(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getDelimitedXMLContent(double[])" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getConcat()" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getSplitter()" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void setConcat(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="boolean isWhitespace()" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getDelimitedXMLContent(int[])" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String[] getSplitContent(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getDelimitedXMLContent(java.lang.String[])" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String appendXMLContent(java.lang.String,java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="java.lang.String getDelimitedXMLContent(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<method signature="void checkDelimiter(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<field name="concat" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<field name="splitter" class="org.xmlcml.cml.attribute.DelimiterAttribute" />
	<class name="org.openscience.cdk.interfaces.IPseudoAtom" />
	<method signature="void setLabel(java.lang.String)" class="org.openscience.cdk.interfaces.IPseudoAtom" />
	<method signature="java.lang.String getLabel()" class="org.openscience.cdk.interfaces.IPseudoAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPseudoAtom" />
	<class name="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.IResourceFormat" />
	<class name="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IReaction readReaction(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<field name="input" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<field name="logger" class="org.openscience.cdk.io.MDLRXNV2000Reader" />
	<class name="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void doctypeDecl(java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="org.openscience.cdk.ChemFile getChemFile()" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void endDocument()" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void startDocument()" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void characters(char[],int,int)" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<method signature="void endElement(java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="setOfMolecules" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="chemFile" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="chemModel" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="currentChars" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="logger" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="tautomer" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="chemSequence" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<field name="inchiTool" class="org.openscience.cdk.io.inchi.INChIHandler" />
	<class name="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.TinkerXYZFormat" />
	<class name="org.openscience.cdk.Mapping$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.Mapping$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Mapping)" class="org.openscience.cdk.Mapping$1" />
	<field name="this$0" class="org.openscience.cdk.Mapping$1" />
	<class name="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="int calculateCountExpression()" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="int[] parseCount(java.lang.String)" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<method signature="void generateAndInsertClones(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<field name="argName" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<field name="start" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<field name="end" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.CountExpressionAttribute" />
	<class name="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processBondBlockBlock(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processPropsBlock()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processBondBlock()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="java.lang.String getCommand(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void close()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processAtomElements()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="java.lang.String getQuotedValue(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="java.lang.String getValue(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processBlock(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.io.PCCompoundASNReader$URN extractURN()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="java.lang.String toSymbol(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.interfaces.IBond getBond(int)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processAtomBlock()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processAtomAIDs()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void skipBlock()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom(int)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processPropsBlockBlock()" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processAtomBlockBlock(java.lang.String)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<method signature="void processBondAtomIDs(int)" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<field name="input" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<field name="atomIDs" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<field name="logger" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<field name="molecule" class="org.openscience.cdk.io.PCCompoundASNReader" />
	<class name="org.openscience.cdk.Element" />
	<method signature="void setSymbol(java.lang.String)" class="org.openscience.cdk.Element" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.Element" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Element" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.Element" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Element" />
	<method signature="java.lang.String getSymbol()" class="org.openscience.cdk.Element" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Element" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.Element" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Element" />
	<method signature="java.lang.Integer getAtomicNumber()" class="org.openscience.cdk.Element" />
	<method signature="void setAtomicNumber(java.lang.Integer)" class="org.openscience.cdk.Element" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.Element" />
	<field name="atomicNumber" class="org.openscience.cdk.Element" />
	<field name="serialVersionUID" class="org.openscience.cdk.Element" />
	<field name="symbol" class="org.openscience.cdk.Element" />
	<class name="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setBondID(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrderAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setBondID(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setAtomRef2(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setAtomRef1(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String[] getAtomRef1()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setAtomRef1(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setOrder(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondElements()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBondArray)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setOrder(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRef1Attribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String[] getOrder()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void addBond(org.xmlcml.cml.element.AbstractBond)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRef2Attribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setAtomRef2(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondIDAttribute()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String[] getBondID()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondArray" />
	<method signature="java.lang.String[] getAtomRef2()" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_order" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_atomref2" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_bondid" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_atomref1" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBondArray" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBondArray" />
	<class name="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<method signature="java.util.List possibleAtomTypes(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<field name="logger" class="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<field name="factory" class="org.openscience.cdk.atomtype.StructGenAtomTypeGuesser" />
	<class name="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAmount)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAmount" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAmount" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAmount" />
	<class name="org.openscience.cdk.AtomType" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaxBondOrder()" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Integer getFormalCharge()" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Integer getValency()" class="org.openscience.cdk.AtomType" />
	<method signature="void setCovalentRadius(java.lang.Double)" class="org.openscience.cdk.AtomType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomType" />
	<method signature="void setMaxBondOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.AtomType" />
	<method signature="org.openscience.cdk.interfaces.IAtomType$Hybridization getHybridization()" class="org.openscience.cdk.AtomType" />
	<method signature="void setAtomTypeName(java.lang.String)" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.String getAtomTypeName()" class="org.openscience.cdk.AtomType" />
	<method signature="void setFormalCharge(java.lang.Integer)" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.AtomType" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.AtomType" />
	<method signature="void setBondOrderSum(java.lang.Double)" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Double getCovalentRadius()" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Integer getFormalNeighbourCount()" class="org.openscience.cdk.AtomType" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.openscience.cdk.AtomType" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.AtomType" />
	<method signature="void setValency(java.lang.Integer)" class="org.openscience.cdk.AtomType" />
	<method signature="java.lang.Double getBondOrderSum()" class="org.openscience.cdk.AtomType" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.AtomType" />
	<method signature="void setHybridization(org.openscience.cdk.interfaces.IAtomType$Hybridization)" class="org.openscience.cdk.AtomType" />
	<method signature="void setFormalNeighbourCount(java.lang.Integer)" class="org.openscience.cdk.AtomType" />
	<field name="bondOrderSum" class="org.openscience.cdk.AtomType" />
	<field name="maxBondOrder" class="org.openscience.cdk.AtomType" />
	<field name="formalCharge" class="org.openscience.cdk.AtomType" />
	<field name="identifier" class="org.openscience.cdk.AtomType" />
	<field name="formalNeighbourCount" class="org.openscience.cdk.AtomType" />
	<field name="serialVersionUID" class="org.openscience.cdk.AtomType" />
	<field name="electronValency" class="org.openscience.cdk.AtomType" />
	<field name="hybridization" class="org.openscience.cdk.AtomType" />
	<field name="covalentRadius" class="org.openscience.cdk.AtomType" />
	<class name="org.openscience.cdk.interfaces.IBond" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="org.openscience.cdk.interfaces.IBond$Stereo getStereo()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getOrder()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom(int)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="org.openscience.cdk.interfaces.IAtom getConnectedAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getConnectedAtoms(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="void setOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="java.lang.Iterable atoms()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="boolean isConnectedTo(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="javax.vecmath.Point3d get3DCenter()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="javax.vecmath.Point2d get2DCenter()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="int getAtomCount()" class="org.openscience.cdk.interfaces.IBond" />
	<method signature="void setStereo(org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.interfaces.IBond" />
	<class name="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="int getColumns()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setXMLContent(org.xmlcml.cml.element.CMLMatrix,java.lang.String,double[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="boolean isSquare()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setMatrix(double[][])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.cml.element.CMLMatrix multiply(org.xmlcml.cml.element.CMLMatrix)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="java.lang.String[] getSplitContent()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setMatrix(int[][])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix getEuclidIntMatrix()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="java.lang.String[] getStrings()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setUnits(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;(int[][])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void ensureDelimiterAttribute()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMatrix)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix getEuclidRealMatrix()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;(int,int,double[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="double[][] getDoubleMatrix()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="int getRows()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.cml.element.CMLMatrix createSquareMatrix(org.xmlcml.euclid.RealArray,int,org.xmlcml.cml.element.CMLMatrix$Type)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="double[] getDoubleArray()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;(int,int,int[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;(double[][])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setXMLContent(org.xmlcml.cml.element.CMLMatrix,java.lang.String,int[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setArray(int,int,int[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="int[] getIntegerArray()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void setArray(int,int,double[])" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.cml.element.CMLMatrix createCMLMatrix(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="int[][] getIntegerMatrix()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="java.lang.String[] getStringMatrixElements()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="org.xmlcml.cml.element.CMLMatrix createCMLMatrix(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.cml.element.CMLMatrix" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLMatrix,double)" class="org.xmlcml.cml.element.CMLMatrix" />
	<field name="delimiterAttribute" class="org.xmlcml.cml.element.CMLMatrix" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMatrix" />
	<class name="org.openscience.cdk.AtomContainer$4" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainer$4" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$4" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$4" />
	<class name="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getPeakMultiplicity()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getIntegral()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getYValue()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getYUnits()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getYMin()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getXValue()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getXMax()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getYMax()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getPeakHeight()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getXWidth()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getYWidth()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="double getXMin()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getPeakUnits()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getPeakShape()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<method signature="java.lang.String getXUnits()" class="org.xmlcml.cml.interfacex.PeakOrGroup" />
	<class name="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix getTranspose()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void multiplyEquals(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="java.text.DecimalFormat getFormat()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int indexOfLargestElementInColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void appendColumnData(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(int,int,double)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void multiplyBy(double)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void insertRowData(int,org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void deleteRows(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix reorderColumnsBy(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double largestElementInRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkRows(double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkConformable2(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealArray euclideanRowLengths()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void deleteColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void setElementAt(int,int,double)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void appendRowData(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void deleteColumns(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void insertRows(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int indexOfLargestElementInRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceRowData(int,double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void writeXML(java.io.Writer)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="boolean isSquare()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double largestElementInColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double largestElement()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealArray euclideanColumnLengths()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void copyColumns(double[][],int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkRows(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="boolean isZero(double)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double smallestElementInRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double smallestElementInColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void deleteRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceColumnData(int,org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double smallestElement()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void check(int,int,double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int getCols()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void setAllElements(double)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void copyRowData(double[][],int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void negative()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="boolean isOrthogonal()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int indexOfSmallestElementInColumn(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealArray multiply(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void normaliseByColumns()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void setFormat(java.text.DecimalFormat)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void normaliseByRows()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealMatrix,int,int,int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix reorderRowsBy(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void insertRowData(int,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void insertColumnData(int,org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkColumns(double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int getRows()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkConformable(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double euclideanRowLength(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceSubMatrixData(int,int,org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="boolean checkNonEmptyMatrix()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void appendColumnData(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void appendRowData(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void columnwiseDivide(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix plus(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void shallowCopy(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double elementAt(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double[] getMatrixAsArray()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.Int2 indexOfSmallestElement()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceColumnData(int,double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void insertColumnData(int,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.Int2 indexOfLargestElement()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceColumnData(int,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void makeSpaceForNewColumns(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double[][] getMatrix()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void translateByColumn(double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkRows(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix getIntMatrix()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.Real2Array extractRows(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix subtract(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealArray extractColumnData(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="int indexOfSmallestElementInRow(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(int,int,double[])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceRowData(int,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix elementsInRange(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealArray extractRowData(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix extractSubMatrixData(int,int,int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double euclideanColumnLength(int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void clearMatrix()" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(double[][])" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="double elementAt(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void replaceRowData(int,org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.Real2Array extractColumns(int,int)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="org.xmlcml.euclid.RealMatrix multiply(org.xmlcml.euclid.RealMatrix)" class="org.xmlcml.euclid.RealMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RealMatrix" />
	<field name="flmat" class="org.xmlcml.euclid.RealMatrix" />
	<field name="cols" class="org.xmlcml.euclid.RealMatrix" />
	<field name="rows" class="org.xmlcml.euclid.RealMatrix" />
	<field name="logger" class="org.xmlcml.euclid.RealMatrix" />
	<field name="format" class="org.xmlcml.euclid.RealMatrix" />
	<class name="javax.vecmath.Point3d" />
	<method signature="double distance(javax.vecmath.Point3d)" class="javax.vecmath.Point3d" />
	<method signature="void project(javax.vecmath.Point4d)" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(double,double,double)" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple3d)" class="javax.vecmath.Point3d" />
	<method signature="void &lt;clinit&gt;()" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point3d)" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple3f)" class="javax.vecmath.Point3d" />
	<method signature="double distanceSquared(javax.vecmath.Point3d)" class="javax.vecmath.Point3d" />
	<method signature="double distanceL1(javax.vecmath.Point3d)" class="javax.vecmath.Point3d" />
	<method signature="double distanceLinf(javax.vecmath.Point3d)" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(double[])" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;()" class="javax.vecmath.Point3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point3f)" class="javax.vecmath.Point3d" />
	<class name="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="int getColumnCount()" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableHeader)" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.element.CMLTableHeader" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableHeader" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTableHeader" />
	<class name="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="java.util.Collection getStrandNames()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="int getStrandCount()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="void removeStrand(java.lang.String)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="org.openscience.cdk.interfaces.IStrand getStrand(java.lang.String)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="java.util.Map getStrands()" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String,java.lang.String)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.interfaces.IBioPolymer" />
	<class name="org.openscience.cdk.isomorphism.matchers.IQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.IQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.IQueryAtom" />
	<class name="org.xmlcml.cml.element.CMLConditionList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLConditionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLConditionList)" class="org.xmlcml.cml.element.CMLConditionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLConditionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLConditionList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLConditionList" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.Collection essentialCycles()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void printIncidenceMatrix()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.List cycles()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.HashMap createEdgeIndexMap(java.util.List)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.List equivalenceClasses()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void createMinimumCycleBasis()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="boolean[][] getCycleEdgeIncidenceMatrix()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.List edges()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="boolean[] constructKernelVector(int,boolean[][],int)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="int getEdgeIndex(org._3pq.jgrapht.Edge)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="java.util.Map relevantCycles()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="boolean[][] inverseBinaryMatrix(boolean[][],int)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="int access$000(org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis,org._3pq.jgrapht.Edge)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void &lt;init&gt;(java.util.List,java.util.List,org._3pq.jgrapht.UndirectedGraph)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="boolean[][] getCycleEdgeIncidenceMatrix(java.lang.Object[])" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="void minimize(int)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<method signature="int[] weightVector()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<field name="edgeList" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<field name="cycles" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<field name="edgeIndexMap" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<field name="graph" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<field name="isMinimized" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis" />
	<class name="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<method signature="void constructPanel()" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<field name="titleField" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.editor.AtomContainerEditor" />
	<class name="org.openscience.jchempaint.action.ChargeAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChargeAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChargeAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChargeAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChargeAction" />
	<class name="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<method signature="java.lang.Object provideNextVertex()" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.lang.Object)" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<method signature="void encounterVertex(java.lang.Object,org._3pq.jgrapht.Edge)" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<field name="level" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<field name="firstVertexOfNextLevel" class="org.openscience.cdk.graph.MinimalPathIterator$MyBreadthFirstIterator" />
	<class name="org.openscience.cdk.interfaces.IChemObjectListener" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.interfaces.IChemObjectListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemObjectListener" />
	<class name="org.xmlcml.cml.element.CMLLink" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLink" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLink" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLink" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLLink" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLink" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLink" />
	<class name="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyListElements()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void addPropertyList(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPropertyList" />
	<class name="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void setReaderMode(org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<method signature="void fireIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<field name="mode" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<field name="listenerList" class="org.openscience.cdk.io.random.DefaultRandomAccessChemObjectReader" />
	<class name="org.openscience.cdk.protein.data.PDBStrand" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.protein.data.PDBStrand" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.protein.data.PDBStrand" />
	<method signature="java.util.Collection getMonomerNamesInSequentialOrder()" class="org.openscience.cdk.protein.data.PDBStrand" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.data.PDBStrand" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.protein.data.PDBStrand" />
	<field name="sequentialListOfMonomers" class="org.openscience.cdk.protein.data.PDBStrand" />
	<field name="serialVersionUID" class="org.openscience.cdk.protein.data.PDBStrand" />
	<class name="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="org.openscience.jchempaint.JCPPropertyHandler getInstance()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="void saveProperties()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.io.File getUserPropsFile()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.util.ResourceBundle getResources()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.util.Properties getJCPProperties()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.util.Properties getJCPShort_Cuts()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.lang.String getResourceString(java.lang.String)" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.io.File getUserHome()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.io.File getJChemPaintDir()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.util.ResourceBundle getGUIDefinition(java.lang.String)" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.net.URL getResource(java.lang.String)" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="java.lang.String getVersion()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<method signature="void reloadProperties()" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="guiDefinition" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="currentProperties" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="uhome" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="resources" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="ujcpdir" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="logger" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="shortCutProps" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="userPropsFile" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<field name="jcpPropsHandler" class="org.openscience.jchempaint.JCPPropertyHandler" />
	<class name="org.openscience.cdk.exception.IncorrectUseOfCDKCoreClassError" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.IncorrectUseOfCDKCoreClassError" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.IncorrectUseOfCDKCoreClassError" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.IncorrectUseOfCDKCoreClassError" />
	<class name="org.xmlcml.cml.element.CMLPotentialList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPotentialList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPotentialList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPotentialList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPotentialList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPotentialList)" class="org.xmlcml.cml.element.CMLPotentialList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPotentialList" />
	<class name="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<method signature="org.openscience.cdk.Molecule getIsobutane()" class="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<method signature="org.openscience.cdk.Molecule getIsopentane()" class="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<method signature="org.openscience.cdk.Molecule getIsohexane()" class="org.openscience.cdk.templates.saturatedhydrocarbons.IsoAlkanes" />
	<class name="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLatticeVector)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeriodicAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="boolean getPeriodic()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setPeriodic(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<method signature="void setPeriodic(boolean)" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_periodic" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLatticeVector" />
	<class name="org.openscience.cdk.graph.BFSShortestPath" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.BFSShortestPath" />
	<method signature="java.util.List createPath(org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator,java.lang.Object)" class="org.openscience.cdk.graph.BFSShortestPath" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.BFSShortestPath" />
	<method signature="java.util.List findPathBetween(org._3pq.jgrapht.Graph,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.graph.BFSShortestPath" />
	<class name="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="void addSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="boolean hasSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="java.util.HashSet getSymbolSet()" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<method signature="void removeSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<field name="symbols" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.InverseSymbolSetQueryAtom" />
	<class name="org.openscience.jchempaint.action.FlipAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.FlipAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.FlipAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.FlipAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.FlipAction" />
	<class name="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPotential)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="java.lang.String getForm()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLElements getArgElements()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormAttribute()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void addArg(org.xmlcml.cml.element.AbstractArg)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void setForm(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPotential" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="_att_form" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPotential" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPotential" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<method signature="void insertLeafChild(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression" />
	<class name="org.openscience.cdk.smiles.SmilesGenerator$1" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.smiles.SmilesGenerator$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.SmilesGenerator)" class="org.openscience.cdk.smiles.SmilesGenerator$1" />
	<field name="this$0" class="org.openscience.cdk.smiles.SmilesGenerator$1" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="void setRingId(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<method signature="int getRingId()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<field name="ringId" class="org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier" />
	<class name="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="int getAtomCount(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(java.lang.String,org.openscience.cdk.interfaces.IMolecularFormula,boolean)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.util.List getIsotopes(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String breakExtractor(java.lang.String)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.util.List getHeavyElements(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getString(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getHillString(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getNaturalExactMass(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getString(org.openscience.cdk.interfaces.IMolecularFormula,java.lang.String[],boolean)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.util.List elements(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getTotalExactMass(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String[] generateOrderEle_Hill_WithCarbons()" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="int getElementCount(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getMajorIsotopeMass(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String muliplier(java.lang.String,int)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMajorIsotopeMolecularFormula(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double correctMass(double,java.lang.Integer)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula removeElement(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getDBE(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getHTML(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="boolean containsElement(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getTotalMassNumber(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(java.lang.String,boolean,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String[] generateOrderEle()" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getHTML(org.openscience.cdk.interfaces.IMolecularFormula,boolean,boolean)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String simplifyMolecularFormula(java.lang.String)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="double getTotalNaturalAbundance(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="boolean compare(org.openscience.cdk.interfaces.IMolecularFormula,org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String multipleExtractor(java.lang.String)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(java.lang.String,org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String getString(org.openscience.cdk.interfaces.IMolecularFormula,boolean)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String cleanMFfromCharge(java.lang.String)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.util.List putInOrder(java.lang.String[],org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="int extractCharge(java.lang.String)" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<method signature="java.lang.String[] generateOrderEle_Hill_NoCarbons()" class="org.openscience.cdk.tools.manipulator.MolecularFormulaManipulator" />
	<class name="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElement(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomType(org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.validate.IValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.IValidator" />
	<class name="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractConditionList)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getListElements()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void addList(org.xmlcml.cml.element.AbstractList)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractConditionList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractConditionList" />
	<class name="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getConnectedAtomContainer()" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="boolean isFilled()" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<method signature="java.util.Collection elements(java.lang.Class)" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<field name="selection" class="org.openscience.jchempaint.renderer.selection.SingleSelection" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator$DirectedSpecifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$DirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.DirectedGraph)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$DirectedSpecifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$DirectedSpecifics" />
	<field name="m_graph" class="org._3pq.jgrapht.traverse.CrossComponentIterator$DirectedSpecifics" />
	<class name="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ChemtoolFormat" />
	<class name="org.xmlcml.cml.element.CMLList" />
	<method signature="java.util.List getStringValues()" class="org.xmlcml.cml.element.CMLList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLList" />
	<method signature="int getArraySize()" class="org.xmlcml.cml.element.CMLList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLList" />
	<method signature="void addColumnElementsTo(org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLList)" class="org.xmlcml.cml.element.CMLList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLList" />
	<class name="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="javax.vecmath.Point3d cartesianToFractional(javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="boolean hasCrystalCoordinates(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="void fractionalToCartesian(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="javax.vecmath.Point3d fractionalToCartesian(javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="double[] cartesianToNotional(javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Vector3d)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="javax.vecmath.Vector3d[] notionalToCartesian(double,double,double,double,double,double)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<method signature="javax.vecmath.Vector3d[] calcInvertedAxes(javax.vecmath.Vector3d,javax.vecmath.Vector3d,javax.vecmath.Vector3d)" class="org.openscience.cdk.geometry.CrystalGeometryTools" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="void setSize(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<method signature="int getSize()" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<field name="size" class="org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize" />
	<class name="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void setReaderMode(org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<method signature="void fireIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<field name="mode" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<field name="listenerList" class="org.openscience.cdk.io.iterator.DefaultIteratingChemObjectReader" />
	<class name="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SpartanFormat" />
	<class name="org.xmlcml.cml.element.CMLProperty$Prop" />
	<method signature="org.xmlcml.cml.element.CMLProperty$Prop valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<method signature="org.xmlcml.cml.element.CMLProperty$Prop[] values()" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<field name="value" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<field name="MOLAR_VOLUME" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<field name="DENSITY" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<field name="MOLAR_MASS" class="org.xmlcml.cml.element.CMLProperty$Prop" />
	<class name="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PQSChemFormat" />
	<class name="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="void removeElectronContainer(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="int getBondCount(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="java.util.List getAllChemObjects(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="int getAtomCount(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="double getTotalCharge(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="void removeAtomAndConnectedElectronContainers(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="int getTotalHydrogenCount(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="java.util.List getAllIDs(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="void setAtomProperties(org.openscience.cdk.interfaces.IMoleculeSet,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="java.util.List getAllAtomContainers(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<method signature="double getTotalFormalCharge(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.tools.manipulator.MoleculeSetManipulator" />
	<class name="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="void die()" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="boolean addEdit(javax.swing.undo.UndoableEdit)" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="boolean isSignificant()" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="java.lang.String getRedoPresentationName()" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="java.lang.String getUndoPresentationName()" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="boolean replaceEdit(javax.swing.undo.UndoableEdit)" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.undoredo.SwingAddAtomsAndBondsEdit" />
	<class name="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="int[] getWeightNumbers(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPlacedAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void partitionPartners(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="boolean shouldBeLinear(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getMolecule()" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void placeLinearChain(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="javax.vecmath.Vector2d getNextBondVector(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d,boolean)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void populatePolygonCorners(java.util.List,javax.vecmath.Point2d,double,double,double)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="java.lang.String listNumbers(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getInitialLongestChain(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="int getDegreeSum(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="java.lang.String listNumbers(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void calculateWeights(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void breadthFirstSearch(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector,org.openscience.cdk.interfaces.IAtomContainer[])" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void distributePartners(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void setMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void markPlaced(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="boolean allPlaced(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="void markNotPlaced(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getLongestUnplacedChain(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.layout.AtomPlacer" />
	<method signature="java.lang.String listPlaced(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.AtomPlacer" />
	<field name="debug" class="org.openscience.cdk.layout.AtomPlacer" />
	<field name="logger" class="org.openscience.cdk.layout.AtomPlacer" />
	<field name="ATOM_ORDER" class="org.openscience.cdk.layout.AtomPlacer" />
	<field name="molecule" class="org.openscience.cdk.layout.AtomPlacer" />
	<class name="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="int getOthers(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<method signature="boolean isOdd(double)" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.NitrogenRule" />
	<class name="nu.xom.Node" />
	<method signature="nu.xom.Nodes query(java.lang.String,nu.xom.XPathContext)" class="nu.xom.Node" />
	<method signature="nu.xom.ParentNode getParent()" class="nu.xom.Node" />
	<method signature="nu.xom.Nodes query(java.lang.String)" class="nu.xom.Node" />
	<method signature="java.lang.String toXML()" class="nu.xom.Node" />
	<method signature="java.lang.String getBaseURI()" class="nu.xom.Node" />
	<method signature="nu.xom.Node copy()" class="nu.xom.Node" />
	<method signature="int hashCode()" class="nu.xom.Node" />
	<method signature="boolean equals(java.lang.Object)" class="nu.xom.Node" />
	<method signature="java.lang.String getValue()" class="nu.xom.Node" />
	<method signature="nu.xom.Document getDocument()" class="nu.xom.Node" />
	<method signature="nu.xom.Node getChild(int)" class="nu.xom.Node" />
	<method signature="void detach()" class="nu.xom.Node" />
	<method signature="int getChildCount()" class="nu.xom.Node" />
	<class name="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="boolean getBoolean()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.BooleanSTAttribute)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void setCMLValue(boolean)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<method signature="void checkValue(boolean)" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<field name="b" class="org.xmlcml.cml.base.BooleanSTAttribute" />
	<class name="org.xmlcml.cml.element.CMLPeakList$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<method signature="org.xmlcml.cml.element.CMLPeakList$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<method signature="org.xmlcml.cml.element.CMLPeakList$Type[] values()" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<field name="XVALUE" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<field name="YVALUE" class="org.xmlcml.cml.element.CMLPeakList$Type" />
	<class name="org.xmlcml.cml.element.CMLReaction$Component" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Component[] values()" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Component valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,int)" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="PRODUCTLIST" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="REACTANTLIST" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="SPECTATOR" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="REACTANT" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="PRODUCT" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="ANYLIST" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="SPECTATORLIST" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="name" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="number" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<field name="ANY" class="org.xmlcml.cml.element.CMLReaction$Component" />
	<class name="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PCModelFormat" />
	<class name="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractComplexObject)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractComplexObject" />
	<class name="org.openscience.cdk.io.CMLWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void registerCustomizer(org.openscience.cdk.libio.cml.ICMLCustomizer)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="java.io.Writer access$000(org.openscience.cdk.io.CMLWriter)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.CMLWriter" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.CMLWriter" />
	<field name="instanceLocation" class="org.openscience.cdk.io.CMLWriter" />
	<field name="schemaInstanceOutput" class="org.openscience.cdk.io.CMLWriter" />
	<field name="namespacedOutput" class="org.openscience.cdk.io.CMLWriter" />
	<field name="cmlIds" class="org.openscience.cdk.io.CMLWriter" />
	<field name="xmlDeclaration" class="org.openscience.cdk.io.CMLWriter" />
	<field name="output" class="org.openscience.cdk.io.CMLWriter" />
	<field name="customizers" class="org.openscience.cdk.io.CMLWriter" />
	<field name="writer" class="org.openscience.cdk.io.CMLWriter" />
	<field name="logger" class="org.openscience.cdk.io.CMLWriter" />
	<field name="indent" class="org.openscience.cdk.io.CMLWriter" />
	<field name="namespacePrefix" class="org.openscience.cdk.io.CMLWriter" />
	<class name="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(java.awt.Color)" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="boolean contains(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="void addPoint(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="void reset()" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<method signature="boolean isEmpty()" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<field name="rectangle" class="org.openscience.jchempaint.renderer.selection.RectangleSelection" />
	<class name="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void setHydrogenCount(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void moveBy(java.util.Collection,javax.vecmath.Vector2d,javax.vecmath.Vector2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void replaceAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void cycleBondValence(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void updateAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void moveToWithoutUndo(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void addSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void moveToWithoutUndo(org.openscience.cdk.interfaces.IBond,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void removeBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeAtomWithoutUndo(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void moveTo(org.openscience.cdk.interfaces.IBond,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void setCharge(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void addNewBond(javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void setSymbol(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void moveTo(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void mergeMolecules(javax.vecmath.Vector2d)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void removeSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void setMassNumber(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void makeBondStereo(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.controller.IChemModelRelay$Direction)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void updateAtoms(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Iterable)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void setOrder(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IBond addBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="void removeBondWithoutUndo(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<method signature="org.openscience.cdk.interfaces.IBond makeNewStereoBond(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.controller.IChemModelRelay$Direction)" class="org.openscience.jchempaint.controller.IAtomBondEdits" />
	<class name="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void setPopupMenu(java.lang.Class,org.openscience.jchempaint.JChemPaintPopupMenu)" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.RenderPanel,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void popupMenuForNearestChemObject(javax.vecmath.Point2d)" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void mouseClickedDownRight(javax.vecmath.Point2d)" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.SwingPopupModule" />
	<method signature="org.openscience.jchempaint.JChemPaintPopupMenu getPopupMenu(java.lang.Class)" class="org.openscience.jchempaint.SwingPopupModule" />
	<field name="rendererPanel" class="org.openscience.jchempaint.SwingPopupModule" />
	<field name="logger" class="org.openscience.jchempaint.SwingPopupModule" />
	<field name="popupMenus" class="org.openscience.jchempaint.SwingPopupModule" />
	<field name="lastAtomPopupedFor" class="org.openscience.jchempaint.SwingPopupModule" />
	<field name="ID" class="org.openscience.jchempaint.SwingPopupModule" />
	<class name="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.CMLLog getLog()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Nodes removeChildren()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getDescendants(java.lang.String,java.lang.String,boolean)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void appendChild(nu.xom.Node)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setLog(org.xmlcml.cml.base.CMLLog)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Elements getChildCMLElements(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void serialize(java.io.OutputStream,int)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getElements(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getDescendants()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void addIds(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void insertChild(nu.xom.Node,int)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void removeAttribute(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Element getFirstCMLChild(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Attribute makeCMLXAttribute(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="int getCMLChildCount(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getStringContent()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="int compareTo(java.lang.Object)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.Object getProperty(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="int compareTo(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void replaceByChildren()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void addNamespaceDeclaration(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setAttribute(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getDescendantCMLElementsById(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setNamespaceURI(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void unknownAttributeName(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void init()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getAttributeGroupName(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyChildrenFromTo(nu.xom.Element,nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.AbstractTool getTool()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void debug(java.io.OutputStream,int)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setTool(org.xmlcml.cml.base.AbstractTool)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyAttributesFrom(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getNamespaceURIForPrefix(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getElementsById(java.lang.String,boolean)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setNamespacePrefix(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void addRemove(org.xmlcml.cml.base.CMLAttribute,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyAttributesFromTo(nu.xom.Element,nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void debug()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void debug(int)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setProperty(java.lang.String,java.lang.Object)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.CMLElement getOldestCMLAncestor()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Nodes cmlQuery(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setCMLXAttribute(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="nu.xom.Element getChildCMLElement(java.lang.String,int)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getChildCMLElements()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getCMLAttributeValue(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void replaceChild(nu.xom.Node,nu.xom.Node)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setStringContent(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.Map getPropertyMap()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void resetId(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getPrefixForNamespace(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void debug(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getDescendants(java.lang.String,boolean)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.CMLElement createCMLElement(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.util.List getPropertyNames()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyProperties(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void addToLog(java.lang.Throwable,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getCanonicalString()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="java.lang.String getAncestry()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyNamespaces(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setLocalName(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="org.xmlcml.cml.base.CMLElement getOrCreateChild(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void detach()" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void removeNamespaceDeclaration(java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void addToLog(org.xmlcml.cml.base.CMLLog$Severity,java.lang.String)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void copyChildrenFrom(nu.xom.Element)" class="org.xmlcml.cml.base.CMLElement" />
	<method signature="void setPropertyMap(java.util.Map)" class="org.xmlcml.cml.base.CMLElement" />
	<field name="attributeFactory" class="org.xmlcml.cml.base.CMLElement" />
	<field name="log" class="org.xmlcml.cml.base.CMLElement" />
	<field name="idMap" class="org.xmlcml.cml.base.CMLElement" />
	<field name="nodeFactory" class="org.xmlcml.cml.base.CMLElement" />
	<field name="tool" class="org.xmlcml.cml.base.CMLElement" />
	<field name="propertyMap" class="org.xmlcml.cml.base.CMLElement" />
	<field name="logger" class="org.xmlcml.cml.base.CMLElement" />
	<field name="ID" class="org.xmlcml.cml.base.CMLElement" />
	<class name="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemCompoundXMLFormat" />
	<class name="org.openscience.jchempaint.renderer.elements.LineElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="x2" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="width" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="y2" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="x1" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<field name="y1" class="org.openscience.jchempaint.renderer.elements.LineElement" />
	<class name="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReactionScheme newReactionScheme()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemFile newChemFile()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAminoAcid newAminoAcid()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule(int,int,int,int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron newSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(java.lang.String,int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemObject newChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(java.lang.String,int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron newSingleElectron()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer(int,int,int,int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBMonomer newPDBMonomer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(int,java.lang.String,int,double,double)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBStructure newPDBStructure()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ILonePair newLonePair(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Order,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReaction newReaction()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBioPolymer newBioPolymer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBPolymer newPDBPolymer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemModel newChemModel()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.DefaultChemObjectBuilder getInstance()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IFragmentAtom newFragmentAtom()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPolymer newPolymer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ICrystal newCrystal()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer newElectronContainer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMapping newMapping(org.openscience.cdk.interfaces.IChemObject,org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IIsotope newIsotope(int,java.lang.String,double,double)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAdductFormula newAdductFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(java.lang.String,java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomParity newAtomParity(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IStrand newStrand()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IReactionSet newReactionSet()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ILonePair newLonePair()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet newMolecularFormulaSet()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence newChemSequence()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula newMolecularFormula()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecule newMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom[],org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomType newAtomType(java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtom newAtom()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IChemObject newChemObject()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainerSet newAtomContainerSet()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.ICrystal newCrystal(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IElement newElement(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet newRingSet()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAdductFormula newAdductFormula()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet newMolecularFormulaSet(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMonomer newMonomer()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer newAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IRing newRing(int,java.lang.String)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom newPseudoAtom()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet newMoleculeSet()" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IPDBAtom newPDBAtom(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<method signature="org.openscience.cdk.interfaces.IBond newBond(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<field name="instance" class="org.openscience.cdk.DefaultChemObjectBuilder" />
	<class name="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian98Format" />
	<class name="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void removeAtomById(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void removeAtoms(org.xmlcml.cml.element.CMLMap,org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet union(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet symmetricDifference(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet createFromMolecules(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtom[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtom(int)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet getAtomSetById(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule,java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtoms(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void removeAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void setChemicalElements(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void translate2D(org.xmlcml.euclid.Real2)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="int size()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.lang.String[] getAtomIDs()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.Point3 getCentroid3(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.util.Map splitByElements()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.Real3Range calculateRange3(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="int compareTo(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet getAtomSetById(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.Real2 overlap2DCentroids(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet getAtomSetByElementType(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void setMolecule(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void labelAtoms(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtomId(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet getMappedAtomSet(org.xmlcml.cml.element.CMLMap,org.xmlcml.cml.element.CMLAtomSet,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.util.List getVector2D()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtom(org.xmlcml.cml.element.CMLAtom,boolean)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void removeAtomSet(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void translate3D(org.xmlcml.euclid.Vector3)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLFormula getCalculatedFormula(org.xmlcml.cml.element.CMLMolecule$HydrogenControl)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="int getCalculatedFormalCharge()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void setVector2D(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtoms(org.xmlcml.cml.element.CMLAtom[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.RealMatrix getDistanceMatrix(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="boolean contains(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="boolean hasContentEqualTo(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void removeAtoms(org.xmlcml.cml.element.CMLMap,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.lang.String[] complementByAtomId(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.Real2 getCentroid2D()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void transform(org.xmlcml.euclid.Transform2)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLMap getMap(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet createFromAtoms(java.util.List)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet complement(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void updateContent()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.euclid.Point3Vector getCoordinates3(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void addAtomSet(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet includeElementTypes(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.lang.String[] symmetricDifferenceByAtomId(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtom getMappedAtom(org.xmlcml.cml.element.CMLMap,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet excludeElementTypes(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtomById(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void scale2D(double)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.lang.String[] intersectionByAtomId(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="void &lt;init&gt;(java.util.Set)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="java.lang.String[] unionByAtomId(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet intersection(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="idTable" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="checkDuplicates" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="set" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="logger" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="molecule" class="org.xmlcml.cml.element.CMLAtomSet" />
	<field name="MAX_DIST" class="org.xmlcml.cml.element.CMLAtomSet" />
	<class name="javax.vecmath.Tuple2d" />
	<method signature="void clamp(double,double,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void absolute()" class="javax.vecmath.Tuple2d" />
	<method signature="void clamp(double,double)" class="javax.vecmath.Tuple2d" />
	<method signature="void clampMax(double,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void negate()" class="javax.vecmath.Tuple2d" />
	<method signature="void set(javax.vecmath.Tuple2f)" class="javax.vecmath.Tuple2d" />
	<method signature="void scaleAdd(double,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void clampMax(double)" class="javax.vecmath.Tuple2d" />
	<method signature="void add(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="int hashCode()" class="javax.vecmath.Tuple2d" />
	<method signature="void scaleAdd(double,javax.vecmath.Tuple2d,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void clampMin(double,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void add(javax.vecmath.Tuple2d,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="boolean equals(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="boolean equals(java.lang.Object)" class="javax.vecmath.Tuple2d" />
	<method signature="boolean epsilonEquals(javax.vecmath.Tuple2d,double)" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2f)" class="javax.vecmath.Tuple2d" />
	<method signature="void get(double[])" class="javax.vecmath.Tuple2d" />
	<method signature="void set(double[])" class="javax.vecmath.Tuple2d" />
	<method signature="void sub(javax.vecmath.Tuple2d,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void negate(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void interpolate(javax.vecmath.Tuple2d,javax.vecmath.Tuple2d,double)" class="javax.vecmath.Tuple2d" />
	<method signature="void scale(double,javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void scale(double)" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;clinit&gt;()" class="javax.vecmath.Tuple2d" />
	<method signature="void interpolate(javax.vecmath.Tuple2d,double)" class="javax.vecmath.Tuple2d" />
	<method signature="void set(double,double)" class="javax.vecmath.Tuple2d" />
	<method signature="java.lang.String toString()" class="javax.vecmath.Tuple2d" />
	<method signature="void sub(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void absolute(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;init&gt;()" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;init&gt;(double[])" class="javax.vecmath.Tuple2d" />
	<method signature="void &lt;init&gt;(double,double)" class="javax.vecmath.Tuple2d" />
	<method signature="void clampMin(double)" class="javax.vecmath.Tuple2d" />
	<method signature="void set(javax.vecmath.Tuple2d)" class="javax.vecmath.Tuple2d" />
	<field name="y" class="javax.vecmath.Tuple2d" />
	<field name="x" class="javax.vecmath.Tuple2d" />
	<class name="org.xmlcml.cml.element.CMLBond$Message" />
	<method signature="org.xmlcml.cml.element.CMLBond$Message[] values()" class="org.xmlcml.cml.element.CMLBond$Message" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLBond$Message" />
	<method signature="org.xmlcml.cml.element.CMLBond$Message valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLBond$Message" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBond$Message" />
	<field name="value" class="org.xmlcml.cml.element.CMLBond$Message" />
	<field name="NULL_GRANDPARENT" class="org.xmlcml.cml.element.CMLBond$Message" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLBond$Message" />
	<class name="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemSequence,org.openscience.cdk.ChemSequence$1)" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="void remove()" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="org.openscience.cdk.interfaces.IChemModel next()" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemSequence)" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<field name="this$0" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<field name="pointer" class="org.openscience.cdk.ChemSequence$ChemModelIterator" />
	<class name="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void addAtomArray(org.xmlcml.cml.element.AbstractAtomArray)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="int getFormalCharge()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConciseAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getConcise()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void addFormula(org.xmlcml.cml.element.AbstractFormula)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setFormalCharge(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getInline()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getInlineAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractFormula)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setInline(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLElements getFormulaElements()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setConcise(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setFormalCharge(int)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomArrayElements()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormalChargeAttribute()" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractFormula" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_concise" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_formalcharge" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_inline" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractFormula" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractFormula" />
	<class name="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="java.util.List getPropertyDescendantsByName(java.lang.String)" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="java.util.List getPropertyDescendantsByDictRef(java.util.List,java.lang.String)" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="java.util.List getPropertyDescendants()" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="java.util.List getPropertyDescendants(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPropertyList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPropertyList)" class="org.xmlcml.cml.element.CMLPropertyList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPropertyList" />
	<class name="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLElements getOperatorElements()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void addOperator(org.xmlcml.cml.element.AbstractOperator)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void addParameter(org.xmlcml.cml.element.AbstractParameter)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractExpression)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLElements getParameterElements()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractExpression" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractExpression" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractExpression" />
	<class name="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.GhemicalMMFormat" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa1_0(long,long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void jjCheckNAddStates(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjStopAtPos(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveNfa_0(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void ReInitRounds()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void jjCheckNAddTwoStates(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa5_0(long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa4_0(long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjStartNfa_0(int,long,long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa0_0()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token getNextToken()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token jjFillToken()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa2_0(long,long,long,long,long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void ReInit(org.openscience.cdk.smiles.smarts.parser.SimpleCharStream)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void setDebugStream(java.io.PrintStream)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa3_0(long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void jjAddStates(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjStartNfaWithStates_0(int,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjStopStringLiteralDfa_0(int,long,long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SimpleCharStream)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void jjCheckNAddStates(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa7_0(long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="int jjMoveStringLiteralDfa6_0(long,long)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void ReInit(org.openscience.cdk.smiles.smarts.parser.SimpleCharStream,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SimpleCharStream,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void jjCheckNAdd(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<method signature="void SwitchTo(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjstrLiteralImages" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjnewStateCnt" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjnextStates" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="curLexState" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="lexStateNames" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="input_stream" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="defaultLexState" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjmatchedKind" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="debugStream" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjround" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjrounds" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjmatchedPos" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="jjstateSet" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<field name="curChar" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager" />
	<class name="org.openscience.cdk.io.VASPReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.VASPReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence readChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void close()" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.VASPReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="java.lang.String nextVASPTokenFollowing(java.lang.String)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="java.lang.String nextVASPToken(boolean)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.VASPReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.VASPReader" />
	<field name="representation" class="org.openscience.cdk.io.VASPReader" />
	<field name="acell" class="org.openscience.cdk.io.VASPReader" />
	<field name="natom_type" class="org.openscience.cdk.io.VASPReader" />
	<field name="natom" class="org.openscience.cdk.io.VASPReader" />
	<field name="rprim" class="org.openscience.cdk.io.VASPReader" />
	<field name="repVal" class="org.openscience.cdk.io.VASPReader" />
	<field name="ntype" class="org.openscience.cdk.io.VASPReader" />
	<field name="info" class="org.openscience.cdk.io.VASPReader" />
	<field name="inputBuffer" class="org.openscience.cdk.io.VASPReader" />
	<field name="fieldVal" class="org.openscience.cdk.io.VASPReader" />
	<field name="line" class="org.openscience.cdk.io.VASPReader" />
	<field name="logger" class="org.openscience.cdk.io.VASPReader" />
	<field name="anames" class="org.openscience.cdk.io.VASPReader" />
	<field name="st" class="org.openscience.cdk.io.VASPReader" />
	<class name="org.openscience.cdk.io.setting.OptionIOSetting" />
	<method signature="java.util.List getOptions()" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<method signature="void setSetting(int)" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.util.List,java.lang.String)" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<method signature="void setSetting(java.lang.String)" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<field name="settings" class="org.openscience.cdk.io.setting.OptionIOSetting" />
	<class name="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<field name="isRXN" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MDLRXNV3000Format" />
	<class name="org.xmlcml.cml.element.CMLObservation" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLObservation" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLObservation" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLObservation)" class="org.xmlcml.cml.element.CMLObservation" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLObservation" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLObservation" />
	<class name="org.xmlcml.molutil.ChemicalElement$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<method signature="org.xmlcml.molutil.ChemicalElement$Type valueOf(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<method signature="org.xmlcml.molutil.ChemicalElement$Type[] values()" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="LANTHANIDE" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="ACTINIDE" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="HALOGEN" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="PBLOCK" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="GROUP_B" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="SEMI_METAL" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="$VALUES" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="GROUP_A" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="METAL" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="METAL_NOT_SEMI_METAL" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="TRANSITION_METAL" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="NON_METAL" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<field name="ROW" class="org.xmlcml.molutil.ChemicalElement$Type" />
	<class name="org.xmlcml.euclid.Real2Interval" />
	<method signature="double[] offsetsTo(org.xmlcml.euclid.Real2Interval)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="double[] scalesTo(org.xmlcml.euclid.Real2Interval)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="double[] offsetsTo(org.xmlcml.euclid.Real2Interval,double[])" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealInterval,org.xmlcml.euclid.RealInterval)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2Interval)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="double[] offsetsTo(org.xmlcml.euclid.Real2Interval,double)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="org.xmlcml.euclid.Real2 midPoint()" class="org.xmlcml.euclid.Real2Interval" />
	<method signature="double scaleTo(org.xmlcml.euclid.Real2Interval)" class="org.xmlcml.euclid.Real2Interval" />
	<field name="yInterval" class="org.xmlcml.euclid.Real2Interval" />
	<field name="xInterval" class="org.xmlcml.euclid.Real2Interval" />
	<class name="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<method signature="java.util.List readAtomTypes(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<method signature="void setInputStream(java.io.InputStream)" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<field name="ins" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<field name="logger" class="org.openscience.cdk.config.OWLBasedAtomTypeConfigurator" />
	<class name="org.openscience.jchempaint.action.CreateSmilesAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<method signature="java.lang.String getSmiles(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<method signature="java.lang.String getChiralSmiles(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<field name="frame" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<field name="dialog" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.CreateSmilesAction" />
	<class name="org.openscience.jchempaint.GT" />
	<method signature="void setDoTranslate(boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="void addBundle(java.lang.String,java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="org.openscience.jchempaint.GT$Language[] getLanguageList()" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,int)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,int,boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String findClosest(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="void ignoreApplicationBundle()" class="org.openscience.jchempaint.GT" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String getString(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="void setLanguagePath(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String escapeHTML(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,java.lang.String,boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,java.lang.Object[])" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String getLanguage()" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String getString(java.lang.String,java.lang.Object[])" class="org.openscience.jchempaint.GT" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.GT" />
	<method signature="void addBundles(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="void setLanguage(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,java.lang.Object[],boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String getSupported(java.lang.String,boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String,boolean)" class="org.openscience.jchempaint.GT" />
	<method signature="boolean getDoTranslate()" class="org.openscience.jchempaint.GT" />
	<method signature="void getTranslation(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String _(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.GT" />
	<method signature="org.openscience.jchempaint.GT$Language[] createLanguageList()" class="org.openscience.jchempaint.GT" />
	<method signature="java.lang.String getStringNoExtraction(java.lang.String)" class="org.openscience.jchempaint.GT" />
	<method signature="org.openscience.jchempaint.GT getTextWrapper()" class="org.openscience.jchempaint.GT" />
	<field name="languageList" class="org.openscience.jchempaint.GT" />
	<field name="translationResourcesCount" class="org.openscience.jchempaint.GT" />
	<field name="ignoreApplicationBundle" class="org.openscience.jchempaint.GT" />
	<field name="doTranslate" class="org.openscience.jchempaint.GT" />
	<field name="logger" class="org.openscience.jchempaint.GT" />
	<field name="language" class="org.openscience.jchempaint.GT" />
	<field name="translationResources" class="org.openscience.jchempaint.GT" />
	<field name="getTextWrapper" class="org.openscience.jchempaint.GT" />
	<class name="org.openscience.cdk.charges.StabilizationCharges" />
	<method signature="double calculatePositive(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.StabilizationCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.StabilizationCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.StabilizationCharges" />
	<method signature="int calculateBondsToAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.StabilizationCharges" />
	<class name="org.openscience.cdk.io.setting.StringIOSetting" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.setting.StringIOSetting" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.setting.StringIOSetting" />
	<method signature="void setSetting(java.lang.String)" class="org.openscience.cdk.io.setting.StringIOSetting" />
	<class name="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.io.IChemObjectReader getChemObjectReader()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void set(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void makeIndex()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject previous()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void setChemObjectReader(org.openscience.cdk.io.ISimpleChemObjectReader)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void close()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="int getCurrentRecord()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.io.File getIndexFile(java.lang.String)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.Object readRecord(int)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void add(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.Object first()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="int size()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="boolean hasPrevious()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.Object previous()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject processContent()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void &lt;init&gt;(java.io.File,org.openscience.cdk.interfaces.IChemObjectBuilder,org.openscience.cdk.io.listener.IReaderListener)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="boolean isRecordEnd(java.lang.String)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="long[][] resize(long[][],int)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void finalize()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject first()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void indexTheFile()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="int nextIndex()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject readRecord(int)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void saveIndex(java.io.File)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void add(java.lang.Object)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject last()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="int previousIndex()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void &lt;init&gt;(java.io.File,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void set(java.lang.Object)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="boolean isIndexCreated()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.String readContent(int)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createChemObjectReader()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void setIndexCreated(boolean)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="java.lang.Object last()" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<method signature="void loadIndex(java.io.File)" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="index" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="chemObjectReader" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="headerOptions" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="indexCreated" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="builder" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="records" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="filename" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="logger" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="raFile" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="b" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="currentRecord" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<field name="indexVersion" class="org.openscience.cdk.io.random.RandomAccessReader" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<field name="groupNumber" class="org.openscience.cdk.isomorphism.matchers.smarts.PeriodicGroupNumberAtom" />
	<class name="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void setRdFields(java.util.Map)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void writeReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="java.lang.String formatMDLInt(int,int)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void writeReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<method signature="void writeMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.io.MDLRXNWriter" />
	<field name="rdFields" class="org.openscience.cdk.io.MDLRXNWriter" />
	<field name="writer" class="org.openscience.cdk.io.MDLRXNWriter" />
	<field name="logger" class="org.openscience.cdk.io.MDLRXNWriter" />
	<field name="reactionNumber" class="org.openscience.cdk.io.MDLRXNWriter" />
	<class name="org.openscience.jchempaint.action.ChangeValenceAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeValenceAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeValenceAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeValenceAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeValenceAction" />
	<class name="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void infoString(java.lang.String)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,int)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void setStackLength(int)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,int)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void configureLog4j()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,boolean)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,double)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,double)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void dumpClasspath()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,boolean)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,int)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,boolean)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warnString(java.lang.String)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void dumpSystemProperties()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debugString(java.lang.String)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void printToSTDOUT(java.lang.String,java.lang.String)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void fatal(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,boolean)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void errorString(java.lang.String)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,double)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,double)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,int)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debugThrowable(java.lang.Throwable)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="boolean isDebugEnabled()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="org.openscience.cdk.tools.ILoggingTool create(java.lang.Class)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void &lt;init&gt;(java.lang.Class)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.LoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="classname" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="toSTDOUT" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="DEFAULT_STACK_LENGTH" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="stackLength" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="doDebug" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="logger" class="org.openscience.cdk.tools.LoggingTool" />
	<field name="log4jLogger" class="org.openscience.cdk.tools.LoggingTool" />
	<class name="org.openscience.cdk.charges.IElectronicPropertyCalculator" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.IElectronicPropertyCalculator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.IElectronicPropertyCalculator" />
	<class name="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void processIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void setOutputWriter(java.io.Writer)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void frameRead(org.openscience.cdk.io.ReaderEvent)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void setInputReader(java.io.Reader)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<method signature="void setLevel(int)" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<field name="level" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<field name="out" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<field name="in" class="org.openscience.cdk.io.listener.TextGUIListener" />
	<class name="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="boolean[] split(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void setCMLValue(boolean[])" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void checkValue(boolean[])" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.BooleanArraySTAttribute)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="boolean[] getIntegerArray()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<field name="bb" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<field name="length" class="org.xmlcml.cml.base.BooleanArraySTAttribute" />
	<class name="org.openscience.cdk.formula.AdductFormula$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.formula.AdductFormula)" class="org.openscience.cdk.formula.AdductFormula$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.formula.AdductFormula$1" />
	<field name="this$0" class="org.openscience.cdk.formula.AdductFormula$1" />
	<class name="org.openscience.cdk.io.PDBWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void writeCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.PDBWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PDBWriter" />
	<field name="SERIAL_FORMAT" class="org.openscience.cdk.io.PDBWriter" />
	<field name="ATOM_NAME_FORMAT" class="org.openscience.cdk.io.PDBWriter" />
	<field name="writer" class="org.openscience.cdk.io.PDBWriter" />
	<field name="POSITION_FORMAT" class="org.openscience.cdk.io.PDBWriter" />
	<class name="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Mapping[] values()" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Mapping valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<field name="FROM_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<field name="FROM_SPECTATOR_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<field name="MAP_REACTION_ATOM_MAP_COMPLETE" class="org.xmlcml.cml.element.CMLReaction$Mapping" />
	<class name="org.xmlcml.cml.element.CMLActionList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLActionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLActionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLActionList)" class="org.xmlcml.cml.element.CMLActionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLActionList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLActionList" />
	<class name="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d calculate3DCoordinates3(javax.vecmath.Point3d,javax.vecmath.Point3d,javax.vecmath.Point3d,javax.vecmath.Point3d,double)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d rescaleBondLength(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d[] calculate3DCoordinates0(javax.vecmath.Point3d,int,double)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d[] calculate3DCoordinates1(javax.vecmath.Point3d,javax.vecmath.Point3d,javax.vecmath.Point3d,int,double,double)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d[] calculate3DCoordinatesForLigands(org.openscience.cdk.AtomContainer,org.openscience.cdk.interfaces.IAtom,int,double,double)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="void add3DCoordinates1(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Point3d[] calculate3DCoordinates2(javax.vecmath.Point3d,javax.vecmath.Point3d,javax.vecmath.Point3d,int,double,double)" class="org.openscience.cdk.geometry.AtomTools" />
	<method signature="javax.vecmath.Vector3d getNonColinearVector(javax.vecmath.Vector3d)" class="org.openscience.cdk.geometry.AtomTools" />
	<field name="YV" class="org.openscience.cdk.geometry.AtomTools" />
	<field name="XV" class="org.openscience.cdk.geometry.AtomTools" />
	<field name="TETRAHEDRAL_ANGLE" class="org.openscience.cdk.geometry.AtomTools" />
	<class name="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void debugLigands()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setAtomID(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setElementType(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomArray)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setX2(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void deleteLigandBonds()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom removeAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setX3(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void indexAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="int size()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setOccupancy(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="java.util.Map getAtomMap()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom insertAtom(org.xmlcml.cml.element.CMLAtom,int)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom removeChild(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setZ3(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setZFract(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void sort(org.xmlcml.cml.element.CMLFormula$Sort)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom appendChild(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void indexAtoms()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setCount(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="java.util.List deleteLigandBonds(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void clearLigandInfo()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLBondArray getBondArray()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom addAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setXFract(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setElementTypeAndCount(java.lang.String[],double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtomById(java.lang.String)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setY3(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="java.util.List getAtoms(int,java.lang.String)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void detach()" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setYFract(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="java.lang.String generateConcise(int)" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setY2(double[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setHydrogenCount(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<method signature="void setFormalCharge(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomArray" />
	<field name="atomMap" class="org.xmlcml.cml.element.CMLAtomArray" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtomArray" />
	<field name="logger" class="org.xmlcml.cml.element.CMLAtomArray" />
	<class name="org._3pq.jgrapht.graph.EdgeListFactory" />
	<method signature="java.util.List createEdgeList(java.lang.Object)" class="org._3pq.jgrapht.graph.EdgeListFactory" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.EdgeListFactory" />
	<class name="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="void setRingSet(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="boolean inSameAromaticRing(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="boolean isAromaticRing(org.openscience.cdk.interfaces.IRing)" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<field name="ringSet" class="org.openscience.cdk.atomtype.EStateAtomTypeMatcher" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression" />
	<class name="org.xmlcml.cml.element.CMLReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactionStepList)" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactionStepList" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="void addEdgeToTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="void removeEdgeFromTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph,org._3pq.jgrapht.graph.AbstractBaseGraph$1)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<field name="this$0" class="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics" />
	<class name="org.openscience.jchempaint.JCPMenuTextMaker" />
	<method signature="java.lang.String getText(java.lang.String)" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<method signature="void init(java.lang.String)" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<method signature="org.openscience.jchempaint.JCPMenuTextMaker getInstance(java.lang.String)" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<field name="instance" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<field name="entries" class="org.openscience.jchempaint.JCPMenuTextMaker" />
	<class name="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.RawCopyFormat" />
	<class name="org.openscience.jchempaint.renderer.elements.path.Close" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.elements.path.Close" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.Close" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.Close" />
	<class name="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MOPAC93Format" />
	<class name="org.openscience.jchempaint.renderer.elements.path.Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.Type valueOf(java.lang.String)" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.Type[] values()" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="CubicTo" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="$VALUES" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="LineTo" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="QuadTo" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="Close" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<field name="MoveTo" class="org.openscience.jchempaint.renderer.elements.path.Type" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightEdgeEvent" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightEdgeEvent" />
	<method signature="void setEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightEdgeEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightEdgeEvent" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.traverse.CrossComponentIterator$FlyweightEdgeEvent" />
	<class name="org.openscience.cdk.geometry.IRDFWeightFunction" />
	<method signature="double calculate(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.IRDFWeightFunction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.IRDFWeightFunction" />
	<class name="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix$Type valueOf(java.lang.String)" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix$Type[] values()" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="UNKNOWN" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="i" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="LOWER_TRIANGLE" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="SYMMETRIC" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="OUTER_PRODUCT" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="DIAGONAL" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="$VALUES" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<field name="UPPER_TRIANGLE" class="org.xmlcml.euclid.RealSquareMatrix$Type" />
	<class name="org.xmlcml.cml.element.CMLParameter" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLParameter" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLParameter)" class="org.xmlcml.cml.element.CMLParameter" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLParameter" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLParameter" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLParameter" />
	<field name="NS" class="org.xmlcml.cml.element.CMLParameter" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.NonCHHeavyAtom" />
	<class name="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<method signature="org.xmlcml.cml.element.CMLEigen$Orientation[] values()" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<method signature="org.xmlcml.cml.element.CMLEigen$Orientation valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<field name="value" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<field name="VALUES_COLS" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<field name="VALUES_ROWS" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<field name="desc" class="org.xmlcml.cml.element.CMLEigen$Orientation" />
	<class name="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.RealRange getXRange()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void add(org.xmlcml.euclid.Axis$Axis3,double)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealRange,org.xmlcml.euclid.RealRange,org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.RealRange getYRange()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void transformEquals(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void setRanges(org.xmlcml.euclid.RealRange,org.xmlcml.euclid.RealRange,org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.Real3Range plus(org.xmlcml.euclid.Real3Range)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.Point3 getMinPoint3()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real3Range)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void add(org.xmlcml.euclid.Axis$Axis3,org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void add(int,double)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Real3Range)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="boolean includes(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="void add(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.Point3 getMaxPoint3()" class="org.xmlcml.euclid.Real3Range" />
	<method signature="org.xmlcml.euclid.RealRange getZRange()" class="org.xmlcml.euclid.Real3Range" />
	<field name="xyzrange" class="org.xmlcml.euclid.Real3Range" />
	<class name="org.openscience.cdk.graph.rebond.Point" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.graph.rebond.Point" />
	<method signature="double getDimValue(int)" class="org.openscience.cdk.graph.rebond.Point" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Point" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.openscience.cdk.graph.rebond.Point" />
	<field name="z" class="org.openscience.cdk.graph.rebond.Point" />
	<field name="y" class="org.openscience.cdk.graph.rebond.Point" />
	<field name="x" class="org.openscience.cdk.graph.rebond.Point" />
	<class name="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian90Format" />
	<class name="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="int compareTo(nu.xom.Attribute)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getSummary()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setDescription(java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLAttribute)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getDescription()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getAttributeGroupName()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getJavaSetMethod()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setAttributeGroupName(java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setSummary(java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="org.xmlcml.cml.base.CMLType getCmlType()" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setCmlType(org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="void setSchemaType(org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.CMLAttribute" />
	<method signature="org.xmlcml.cml.base.CMLType getSchemaType()" class="org.xmlcml.cml.base.CMLAttribute" />
	<field name="summary" class="org.xmlcml.cml.base.CMLAttribute" />
	<field name="cmlType" class="org.xmlcml.cml.base.CMLAttribute" />
	<field name="attributeGroupName" class="org.xmlcml.cml.base.CMLAttribute" />
	<field name="description" class="org.xmlcml.cml.base.CMLAttribute" />
	<field name="logger" class="org.xmlcml.cml.base.CMLAttribute" />
	<class name="org.openscience.cdk.io.setting.IntegerIOSetting" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.setting.IntegerIOSetting" />
	<method signature="int getSettingValue()" class="org.openscience.cdk.io.setting.IntegerIOSetting" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.setting.IntegerIOSetting" />
	<method signature="void setSetting(java.lang.String)" class="org.openscience.cdk.io.setting.IntegerIOSetting" />
	<class name="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableHeaderCell)" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="org.xmlcml.cml.element.CMLArray createCMLArray()" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableHeaderCell" />
	<class name="org.openscience.jchempaint.applet.JChemPaintEditorApplet" />
	<method signature="void init()" class="org.openscience.jchempaint.applet.JChemPaintEditorApplet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.applet.JChemPaintEditorApplet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.applet.JChemPaintEditorApplet" />
	<field name="GUI_APPLET" class="org.openscience.jchempaint.applet.JChemPaintEditorApplet" />
	<class name="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="double getIntensity()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getFormula()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="double getMass()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void &lt;init&gt;(double,double)" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void setIntensity(double)" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IMolecularFormula,double)" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void setFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.IsotopeContainer" />
	<method signature="void setMass(double)" class="org.openscience.cdk.formula.IsotopeContainer" />
	<field name="form" class="org.openscience.cdk.formula.IsotopeContainer" />
	<field name="inte" class="org.openscience.cdk.formula.IsotopeContainer" />
	<field name="masOs" class="org.openscience.cdk.formula.IsotopeContainer" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="int getNumber()" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="void setNumber(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<field name="number" class="org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber" />
	<class name="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.DOCK5Format" />
	<class name="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void checkValue(int[])" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="int[] split(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.IntArraySTAttribute)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="int[] getIntArray()" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<method signature="void setCMLValue(int[])" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<field name="ii" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<field name="length" class="org.xmlcml.cml.base.IntArraySTAttribute" />
	<class name="org.xmlcml.euclid.Axis" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Axis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Axis" />
	<class name="org.openscience.cdk.graph.invariant.CanonicalLabeler$2" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$2" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.invariant.CanonicalLabeler)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$2" />
	<field name="this$0" class="org.openscience.cdk.graph.invariant.CanonicalLabeler$2" />
	<class name="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void close()" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.GhemicalMMReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.GhemicalMMReader" />
	<field name="input" class="org.openscience.cdk.io.GhemicalMMReader" />
	<field name="logger" class="org.openscience.cdk.io.GhemicalMMReader" />
	<class name="org.openscience.cdk.interfaces.IAtom" />
	<method signature="java.lang.Integer getHydrogenCount()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="javax.vecmath.Point2d getPoint2d()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setPoint2d(javax.vecmath.Point2d)" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setCharge(java.lang.Double)" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="java.lang.Double getCharge()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="javax.vecmath.Point3d getPoint3d()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setPoint3d(javax.vecmath.Point3d)" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="javax.vecmath.Point3d getFractionalPoint3d()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="java.lang.Integer getStereoParity()" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setStereoParity(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setFractionalPoint3d(javax.vecmath.Point3d)" class="org.openscience.cdk.interfaces.IAtom" />
	<method signature="void setHydrogenCount(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAtom" />
	<class name="org.xmlcml.cml.element.CMLBandList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBandList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBandList)" class="org.xmlcml.cml.element.CMLBandList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBandList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBandList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBandList" />
	<class name="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<method signature="org.xmlcml.cml.element.CMLProperty$DictRef valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<method signature="org.xmlcml.cml.element.CMLProperty$DictRef get(java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<method signature="org.xmlcml.cml.element.CMLProperty$DictRef[] values()" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="AUTO_IGNITION" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="BPT" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="VISCOSITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="LOGP" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="MOLARMASS" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="KH" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="PKA" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="SOLUBILITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="v" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="PKB" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="RELATIVE_DENSITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="WATER_SOLUBILITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="RELATIVE_VAPOUR_DENSITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="FLASH_POINT" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="VAPOR_PRESSURE" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="DENSITY" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="LOGPOW" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="APPEARANCE" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="DIPOLE" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="map" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="MPT" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="MWT" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<field name="REFRACTIVE_INDEX" class="org.xmlcml.cml.element.CMLProperty$DictRef" />
	<class name="org.openscience.cdk.io.FormatFactory" />
	<method signature="org.openscience.cdk.io.formats.IChemFormat guessFormat(java.io.Reader)" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="org.openscience.cdk.io.formats.IChemFormat guessFormat(java.io.InputStream)" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="void registerFormat(org.openscience.cdk.io.formats.IChemFormatMatcher)" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="java.util.List getFormats()" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="void loadFormats()" class="org.openscience.cdk.io.FormatFactory" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.io.FormatFactory" />
	<field name="headerLength" class="org.openscience.cdk.io.FormatFactory" />
	<field name="IO_FORMATS_LIST" class="org.openscience.cdk.io.FormatFactory" />
	<field name="formats" class="org.openscience.cdk.io.FormatFactory" />
	<class name="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<field name="container" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<field name="lastMol" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<field name="imdlr" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<field name="nextIsKnown" class="org.openscience.cdk.io.iterator.IteratingMDLConformerReader" />
	<class name="org.xmlcml.cml.element.CMLReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactiveCentre)" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactiveCentre" />
	<class name="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void addMoleculeList(org.xmlcml.cml.element.AbstractMoleculeList)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeListElements()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getListElements()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void addList(org.xmlcml.cml.element.AbstractList)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMoleculeList)" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMoleculeList" />
	<class name="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemCompoundsXMLFormat" />
	<class name="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSubstance)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElements getAmountElements()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void addAmount(org.xmlcml.cml.element.AbstractAmount)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstance" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSubstance" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSubstance" />
	<class name="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setFormat(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addReactiveCentre(org.xmlcml.cml.element.AbstractReactiveCentre)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getSpectatorListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addTransitionState(org.xmlcml.cml.element.AbstractTransitionState)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getElectronMap()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactantListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addSubstanceList(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="double getYield()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getConditionListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getMapElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getFormat()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setElectronMap(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addMechanism(org.xmlcml.cml.element.AbstractMechanism)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setAtomMap(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getBondMap()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addPropertyList(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setBondMap(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addSpectatorList(org.xmlcml.cml.element.AbstractSpectatorList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getIdentifierElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getAtomMap()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addObject(org.xmlcml.cml.element.AbstractObject)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomMapAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactiveCentreElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getObjectElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormatAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYieldAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getElectronMapAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addIdentifier(org.xmlcml.cml.element.AbstractIdentifier)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addReactantList(org.xmlcml.cml.element.AbstractReactantList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReaction)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getProductListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addMap(org.xmlcml.cml.element.AbstractMap)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addConditionList(org.xmlcml.cml.element.AbstractConditionList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondMapAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setYield(double)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getTransitionStateElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceListElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLElements getMechanismElements()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void addProductList(org.xmlcml.cml.element.AbstractProductList)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="void setYield(java.lang.String)" class="org.xmlcml.cml.element.AbstractReaction" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_bondmap" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_yield" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_format" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_atommap" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReaction" />
	<field name="_att_electronmap" class="org.xmlcml.cml.element.AbstractReaction" />
	<class name="org.openscience.jchempaint.renderer.elements.IRenderingVisitor" />
	<method signature="void visit(org.openscience.jchempaint.renderer.elements.IRenderingElement)" class="org.openscience.jchempaint.renderer.elements.IRenderingVisitor" />
	<method signature="void setTransform(java.awt.geom.AffineTransform)" class="org.openscience.jchempaint.renderer.elements.IRenderingVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.IRenderingVisitor" />
	<class name="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<method signature="org.openscience.cdk.io.IChemObjectReader$Mode valueOf(java.lang.String)" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<method signature="org.openscience.cdk.io.IChemObjectReader$Mode[] values()" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<field name="RELAXED" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<field name="$VALUES" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<field name="STRICT" class="org.openscience.cdk.io.IChemObjectReader$Mode" />
	<class name="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="org.openscience.cdk.geometry.surface.Triangle[] repTet()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="javax.vecmath.Point3d[] getTessAsPoint3ds()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="org.openscience.cdk.geometry.surface.Triangle[] getTessAsTriangles()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="void doTessellate()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="void normalize(javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="int getNumberOfTriangles()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="javax.vecmath.Point3d midpoint(javax.vecmath.Point3d,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="org.openscience.cdk.geometry.surface.Triangle[] repOct()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<method signature="org.openscience.cdk.geometry.surface.Triangle[] repIco()" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<field name="maxlevel" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<field name="oldtess" class="org.openscience.cdk.geometry.surface.Tessellate" />
	<class name="org.xmlcml.cml.element.CMLSystem" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSystem" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSystem" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSystem)" class="org.xmlcml.cml.element.CMLSystem" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSystem" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSystem" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSystem" />
	<class name="org.xmlcml.cml.base.CMLSimpleType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLSimpleType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLSimpleType" />
	<class name="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="java.util.Map getProperties()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void removeAllIsotopes()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void setCharge(java.lang.Integer)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void removeProperty(java.lang.Object)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void setProperties(java.util.Map)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void removeIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="int getIsotopeCount(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula addIsotope(org.openscience.cdk.interfaces.IIsotope,int)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="java.lang.Integer getCharge()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula addIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="java.lang.Iterable isotopes()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="int getIsotopeCount()" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula add(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="java.lang.Object getProperty(java.lang.Object)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<method signature="void setProperty(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.interfaces.IMolecularFormula" />
	<class name="org.openscience.cdk.AtomContainer$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainer$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$1" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$1" />
	<class name="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveGallium(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean bothNeighborsAreSp2(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveNitrogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveSilicon(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="int countAttachedDoubleBonds(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean hasOneSingleElectron(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean hasAromaticBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IRing getRing(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveBorons(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveOrganometallicCenters(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveHalogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveSelenium(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveCommonSalts(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="int countExplicitHydrogens(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveNitrogenRadicals(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isAcceptable(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveCarbons(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.atomtype.CDKAtomTypeMatcher getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder,int)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType getAtomType(java.lang.String)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveOxygenRadicals(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean atLeastTwoNeighborsAreSp2(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.atomtype.CDKAtomTypeMatcher getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="int countSingleElectrons(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveSulphurs(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isRingAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="int countAttachedDoubleBonds(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isCarboxylate(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveNobelGases(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveHydrogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceivePhosphors(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isThioAmide(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveBeryllium(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean hasHybridization(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveCarbonRadicals(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isHueckelNumber(int)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isAmide(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveGermanium(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder,int)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="boolean isCharged(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveLithium(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType perceiveOxygens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<field name="REQUIRE_NOTHING" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<field name="factories" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<field name="mode" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<field name="REQUIRE_EXPLICIT_HYDROGENS" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<field name="factory" class="org.openscience.cdk.atomtype.CDKAtomTypeMatcher" />
	<class name="org.xmlcml.cml.element.CMLEigen" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMatrix,org.xmlcml.cml.element.CMLArray,org.xmlcml.cml.element.CMLEigen$Orientation)" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="org.xmlcml.cml.element.CMLArray getEigenvalues()" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLEigen)" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="org.xmlcml.cml.element.CMLMatrix getEigenvectors()" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="org.xmlcml.euclid.RealArray getEigenvector(int)" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="int getSize()" class="org.xmlcml.cml.element.CMLEigen" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLEigen" />
	<field name="NS" class="org.xmlcml.cml.element.CMLEigen" />
	<class name="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer$1)" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<method signature="org.openscience.cdk.interfaces.IBond next()" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainer$BondIterator" />
	<class name="org.xmlcml.cml.base.AbstractTool" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.AbstractTool" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.AbstractTool" />
	<class name="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="org.openscience.cdk.interfaces.IRing addRingToEmptyCanvas(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="org.openscience.cdk.interfaces.IRing addRingToBond(org.openscience.cdk.interfaces.IBond,boolean)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay,int,boolean)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<method signature="org.openscience.cdk.interfaces.IRing addRingToAtom(org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.AddRingModule" />
	<field name="addingBenzene" class="org.openscience.jchempaint.controller.AddRingModule" />
	<field name="ringPlacer" class="org.openscience.jchempaint.controller.AddRingModule" />
	<field name="ringSize" class="org.openscience.jchempaint.controller.AddRingModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.AddRingModule" />
	<class name="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyListElements()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTransitionState)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void addPropertyList(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTransitionState" />
	<class name="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void transferChildren(nu.xom.Element,nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void debug(nu.xom.Element,java.io.OutputStream,int)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String getXMLContent(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getNamespaces(nu.xom.Element,java.util.List)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Element parseXML(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Document getXMLResource(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void debugToErr(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String compareAttributesCanonically(nu.xom.Element,nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String getLocalName(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String makeId(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String makeAbstractName(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List generateCombinationList(int)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String toXMLString(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String equalsCanonically(nu.xom.Element,nu.xom.Element,boolean,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getChildNodes(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getCMLElements(nu.xom.Element,java.lang.String,nu.xom.XPathContext)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Node getPrecedingSibling(nu.xom.Node)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String equalsCanonically(nu.xom.Element,nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void BUG(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String getCanonicalString(nu.xom.Node)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Text getLastTextDescendant(nu.xom.Node)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String compareNamespacesCanonically(nu.xom.Element,nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void transferChildrenToParent(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void debug(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String equalsCanonically(nu.xom.Element,nu.xom.Element,boolean)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getQueryNodes(nu.xom.Node,java.lang.String,nu.xom.XPathContext)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void checkPrefixedName(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String capitalize(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String getPrefix(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void debug(nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String normalizeSpace(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.Object[] toArray(nu.xom.Elements,java.lang.Object[])" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String makeCMLName(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getPrefixes(nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String printName(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="double parseFlexibleDouble(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void removeWhitespaceNodes(nu.xom.Element)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Text getFirstTextDescendant(nu.xom.Node)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String compareNonElementNodesCanonically(nu.xom.Node,nu.xom.Node,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="org.xmlcml.cml.base.CMLElement readElementFromResource(java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String equalsCanonically(java.lang.String,nu.xom.Element,boolean)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.lang.String compareChildNodesCanonically(nu.xom.Element,nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="void setXMLContent(nu.xom.Element,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="java.util.List getQueryNodes(nu.xom.Node,java.lang.String)" class="org.xmlcml.cml.base.CMLUtil" />
	<method signature="nu.xom.Node getFollowingSibling(nu.xom.Node)" class="org.xmlcml.cml.base.CMLUtil" />
	<field name="LOG" class="org.xmlcml.cml.base.CMLUtil" />
	<class name="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<method signature="java.awt.Color getAtomColor(org.openscience.cdk.interfaces.IAtom,java.awt.Color)" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<method signature="java.awt.Color getAtomColor(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="DEFAULT" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="HYDROGEN" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="PHOSPHORUS" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="SULPHUR" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="OXYGEN" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="NITROGEN" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<field name="CARBON" class="org.openscience.jchempaint.renderer.color.CDK2DAtomColors" />
	<class name="javax.vecmath.Tuple3d" />
	<method signature="void interpolate(javax.vecmath.Tuple3d,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void add(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void scaleAdd(double,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMin(float)" class="javax.vecmath.Tuple3d" />
	<method signature="void absolute()" class="javax.vecmath.Tuple3d" />
	<method signature="void clamp(double,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void absolute(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="boolean equals(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void negate()" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;init&gt;(double,double,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple3f)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMax(double)" class="javax.vecmath.Tuple3d" />
	<method signature="int hashCode()" class="javax.vecmath.Tuple3d" />
	<method signature="void clamp(float,float,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void set(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void clamp(float,float)" class="javax.vecmath.Tuple3d" />
	<method signature="void get(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void interpolate(javax.vecmath.Tuple3d,javax.vecmath.Tuple3d,float)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMax(double,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void get(double[])" class="javax.vecmath.Tuple3d" />
	<method signature="void set(double[])" class="javax.vecmath.Tuple3d" />
	<method signature="void sub(javax.vecmath.Tuple3d,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void scale(double,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void scaleAdd(double,javax.vecmath.Tuple3d,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void interpolate(javax.vecmath.Tuple3d,float)" class="javax.vecmath.Tuple3d" />
	<method signature="void set(double,double,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void scale(double)" class="javax.vecmath.Tuple3d" />
	<method signature="boolean epsilonEquals(javax.vecmath.Tuple3d,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void clamp(double,double,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;clinit&gt;()" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void sub(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void negate(javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void interpolate(javax.vecmath.Tuple3d,javax.vecmath.Tuple3d,double)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMin(float,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMax(float)" class="javax.vecmath.Tuple3d" />
	<method signature="java.lang.String toString()" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMin(double,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void set(javax.vecmath.Tuple3f)" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMax(float,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;init&gt;()" class="javax.vecmath.Tuple3d" />
	<method signature="void &lt;init&gt;(double[])" class="javax.vecmath.Tuple3d" />
	<method signature="void clampMin(double)" class="javax.vecmath.Tuple3d" />
	<method signature="void add(javax.vecmath.Tuple3d,javax.vecmath.Tuple3d)" class="javax.vecmath.Tuple3d" />
	<field name="z" class="javax.vecmath.Tuple3d" />
	<field name="y" class="javax.vecmath.Tuple3d" />
	<field name="x" class="javax.vecmath.Tuple3d" />
	<class name="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<method signature="org.xmlcml.cml.element.CMLBasisSet$Basis[] values()" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<method signature="org.xmlcml.cml.element.CMLBasisSet$Basis valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<field name="value" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<field name="MINIMAL" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<field name="desc" class="org.xmlcml.cml.element.CMLBasisSet$Basis" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<field name="arg" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<field name="gen" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<field name="next" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<field name="first" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$JJCalls" />
	<class name="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void fatal(java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,int)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,boolean)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void setStackLength(int)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,int)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,double)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,double)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,int)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,boolean)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="boolean isDebugEnabled()" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,double)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void dumpClasspath()" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,double)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,int)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,boolean)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void error(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,boolean)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void info(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void debug(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void dumpSystemProperties()" class="org.openscience.cdk.tools.ILoggingTool" />
	<method signature="void warn(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.ILoggingTool" />
	<field name="DEFAULT_STACK_LENGTH" class="org.openscience.cdk.tools.ILoggingTool" />
	<class name="org.openscience.cdk.IImplementationSpecification" />
	<method signature="java.lang.String getImplementationIdentifier()" class="org.openscience.cdk.IImplementationSpecification" />
	<method signature="java.lang.String getImplementationTitle()" class="org.openscience.cdk.IImplementationSpecification" />
	<method signature="java.lang.String getImplementationVendor()" class="org.openscience.cdk.IImplementationSpecification" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.IImplementationSpecification" />
	<method signature="java.lang.String getSpecificationReference()" class="org.openscience.cdk.IImplementationSpecification" />
	<class name="org.openscience.cdk.graph.rebond.RebondTool" />
	<method signature="boolean isBonded(double,double,double)" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<method signature="void bondAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<method signature="void rebond(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<field name="bondTolerance" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<field name="bspt" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<field name="maxCovalentRadius" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<field name="minBondDistance" class="org.openscience.cdk.graph.rebond.RebondTool" />
	<class name="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="void setRingSet(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getMoleculeSet()" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRingSet()" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="org.openscience.cdk.interfaces.ICrystal getCrystal()" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="void setCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="void setMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="void setReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.interfaces.IChemModel" />
	<method signature="org.openscience.cdk.interfaces.IReactionSet getReactionSet()" class="org.openscience.cdk.interfaces.IChemModel" />
	<class name="org.xmlcml.cml.element.ReactionComponent" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.ReactionComponent" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.ReactionComponent" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.ReactionComponent" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.ReactionComponent" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.ReactionComponent" />
	<class name="org.openscience.cdk.io.setting.BooleanIOSetting" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.setting.BooleanIOSetting" />
	<method signature="boolean isSet()" class="org.openscience.cdk.io.setting.BooleanIOSetting" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.setting.BooleanIOSetting" />
	<method signature="void setSetting(java.lang.String)" class="org.openscience.cdk.io.setting.BooleanIOSetting" />
	<class name="org.openscience.jchempaint.action.PrintAction" />
	<method signature="int print(java.awt.Graphics,java.awt.print.PageFormat,int)" class="org.openscience.jchempaint.action.PrintAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.PrintAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.PrintAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.PrintAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.PrintAction" />
	<class name="org.openscience.cdk.formula.rules.ChargeRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<field name="charge" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.ChargeRule" />
	<class name="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void showMouseCursor(javax.vecmath.Point2d,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<field name="startPoint" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<field name="selection" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.AbstractSelectModule" />
	<class name="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MOPAC97Format" />
	<class name="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<field name="p1" class="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<field name="p2" class="org.openscience.jchempaint.renderer.elements.path.QuadTo" />
	<class name="org.openscience.cdk.tools.manipulator.AtomContainerComparatorBy2DCenter" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.manipulator.AtomContainerComparatorBy2DCenter" />
	<method signature="int compare(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerComparatorBy2DCenter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerComparatorBy2DCenter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerComparatorBy2DCenter" />
	<class name="org._3pq.jgrapht.Edge" />
	<method signature="void setWeight(double)" class="org._3pq.jgrapht.Edge" />
	<method signature="double getWeight()" class="org._3pq.jgrapht.Edge" />
	<method signature="java.lang.Object getTarget()" class="org._3pq.jgrapht.Edge" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.Edge" />
	<method signature="boolean containsVertex(java.lang.Object)" class="org._3pq.jgrapht.Edge" />
	<method signature="java.lang.Object clone()" class="org._3pq.jgrapht.Edge" />
	<method signature="java.lang.Object oppositeVertex(java.lang.Object)" class="org._3pq.jgrapht.Edge" />
	<method signature="java.lang.Object getSource()" class="org._3pq.jgrapht.Edge" />
	<field name="DEFAULT_EDGE_WEIGHT" class="org._3pq.jgrapht.Edge" />
	<class name="org.openscience.cdk.libio.cml.ICMLCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Object)" class="org.openscience.cdk.libio.cml.ICMLCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IBond,java.lang.Object)" class="org.openscience.cdk.libio.cml.ICMLCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtom,java.lang.Object)" class="org.openscience.cdk.libio.cml.ICMLCustomizer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.cml.ICMLCustomizer" />
	<class name="org.openscience.cdk.graph.matrix.AdjacencyMatrix" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.matrix.AdjacencyMatrix" />
	<method signature="int[][] getMatrix(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.matrix.AdjacencyMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.matrix.AdjacencyMatrix" />
	<class name="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.TextGroupElement,java.lang.String,org.openscience.jchempaint.renderer.elements.TextGroupElement$Position)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.TextGroupElement,java.lang.String,java.lang.String,org.openscience.jchempaint.renderer.elements.TextGroupElement$Position)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<field name="text" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<field name="subscript" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<field name="position" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<field name="this$0" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Child" />
	<class name="org.xmlcml.cml.element.CMLElectron" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLElectron" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLElectron)" class="org.xmlcml.cml.element.CMLElectron" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLElectron" />
	<method signature="int getElectronCount(java.lang.String)" class="org.xmlcml.cml.element.CMLElectron" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLElectron" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLElectron" />
	<field name="NS" class="org.xmlcml.cml.element.CMLElectron" />
	<field name="PI" class="org.xmlcml.cml.element.CMLElectron" />
	<class name="org.openscience.jchempaint.renderer.generators.MergeAtomsGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.MergeAtomsGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.MergeAtomsGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.MergeAtomsGenerator" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$Tuple" />
	<method signature="double getDimValue(int)" class="org.openscience.cdk.graph.rebond.Bspt$Tuple" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$Tuple" />
	<class name="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="void remove()" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="nu.xom.Element next()" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="boolean hasNext()" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLElements,java.util.List)" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<method signature="java.lang.Object next()" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<field name="list" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<field name="index" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<field name="this$0" class="org.xmlcml.cml.base.CMLElements$CMLElementsIterator" />
	<class name="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void setSmiles(java.lang.String)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.lang.String getSmiles()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void start()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void loadModelFromParam()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="org.openscience.jchempaint.JExternalFrame getJexf()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void makeHydrogensImplicit()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void prepareExternalFrame()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void generateModel(org.openscience.jchempaint.AbstractJChemPaintPanel,org.openscience.cdk.interfaces.IMolecule,boolean,boolean)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="org.openscience.jchempaint.AbstractJChemPaintPanel getTheJcpp()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void setMolFile(java.lang.String)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.awt.Frame getFrame()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void addMolFileWithReplace(java.lang.String)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.lang.String getAppletInfo()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void loadModelFromSmiles(java.lang.String)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void setMolFileWithReplace(java.lang.String)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="org.openscience.jchempaint.AbstractJChemPaintPanel access$100(org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void loadModelFromUrl(java.net.URL)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.lang.String getSmilesChiral()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void setChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="org.openscience.jchempaint.JExternalFrame access$200(org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void stop()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void setTheJcpp(org.openscience.jchempaint.AbstractJChemPaintPanel)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void init()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.lang.String[][] getParameterInfo()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void makeHydrogensExplicit()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void selectAtom(int)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="void clear()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="java.lang.String getMolFile()" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<method signature="org.openscience.jchempaint.JExternalFrame access$000(org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<field name="paramInfo" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<field name="debug" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<field name="jexf" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<field name="theJcpp" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<field name="appletInfo" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="LA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="R_PAREN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="HG" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="R_BRACKET" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="V" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="v" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TI" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ER" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="MN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DN_S_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ZN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="as" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CF" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="U" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="se" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PO" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="D" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="HF" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="R" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="HX" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="EU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="Q_MARK" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RH" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DY" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="tokenImage" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="IR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SI" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="HE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="x" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="MG" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="W" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="_WS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CD" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="UP_S_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DOLLAR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="BE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="A" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CARET" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="s" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="X" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="GE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AL" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="r" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="OS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="C" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="BR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CS" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="BI" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="R_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ZR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="T_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="L_AND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="GD" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="MO" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AC" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="L_PAREN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SC" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="O" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="GA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="FE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="p" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="P" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="BA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="I" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NP" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="a" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="F" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="OR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TH" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TC" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="LR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="S" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="S_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="K" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TL" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AG" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="B" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="HO" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CL" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DN_OR_UNSPECIFIED_S_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DIGIT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="h" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="c" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="H" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="LI" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="KR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="UP_OR_UNSPECIFIED_S_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CO" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="XE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="RN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="FR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="SE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="G" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="D_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NO" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="MD" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="WILDCARD" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ANY_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AR_BOND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ES" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="N" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="H_AND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="IN" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="o" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="CA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="FM" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="ND" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="EOF" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="AR" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="BK" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="DEFAULT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="LU" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="TE" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="L_BRACKET" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="Y" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NOT" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="n" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="YB" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="NI" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<field name="PD" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserConstants" />
	<class name="org.openscience.jchempaint.renderer.generators.RadicalGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.RadicalGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.RadicalGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.RadicalGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.RadicalGenerator" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="void setAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer getRecursiveQuery()" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="void initilizeBitSets()" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="void setRecursiveQuery(org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<field name="bitSet" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<field name="recursiveQuery" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<field name="logger" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<field name="atomContainer" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom" />
	<class name="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTCharge,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmarts,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.SimpleNode,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTElement,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTChirality,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAliphatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTGroup,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTReaction,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingMembership,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAromatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTStart,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTValence,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<field name="symbolIdentified" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<field name="not" class="org.openscience.cdk.smiles.smarts.parser.visitor.Smarts2MQLVisitor" />
	<class name="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<method signature="void addIUndoListener(org.openscience.jchempaint.controller.undoredo.IUndoListener)" class="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<method signature="void postEdit(org.openscience.jchempaint.controller.undoredo.IUndoRedoable)" class="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<field name="undoListeners" class="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<method signature="int getHC(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalHCountAtom" />
	<class name="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parserCompoundInfoData(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parseAtomCharges(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="java.lang.String getCID(org.xmlpull.v1.XmlPullParser)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="org.openscience.cdk.interfaces.IChemModel parseSubstance(org.xmlpull.v1.XmlPullParser)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parserAtomBlock(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parserCoordBlock(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parserBondBlock(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet parseCompoundsBlock(org.xmlpull.v1.XmlPullParser)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="java.util.List parseValues(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void parseAtomElements(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="java.lang.String getSID(org.xmlpull.v1.XmlPullParser)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<method signature="org.openscience.cdk.interfaces.IMolecule parseMolecule(org.xmlpull.v1.XmlPullParser,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMINT_VALUE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ELEMENT" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_COORDINATES_AID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_ZE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCSUBSTANCE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMINT" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="builder" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCID_ID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCCOMPOUND_CID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCSUBSTANCE_SID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PROPSBLOCK" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PROPS_SVAL" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMSCHARGE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCCOMPOUND" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCCOMPOUND_ID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_Z" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_BONDID1" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PROPS_INFODATA" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMBLOCK" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="factory" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_BONDORDER" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_YE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PROPS_URNNAME" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PROPS_URNLABEL" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_Y" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_COORDINATESBLOCK" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_XE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_PCCOMPOUNDS" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_COORDINATES_AIDE" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMINT_AID" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_BONDBLOCK" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_BONDID2" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOMSELEMENT" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<field name="EL_ATOM_CONFORMER_X" class="org.openscience.cdk.io.pubchemxml.PubChemXMLHelper" />
	<class name="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="int getLevel()" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="java.lang.String getSetting()" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="void setSetting(java.lang.String)" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="java.lang.String getName()" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="java.lang.String getQuestion()" class="org.openscience.cdk.io.setting.IOSetting" />
	<method signature="java.lang.String getDefaultSetting()" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="level" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="MEDIUM" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="setting" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="LOW" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="name" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="question" class="org.openscience.cdk.io.setting.IOSetting" />
	<field name="HIGH" class="org.openscience.cdk.io.setting.IOSetting" />
	<class name="org.openscience.cdk.interfaces.IAtomParity" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.interfaces.IAtomParity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtomParity" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getSurroundingAtoms()" class="org.openscience.cdk.interfaces.IAtomParity" />
	<method signature="int getParity()" class="org.openscience.cdk.interfaces.IAtomParity" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="void setType(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<method signature="int getType()" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<field name="type" class="org.openscience.cdk.smiles.smarts.parser.ASTNotExpression" />
	<class name="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<method signature="void init()" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<method signature="java.util.List readIsotopes()" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<field name="input" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<field name="builder" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<field name="parser" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<field name="logger" class="org.openscience.cdk.config.isotopes.IsotopeReader" />
	<class name="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.DoubleArraySTAttribute)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void setCMLValue(double[])" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void checkValue(double[])" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="double[] getDoubleArray()" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="double[] split(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<field name="dd" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<field name="length" class="org.xmlcml.cml.base.DoubleArraySTAttribute" />
	<class name="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="java.lang.String getLog()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="java.lang.String getAuxInfo()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="java.lang.String getInchi()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,java.lang.String)" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="java.lang.String getInchiKey()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,java.util.List)" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="java.lang.String getMessage()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="net.sf.jniinchi.INCHI_RET getReturnStatus()" class="org.openscience.cdk.inchi.InChIGenerator" />
	<method signature="void generateInchiFromCDKAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.inchi.InChIGenerator" />
	<field name="input" class="org.openscience.cdk.inchi.InChIGenerator" />
	<field name="output" class="org.openscience.cdk.inchi.InChIGenerator" />
	<field name="atomContainer" class="org.openscience.cdk.inchi.InChIGenerator" />
	<class name="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void mouseWheelMovedBackward(int)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void mouseWheelMovedForward(int)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void doZoom(double)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void zoom(double)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.ZoomModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ZoomModule" />
	<field name="worldCoord" class="org.openscience.jchempaint.controller.ZoomModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.ZoomModule" />
	<class name="org.openscience.cdk.Bond$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.Bond$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Bond)" class="org.openscience.cdk.Bond$1" />
	<field name="this$0" class="org.openscience.cdk.Bond$1" />
	<class name="org.xmlcml.euclid.Int" />
	<method signature="void initArray(int,int[],int)" class="org.xmlcml.euclid.Int" />
	<method signature="void printArray(int[])" class="org.xmlcml.euclid.Int" />
	<method signature="void zeroArray(int,int[])" class="org.xmlcml.euclid.Int" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Int" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Int" />
	<field name="logger" class="org.xmlcml.euclid.Int" />
	<class name="org.xmlcml.euclid.IntRange" />
	<method signature="int getMin()" class="org.xmlcml.euclid.IntRange" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntRange" />
	<method signature="int getMax()" class="org.xmlcml.euclid.IntRange" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntRange" />
	<method signature="org.xmlcml.euclid.IntRange plus(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntRange" />
	<method signature="int getRange()" class="org.xmlcml.euclid.IntRange" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntRange" />
	<method signature="org.xmlcml.euclid.IntRange intersectionWith(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntRange" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.IntRange" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.IntRange" />
	<method signature="boolean contains(int)" class="org.xmlcml.euclid.IntRange" />
	<method signature="boolean isValid()" class="org.xmlcml.euclid.IntRange" />
	<method signature="boolean includes(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntRange" />
	<method signature="boolean includes(int)" class="org.xmlcml.euclid.IntRange" />
	<method signature="void add(int)" class="org.xmlcml.euclid.IntRange" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.IntRange" />
	<field name="minval" class="org.xmlcml.euclid.IntRange" />
	<field name="maxval" class="org.xmlcml.euclid.IntRange" />
	<class name="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="int countMatches()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void initializeRecursiveSmartsAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="java.util.List getAtomMappings(java.util.List,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void setSmarts(java.lang.String)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="java.util.List getMatchingAtoms()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void initializeRecursiveSmarts(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void initializeMolecule()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="java.lang.String getSmarts()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="void initializeQuery()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<method signature="java.util.List getUniqueMatchingAtoms()" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<field name="matchingAtoms" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<field name="query" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<field name="logger" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<field name="smarts" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<field name="atomContainer" class="org.openscience.cdk.smiles.smarts.SMARTSQueryTool" />
	<class name="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowMoleculeTitle(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setSelectedPartColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setFontName(java.lang.String)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getFlag(int)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.lang.String getFontName()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getIsCompact()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean isFitToScreen()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setAtomColorer(org.openscience.jchempaint.renderer.color.IAtomColorer)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowAromaticity()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setWedgeWidth(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.util.Map getFlags()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setSelectionRadius(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setHighlightedBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setMappingLineWidth(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getNotTypeableUnderlineColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape getCompactShape()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowAromaticity(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getBondLength()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.RenderingParameters)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getRingProportion()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getScale()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setColorHash(java.util.Map)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getSelectedPartColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setBackColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getBondDistance()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getExternalHighlightColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.jchempaint.renderer.selection.IChemObjectSelection getSelection()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setHighlightedAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setDefaultBondColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.jchempaint.renderer.color.IAtomColorer getAtomColorer()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setExternalHighlightColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean drawNumbers()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle getFontStyle()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowAtomAtomMapping()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getMappingLineWidth()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setHighlightShapeFilled(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setBondWidth(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setArrowHeadWidth(int)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getClipboardContent()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.util.Map getColorHash()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setRingProportion(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setSelectionShape(org.openscience.jchempaint.renderer.RenderingParameters$AtomShape)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowAromaticityCDKStyle(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowImplicitHydrogens(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setBoundsColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowEndCarbons(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setDrawNumbers(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setAtomAtomMappingLineColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setScale(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowTooltip()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getBackColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getForeColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getExternalSelectedPart()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean showAtomTypeNames()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void removeCDKChangeListener(org.openscience.cdk.event.ICDKChangeListener)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.lang.String getToolTipText(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getHoverOverColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getZoomFactor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowImplicitHydrogens()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getHighlightShapeFilled()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setAtomRadius(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setIsCompact(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getNotification()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setSelection(org.openscience.jchempaint.renderer.selection.IChemObjectSelection)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getColorAtomsByType()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setNotification(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getBondWidth()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="int getArrowHeadWidth()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setForeColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setExternalSelectedPart(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getSelectionRadius()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.cdk.interfaces.IBond getHighlightedBond()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape getSelectionShape()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setZoomFactor(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.util.Map getToolTipTextMap()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setMargin(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getDrawNumbers()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getWedgeWidth()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getBoundsColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getUseAntiAliasing()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowAtomTypeNames(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getDefaultBondColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowAromaticityCDKStyle()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowReactionBoxes(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowTooltip(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setHoverOverColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getMargin()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setFontManager(org.openscience.jchempaint.renderer.font.IFontManager$FontStyle)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getAtomColor(org.openscience.cdk.interfaces.IAtom,java.awt.Color)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void addCDKChangeListener(org.openscience.cdk.event.ICDKChangeListener)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setColorAtomsByType(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowReactionBoxes()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getHighlightDistance()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getAtomAtomMappingLineColor()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="org.openscience.cdk.interfaces.IAtom getHighlightedAtom()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setCompactShape(org.openscience.jchempaint.renderer.RenderingParameters$AtomShape)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setUseAntiAliasing(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.awt.Color getAtomBackgroundColor(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getKekuleStructure()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowExplicitHydrogens(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setClipboardContent(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowMoleculeTitle()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setHighlightDistance(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setFitToScreen(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setToolTipTextMap(java.util.Map)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void fireChange()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setKekuleStructure(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowExplicitHydrogens()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="java.util.Map getMerge()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="double getAtomRadius()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setBondDistance(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="boolean getShowEndCarbons()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setBondLength(double)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setFlag(int,boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.RendererModel" />
	<method signature="void setShowAtomAtomMapping(boolean)" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="highlightedAtom" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="parameters" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="externalSelectedPart" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="selection" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="colorHash" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="clipboardContent" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="zoomFactor" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="merge" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="toolTipTextMap" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="colorer" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="arrowHeadWidth" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="notification" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="flags" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="listeners" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.renderer.RendererModel" />
	<field name="highlightedBond" class="org.openscience.jchempaint.renderer.RendererModel" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="int getCount()" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="void setCount(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<field name="count" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="void addEdgeToTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="void removeEdgeFromTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedEdgeContainer getEdgeContainer(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph,org._3pq.jgrapht.graph.AbstractBaseGraph$1)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<field name="NOT_IN_UNDIRECTED_GRAPH" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<field name="this$0" class="org._3pq.jgrapht.graph.AbstractBaseGraph$UndirectedSpecifics" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void writePharmacophoreDefinition(org.openscience.cdk.pharmacophore.PharmacophoreQuery,java.io.OutputStream)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void processDistanceConstraint(nu.xom.Element,java.util.HashMap,java.util.HashMap,org.openscience.cdk.pharmacophore.PharmacophoreQuery)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void processAngleConstraint(nu.xom.Element,java.util.HashMap,java.util.HashMap,org.openscience.cdk.pharmacophore.PharmacophoreQuery)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="java.util.List getdefs(nu.xom.Document)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="java.util.HashMap getGroupDefinitions(nu.xom.Element)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void writePharmacophoreDefinition(org.openscience.cdk.pharmacophore.PharmacophoreQuery[],java.io.OutputStream)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="java.util.List readPharmacophoreDefinitions(java.lang.String)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="boolean containsPatom(org.openscience.cdk.pharmacophore.PharmacophoreQuery,java.lang.String)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="java.util.List readPharmacophoreDefinitions(java.io.InputStream)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void writePharmacophoreDefinition(java.util.List,java.io.OutputStream)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<method signature="org.openscience.cdk.pharmacophore.PharmacophoreQuery processPharmacophoreElement(nu.xom.Element,java.util.HashMap)" class="org.openscience.cdk.pharmacophore.PharmacophoreUtils" />
	<class name="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getRecord()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.Integer getSerial()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void initValues()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setOxt(java.lang.Boolean)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getSegID()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setAltLoc(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setResSeq(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getName()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.Double getOccupancy()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setChainID(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.Double getTempFactor()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setName(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setRecord(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.Boolean getHetAtom()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setHetAtom(java.lang.Boolean)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.Boolean getOxt()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getICode()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setTempFactor(java.lang.Double)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setICode(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setSegID(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getAltLoc()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setSerial(java.lang.Integer)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getChainID()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getResSeq()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setOccupancy(java.lang.Double)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="java.lang.String getResName()" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<method signature="void setResName(java.lang.String)" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="resName" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="segID" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="record" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="occupancy" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="iCode" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="hetAtom" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="resSeq" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="chainID" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="oxt" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="tempFactor" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="name" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="altLoc" class="org.openscience.cdk.protein.data.PDBAtom" />
	<field name="serial" class="org.openscience.cdk.protein.data.PDBAtom" />
	<class name="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void setNameList(java.util.List)" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void init()" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="java.util.Map getElementTypeMap()" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void setElementTypeMap(java.util.Map)" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.SchemaManager)" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void printElements()" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void readAssembleAndIndexElementSchema(java.lang.String)" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="void indexSchema()" class="org.xmlcml.cml.base.ElementGenerator" />
	<method signature="java.util.List getNameList()" class="org.xmlcml.cml.base.ElementGenerator" />
	<field name="elementTypeMap" class="org.xmlcml.cml.base.ElementGenerator" />
	<class name="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer$1)" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer next()" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainer$ElectronContainerIterator" />
	<class name="org.openscience.jchempaint.renderer.generators.IReactionGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.IReactionGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.IReactionGenerator" />
	<class name="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="double getZ3()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZ3Attribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setZ3(double)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="double getX3()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setY3(double)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getY3Attribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setZ3(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getX3Attribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractParticle)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="double getY3()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setY3(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setX3(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="void setX3(double)" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractParticle" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_x3" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_z3" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_y3" class="org.xmlcml.cml.element.AbstractParticle" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractParticle" />
	<class name="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.DaltonFormat" />
	<class name="org.openscience.jchempaint.action.ModifySettingsAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ModifySettingsAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ModifySettingsAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ModifySettingsAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ModifySettingsAction" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="int getNumOfConnection()" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="void setNumOfConnection(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<field name="numOfConnection" class="org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity" />
	<class name="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void addBand(org.xmlcml.cml.element.AbstractBand)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBandList)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="org.xmlcml.cml.base.CMLElements getBandElements()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBandList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBandList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBandList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBandList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBandList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBandList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBandList" />
	<class name="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getStart()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setStart(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrderAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getDuration()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setStartCondition(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setEndCondition(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setOrder(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStartConditionAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setEnd(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getStartCondition()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getEndCondition()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEndConditionAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDurationAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStartAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getEnd()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setDuration(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getOrder()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAction)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEndAttribute()" class="org.xmlcml.cml.element.AbstractAction" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_duration" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_order" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_endcondition" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_start" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_startcondition" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAction" />
	<field name="_att_end" class="org.xmlcml.cml.element.AbstractAction" />
	<class name="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char)" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="java.lang.String addEscapes(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="void &lt;init&gt;(boolean,int,int,int,java.lang.String,char,int)" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="java.lang.String getMessage()" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<field name="LOOP_DETECTED" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<field name="LEXICAL_ERROR" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<field name="INVALID_LEXICAL_STATE" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<field name="STATIC_LEXER_ERROR" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<field name="errorCode" class="org.openscience.cdk.smiles.smarts.parser.TokenMgrError" />
	<class name="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="nextMolecule" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="builder" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="parserHelper" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="parser" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="nextAvailableIsKnown" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<field name="primarySource" class="org.openscience.cdk.io.iterator.IteratingPCCompoundXMLReader" />
	<class name="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SMILESFIXFormat" />
	<class name="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.GaussianInputFormat" />
	<class name="org.openscience.cdk.graph.invariant.MorganNumbersTools" />
	<method signature="java.lang.String[] getMorganNumbersWithElementSymbol(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.MorganNumbersTools" />
	<method signature="long[] getMorganNumbers(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.MorganNumbersTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.MorganNumbersTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.MorganNumbersTools" />
	<class name="org.xmlcml.euclid.Point3" />
	<method signature="void multiplyEquals(double)" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="double getDistanceFromOrigin()" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isOnLine(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 plus(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 getClosestPointOnLine(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Point3" />
	<method signature="int hashCode()" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 multiplyBy(double)" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isOrigin()" class="org.xmlcml.euclid.Point3" />
	<method signature="void setElementAt(int,double)" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean equalsCrystallographically(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="double normaliseCrystallographically(double)" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean equals(java.lang.Object)" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Angle getAngle(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 calculateFromInternalCoordinates(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,double,org.xmlcml.euclid.Angle,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Point3" />
	<method signature="double getSquaredDistanceFromPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 subtract(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Angle getTorsion(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 plus(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 divideBy(double)" class="org.xmlcml.euclid.Point3" />
	<method signature="void transformEquals(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Point3" />
	<method signature="double distanceFromPlane(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isInvariant(org.xmlcml.euclid.Transform3,boolean)" class="org.xmlcml.euclid.Point3" />
	<method signature="void main(java.lang.String[])" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Vector3 subtract(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 transform(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Point3 getMidPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void plusEquals(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="double elementAt(int)" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Point3,double)" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Point3" />
	<method signature="double distanceFromLine(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void subtractEquals(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Point3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Point3" />
	<method signature="void clear()" class="org.xmlcml.euclid.Point3" />
	<method signature="void reflect()" class="org.xmlcml.euclid.Point3" />
	<method signature="boolean isOnPlane(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void divideEquals(double)" class="org.xmlcml.euclid.Point3" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.Point3" />
	<method signature="void plusEquals(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3" />
	<method signature="void subtractEquals(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3" />
	<method signature="org.xmlcml.euclid.Vector3 normaliseCrystallographically()" class="org.xmlcml.euclid.Point3" />
	<field name="flarray" class="org.xmlcml.euclid.Point3" />
	<field name="CRYSTALFRACTEPSILON" class="org.xmlcml.euclid.Point3" />
	<field name="logger" class="org.xmlcml.euclid.Point3" />
	<class name="org.xmlcml.cml.element.CMLXaxis" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLXaxis" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLXaxis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLXaxis" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLXaxis)" class="org.xmlcml.cml.element.CMLXaxis" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLXaxis" />
	<field name="NS" class="org.xmlcml.cml.element.CMLXaxis" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void jjtOpen()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="int jjtGetNumChildren()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void setId(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.SMARTSParser getParser()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="int getId()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void jjtClose()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void jjtRemoveChild(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void jjtAddChild(org.openscience.cdk.smiles.smarts.parser.Node,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void jjtSetParent(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node jjtGetChild(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="java.lang.Object childrenAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="java.lang.String toString(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node jjtGetParent()" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void setParser(org.openscience.cdk.smiles.smarts.parser.SMARTSParser)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<method signature="void dump(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<field name="parser" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<field name="id" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<field name="children" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<field name="parent" class="org.openscience.cdk.smiles.smarts.parser.SimpleNode" />
	<class name="org.openscience.jchempaint.renderer.font.IFontManager" />
	<method signature="void setFontForZoom(double)" class="org.openscience.jchempaint.renderer.font.IFontManager" />
	<method signature="void setFontName(java.lang.String)" class="org.openscience.jchempaint.renderer.font.IFontManager" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.font.IFontManager" />
	<method signature="void setFontStyle(org.openscience.jchempaint.renderer.font.IFontManager$FontStyle)" class="org.openscience.jchempaint.renderer.font.IFontManager" />
	<class name="org.xmlcml.euclid.Univariate" />
	<method signature="double pt(double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double lnfgamma(double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getMean()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double pchisq(double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getQuantile(double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="int[] getHistogramCounts()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double nCr(int,int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double betainv(double,double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="org.xmlcml.euclid.RealArray getDeviateValues()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getMedian()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getMin()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double qt(double,double,boolean)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getVariance()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double[] getSortedArray()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double qnorm(double,boolean)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double pf(double,double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double fgamma(double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getStandardDeviation()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double fact(int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double qnorm(double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double lnfact(int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double pnorm(double,boolean)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double qnorm(double,boolean,double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="org.xmlcml.euclid.Univariate getNormalParams(int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void test()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getMax()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double nPr(int,int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Univariate" />
	<method signature="void calculateSummaryStats()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double pnorm(double,boolean,double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void main(java.lang.String[])" class="org.xmlcml.euclid.Univariate" />
	<method signature="double getStandardError()" class="org.xmlcml.euclid.Univariate" />
	<method signature="void setArray(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void setBinCount(int)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void init()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double lnfbeta(double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="double fbeta(double,double)" class="org.xmlcml.euclid.Univariate" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Univariate" />
	<method signature="int getCount()" class="org.xmlcml.euclid.Univariate" />
	<method signature="int getBinCount()" class="org.xmlcml.euclid.Univariate" />
	<method signature="org.xmlcml.euclid.RealArray getXValues()" class="org.xmlcml.euclid.Univariate" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.Univariate" />
	<method signature="org.xmlcml.euclid.RealArray getNormalizedValues()" class="org.xmlcml.euclid.Univariate" />
	<field name="deltaX" class="org.xmlcml.euclid.Univariate" />
	<field name="sum" class="org.xmlcml.euclid.Univariate" />
	<field name="bins" class="org.xmlcml.euclid.Univariate" />
	<field name="binArray" class="org.xmlcml.euclid.Univariate" />
	<field name="realArray" class="org.xmlcml.euclid.Univariate" />
	<field name="range" class="org.xmlcml.euclid.Univariate" />
	<field name="binCount" class="org.xmlcml.euclid.Univariate" />
	<field name="median" class="org.xmlcml.euclid.Univariate" />
	<field name="gotStandardDeviation" class="org.xmlcml.euclid.Univariate" />
	<field name="array" class="org.xmlcml.euclid.Univariate" />
	<field name="xMax" class="org.xmlcml.euclid.Univariate" />
	<field name="deviateArray" class="org.xmlcml.euclid.Univariate" />
	<field name="mean" class="org.xmlcml.euclid.Univariate" />
	<field name="stdev" class="org.xmlcml.euclid.Univariate" />
	<field name="xMin" class="org.xmlcml.euclid.Univariate" />
	<field name="gotVariance" class="org.xmlcml.euclid.Univariate" />
	<field name="isSorted" class="org.xmlcml.euclid.Univariate" />
	<field name="gotMean" class="org.xmlcml.euclid.Univariate" />
	<field name="variance" class="org.xmlcml.euclid.Univariate" />
	<field name="binStart" class="org.xmlcml.euclid.Univariate" />
	<field name="count" class="org.xmlcml.euclid.Univariate" />
	<field name="zValueArray" class="org.xmlcml.euclid.Univariate" />
	<class name="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="nextSubstance" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="parserHelper" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="parser" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="nextAvailableIsKnown" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<field name="primarySource" class="org.openscience.cdk.io.iterator.IteratingPCSubstancesXMLReader" />
	<class name="org.openscience.jchempaint.RenderPanel" />
	<method signature="void doUndo(org.openscience.jchempaint.controller.undoredo.IUndoRedoable)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setupPanel(int,int)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void update(java.awt.Graphics)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="org.openscience.jchempaint.renderer.Renderer getRenderer()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setZoomWide(boolean)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setFitToScreen(boolean)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="org.openscience.jchempaint.controller.ControllerHub getHub()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemModel,int,int,boolean,boolean,boolean,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void takeSnapshot(java.awt.Graphics2D,org.openscience.cdk.interfaces.IChemModel,java.awt.Rectangle,java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.lang.String toSVG()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void paintChemModel(org.openscience.cdk.interfaces.IChemModel,java.awt.Graphics2D,java.awt.Rectangle)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void takeSnapshot(java.awt.Graphics2D)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void paintChemModelFitToScreen(org.openscience.cdk.interfaces.IChemModel,java.awt.Graphics2D,java.awt.Rectangle)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.util.List makeReactionGenerators()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.awt.Rectangle shift(java.awt.Rectangle,java.awt.Rectangle)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.util.List makeGenerators(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.lang.String makeStatusBarString(java.lang.String,int)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setIsNewChemModel(boolean)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.awt.Image takeSnapshot()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void updateView()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="javax.swing.undo.UndoManager getUndoManager()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void setupMachinery(org.openscience.cdk.interfaces.IChemModel,boolean,boolean,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="java.lang.String getStatus(int)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModel()" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="boolean isValidChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.RenderPanel" />
	<method signature="void paint(java.awt.Graphics)" class="org.openscience.jchempaint.RenderPanel" />
	<field name="debug" class="org.openscience.jchempaint.RenderPanel" />
	<field name="undoManager" class="org.openscience.jchempaint.RenderPanel" />
	<field name="fitToScreen" class="org.openscience.jchempaint.RenderPanel" />
	<field name="zoomWide" class="org.openscience.jchempaint.RenderPanel" />
	<field name="renderer" class="org.openscience.jchempaint.RenderPanel" />
	<field name="controllerModel" class="org.openscience.jchempaint.RenderPanel" />
	<field name="pbg" class="org.openscience.jchempaint.RenderPanel" />
	<field name="isNewChemModel" class="org.openscience.jchempaint.RenderPanel" />
	<field name="isFirstDrawing" class="org.openscience.jchempaint.RenderPanel" />
	<field name="hub" class="org.openscience.jchempaint.RenderPanel" />
	<field name="shouldPaintFromCache" class="org.openscience.jchempaint.RenderPanel" />
	<field name="mouseEventRelay" class="org.openscience.jchempaint.RenderPanel" />
	<class name="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="int getId2()" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="void setId1(int)" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="boolean equals(java.lang.Object)" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="void setId2(int)" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="int getId1()" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<method signature="void &lt;init&gt;(int,int)" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<field name="id1" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<field name="id2" class="org.openscience.cdk.isomorphism.mcss.RMap" />
	<class name="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void unmarkWithError(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void unmark(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void markWithError(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void unmarkWithWarning(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.ProblemMarker" />
	<method signature="void markWithWarning(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ProblemMarker" />
	<field name="WARNING_MARKER" class="org.openscience.cdk.validate.ProblemMarker" />
	<field name="ERROR_MARKER" class="org.openscience.cdk.validate.ProblemMarker" />
	<class name="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="boolean isRingSystemSproutedWithNonRingDoubleBonds(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="void markRingAtomsAndBondsAromatic(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="boolean isRingAllSP2AndHueckelValid(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="int getLonePairCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<method signature="boolean detectAromaticity(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<field name="factory" class="org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector" />
	<class name="org.openscience.cdk.interfaces.IElectronContainer" />
	<method signature="void setElectronCount(java.lang.Integer)" class="org.openscience.cdk.interfaces.IElectronContainer" />
	<method signature="java.lang.Integer getElectronCount()" class="org.openscience.cdk.interfaces.IElectronContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IElectronContainer" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyAtom" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="boolean isUnspecified()" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="void setClockwise(boolean)" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="void setUnspecified(boolean)" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="int getDegree()" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="boolean isClockwise()" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<method signature="void setDegree(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<field name="unspecified" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<field name="clockwise" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<field name="degree" class="org.openscience.cdk.isomorphism.matchers.smarts.ChiralityAtom" />
	<class name="org.openscience.cdk.smiles.smarts.parser.Token" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token newToken(int)" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="beginLine" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="kind" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="endColumn" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="endLine" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="next" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="image" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="specialToken" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<field name="beginColumn" class="org.openscience.cdk.smiles.smarts.parser.Token" />
	<class name="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void addParameter(org.xmlcml.cml.element.AbstractParameter)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void addArg(org.xmlcml.cml.element.AbstractArg)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLElements getArgElements()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLElements getParameterElements()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPotentialForm)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLElements getExpressionElements()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<method signature="void addExpression(org.xmlcml.cml.element.AbstractExpression)" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPotentialForm" />
	<class name="org.openscience.cdk.layout.HydrogenPlacer" />
	<method signature="void placeHydrogens2D(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<method signature="void placeHydrogens2D(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<method signature="void placeHydrogens2D(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,double)" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<field name="debug" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<field name="debug1" class="org.openscience.cdk.layout.HydrogenPlacer" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$Element" />
	<method signature="boolean addTuple(org.openscience.cdk.graph.rebond.Bspt$Tuple)" class="org.openscience.cdk.graph.rebond.Bspt$Element" />
	<method signature="void dump(int)" class="org.openscience.cdk.graph.rebond.Bspt$Element" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$Element" />
	<method signature="boolean isLeafWithSpace()" class="org.openscience.cdk.graph.rebond.Bspt$Element" />
	<class name="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void setCMLValue(double)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="double getDouble()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.DoubleSTAttribute)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<method signature="void checkValue(double)" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<field name="d" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<field name="S_PLUS" class="org.xmlcml.cml.base.DoubleSTAttribute" />
	<class name="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTCharge,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmarts,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.SimpleNode,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTElement,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTChirality,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.String indentString()" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAliphatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTGroup,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTReaction,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingMembership,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTPrimitiveAtomExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAromatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTStart,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTValence,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<field name="indent" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsDumpVisitor" />
	<class name="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setMultiplierToSI(double)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setConstantToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setErrorValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.attribute.NamespaceRefAttribute getUnitTypeAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setUnitType(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getMin()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="double getMultiplierToSI()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getUnitType()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setMultiplierToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setConstantToSI(double)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="double getErrorValue()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setErrorValue(double)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="double getConstantToSI()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstantToSIAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getMax()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMultiplierToSIAttribute()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractScalar" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_min" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_max" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_errorvalue" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_constanttosi" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_unittype" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_multipliertosi" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractScalar" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractScalar" />
	<class name="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="void removeChemSequence(int)" class="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="int getChemSequenceCount()" class="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence getChemSequence(int)" class="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="java.lang.Iterable chemSequences()" class="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemFile" />
	<method signature="void addChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.interfaces.IChemFile" />
	<class name="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence readChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void readCoordinates(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void readPartialCharges(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.Gaussian03Reader" />
	<field name="input" class="org.openscience.cdk.io.Gaussian03Reader" />
	<field name="logger" class="org.openscience.cdk.io.Gaussian03Reader" />
	<class name="org.openscience.jchempaint.action.ChangeSingleElectronAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeSingleElectronAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeSingleElectronAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeSingleElectronAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeSingleElectronAction" />
	<class name="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setElementType(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractIsotope)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getSpin()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setSpin(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getElementTypeAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpinAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNumberAttribute()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setNumber(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="int getNumber()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void addAbundance(org.xmlcml.cml.element.AbstractAbundance)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setNumber(int)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="org.xmlcml.cml.base.CMLElements getAbundanceElements()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotope" />
	<method signature="java.lang.String getElementType()" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_spin" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_number" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_elementtype" class="org.xmlcml.cml.element.AbstractIsotope" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractIsotope" />
	<class name="org._3pq.jgrapht.edge.EdgeFactories$AbstractEdgeFactory" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.edge.EdgeFactories$AbstractEdgeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.edge.EdgeFactories$AbstractEdgeFactory" />
	<class name="org.xmlcml.euclid.DoubleTool" />
	<method signature="boolean equals(double,double,double)" class="org.xmlcml.euclid.DoubleTool" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.DoubleTool" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.DoubleTool" />
	<method signature="boolean equals(double[],double[],double)" class="org.xmlcml.euclid.DoubleTool" />
	<class name="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="double getErrorValue()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setErrorValue(double)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setErrorValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs4Attribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTorsion)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getMin()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setAtomRefs4(java.lang.String[])" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setAtomRefs4(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getMax()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<method signature="java.lang.String[] getAtomRefs4()" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_min" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_max" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_atomrefs4" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_errorvalue" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTorsion" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTorsion" />
	<class name="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemSubstancesASNFormat" />
	<class name="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="double[] getPaulingElectronegativities(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="double calculateSquaredDistanceBetweenTwoAtoms(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="double getAtomicChargeIncrement(org.openscience.cdk.interfaces.IAtomContainer,int,double[],int)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="double getAtomicSoftnessCore(org.openscience.cdk.interfaces.IAtomContainer,int)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="double getCovalentRadius(java.lang.String,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer assignInductivePartialCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<field name="pauling" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<field name="ifac" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<field name="logger" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<field name="factory" class="org.openscience.cdk.charges.InductivePartialCharges" />
	<class name="org.xmlcml.cml.element.CMLSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSpectrumList)" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSpectrumList" />
	<class name="org.xmlcml.cml.element.CMLMap" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void clearTables()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="org.xmlcml.cml.element.CMLLink getLink(java.lang.String,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getFromRef(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void mergeMap(org.xmlcml.cml.element.CMLMap,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getRefs(org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void copyFields(org.xmlcml.cml.element.CMLMap)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void appendChild(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="org.xmlcml.cml.element.CMLMap$Direction getReverseToFrom(org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void setLinkToType(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void removeLink(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getToRefs()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMap)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getFromRefs()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void setLinkFromContext(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getToRef(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getRefs(java.util.List,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getFromLink(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void addLinkToTable(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void annotateLinks(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getType(org.xmlcml.cml.element.CMLLink,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void checkAndCreateTablesAndAddLinks()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getToSetRefs()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="org.xmlcml.cml.element.CMLLink getFromToLink(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getFromRefs(java.util.List)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void addMap(org.xmlcml.cml.element.CMLMap)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void addLink(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getToLink(org.xmlcml.cml.element.CMLLink)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void setLinkToContext(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void addLinks()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void setLinkFromType(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.lang.String getRef(java.lang.String,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getToRefs(java.util.List)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void makeTables()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getElementLinks(java.lang.String)" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="java.util.List getFromSetRefs()" class="org.xmlcml.cml.element.CMLMap" />
	<method signature="void addUniqueLink(org.xmlcml.cml.element.CMLLink,org.xmlcml.cml.element.CMLMap$Direction)" class="org.xmlcml.cml.element.CMLMap" />
	<field name="LOG" class="org.xmlcml.cml.element.CMLMap" />
	<field name="toLinkTable" class="org.xmlcml.cml.element.CMLMap" />
	<field name="logger" class="org.xmlcml.cml.element.CMLMap" />
	<field name="toFromTable" class="org.xmlcml.cml.element.CMLMap" />
	<field name="fromLinkTable" class="org.xmlcml.cml.element.CMLMap" />
	<field name="fromToTable" class="org.xmlcml.cml.element.CMLMap" />
	<field name="molecule" class="org.xmlcml.cml.element.CMLMap" />
	<class name="org.xmlcml.euclid.Angle$Units" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.euclid.Angle$Units" />
	<method signature="org.xmlcml.euclid.Angle$Units valueOf(java.lang.String)" class="org.xmlcml.euclid.Angle$Units" />
	<method signature="org.xmlcml.euclid.Angle$Units[] values()" class="org.xmlcml.euclid.Angle$Units" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Angle$Units" />
	<field name="$VALUES" class="org.xmlcml.euclid.Angle$Units" />
	<field name="RADIANS" class="org.xmlcml.euclid.Angle$Units" />
	<field name="DEGREES" class="org.xmlcml.euclid.Angle$Units" />
	<class name="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractElectron)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setAtomRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefsAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getBondRef()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setBondRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setBondRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getAtomRef()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setAtomRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefsAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setAtomRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setBondRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractElectron" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_atomref" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_bondrefs" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_bondref" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_atomrefs" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractElectron" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractElectron" />
	<class name="org.openscience.jchempaint.renderer.elements.IRenderingElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.IRenderingElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.IRenderingElement" />
	<class name="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionElements()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void addReactionScheme(org.xmlcml.cml.element.AbstractReactionScheme)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionSchemeElements()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactionList)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void addReaction(org.xmlcml.cml.element.AbstractReaction)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactionList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactionList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactionList" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="java.lang.Object edge(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="java.lang.Object auxVertex0(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="java.lang.Object auxVertex1(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis,org._3pq.jgrapht.Graph,boolean[])" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="vertexMap0" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="u" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="vertexMap1" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="auxEdgeMap" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="auxVertexMap" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="this$0" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="serialVersionUID" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<field name="g" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph" />
	<class name="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrderAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addTorsion(org.xmlcml.cml.element.AbstractTorsion)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addAngle(org.xmlcml.cml.element.AbstractAngle)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addArg(org.xmlcml.cml.element.AbstractArg)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setOrder(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void addLength(org.xmlcml.cml.element.AbstractLength)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setMoleculeRefs2(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getArgElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getTorsionElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getLengthElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMoleculeRefs2Attribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String[] getMoleculeRefs2()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs2Attribute()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="org.xmlcml.cml.base.CMLElements getAngleElements()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String[] getAtomRefs2()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setAtomRefs2(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getOrder()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setAtomRefs2(java.lang.String[])" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractJoin)" class="org.xmlcml.cml.element.AbstractJoin" />
	<method signature="void setMoleculeRefs2(java.lang.String[])" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_order" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_moleculerefs2" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_atomrefs2" class="org.xmlcml.cml.element.AbstractJoin" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractJoin" />
	<class name="org.openscience.cdk.graph.MoleculeGraphs" />
	<method signature="org._3pq.jgrapht.graph.SimpleGraph getMoleculeGraph(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.MoleculeGraphs" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.MoleculeGraphs" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.MoleculeGraphs" />
	<class name="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTCharge,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmarts,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.SimpleNode,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.ASTStart getRoot(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTElement,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTChirality,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAliphatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTGroup,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTReaction,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingMembership,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAromatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTStart,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTValence,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="query" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="rsQuery" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="isParsingRS" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="logger" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="recursiveRingAtoms" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<field name="ringAtoms" class="org.openscience.cdk.smiles.smarts.parser.visitor.SmartsQueryVisitor" />
	<class name="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElement(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomType(org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.validate.AbstractValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.AbstractValidator" />
	<class name="org.xmlcml.cml.element.CMLProduct" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMoleculeX(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="org.xmlcml.cml.element.CMLFormula getOrCreateFormula()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLProduct)" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLProduct" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLProduct" />
	<field name="NS" class="org.xmlcml.cml.element.CMLProduct" />
	<class name="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<method signature="org.openscience.cdk.formula.rules.MMElementRule$RangeMass valueOf(java.lang.String)" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<method signature="org.openscience.cdk.formula.rules.MMElementRule$RangeMass[] values()" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<field name="Minus3000" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<field name="$VALUES" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<field name="Minus1000" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<field name="Minus500" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<field name="Minus2000" class="org.openscience.cdk.formula.rules.MMElementRule$RangeMass" />
	<class name="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void readNMRData(org.openscience.cdk.interfaces.IChemModel,java.lang.String)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="java.lang.String parseLevelOfTheory(java.lang.String)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void readCoordinates(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void readPartialCharges(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.Gaussian98Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.Gaussian98Reader" />
	<field name="atomCount" class="org.openscience.cdk.io.Gaussian98Reader" />
	<field name="input" class="org.openscience.cdk.io.Gaussian98Reader" />
	<field name="lastRoute" class="org.openscience.cdk.io.Gaussian98Reader" />
	<field name="readOptimizedStructureOnly" class="org.openscience.cdk.io.Gaussian98Reader" />
	<field name="logger" class="org.openscience.cdk.io.Gaussian98Reader" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="double getLower()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="double getUpper()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,double)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,org.openscience.cdk.pharmacophore.PharmacophoreQueryAtom,double,double)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<method signature="double round(double,int)" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<field name="upper" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<field name="lower" class="org.openscience.cdk.pharmacophore.PharmacophoreQueryBond" />
	<class name="org.openscience.jchempaint.action.ChangeIsotopeAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeIsotopeAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeIsotopeAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeIsotopeAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeIsotopeAction" />
	<class name="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractXaxis)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="double getMultiplierToData()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setConstantToData(double)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setMultiplierToData(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="double getConstantToData()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMultiplierToDataAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstantToDataAttribute()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setConstantToData(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<method signature="void setMultiplierToData(double)" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_constanttodata" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_multipliertodata" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractXaxis" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractXaxis" />
	<class name="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void handleSystemClipboard(java.awt.datatransfer.Clipboard)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="java.awt.datatransfer.DataFlavor access$300(org.openscience.jchempaint.action.CopyPasteAction)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="java.awt.datatransfer.DataFlavor access$100(org.openscience.jchempaint.action.CopyPasteAction)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void scaleStructure(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void addToClipboard(java.awt.datatransfer.Clipboard,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void flipStructure(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="boolean supported(java.awt.datatransfer.Transferable,java.awt.datatransfer.DataFlavor)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="java.awt.datatransfer.DataFlavor access$000(org.openscience.jchempaint.action.CopyPasteAction)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="java.awt.datatransfer.DataFlavor access$200(org.openscience.jchempaint.action.CopyPasteAction)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void insertStructure(org.openscience.cdk.interfaces.IMolecule,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<field name="smilesFlavor" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<field name="molFlavor" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<field name="cmlFlavor" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<field name="svgFlavor" class="org.openscience.jchempaint.action.CopyPasteAction" />
	<class name="org.openscience.jchempaint.action.ChangeModeAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeModeAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeModeAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeModeAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeModeAction" />
	<class name="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.BSFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.BSFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.BSFormat" />
	<class name="org.openscience.jchempaint.action.AboutAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.AboutAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.AboutAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.AboutAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.AboutAction" />
	<class name="org.openscience.cdk.AtomContainer$5" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainer$5" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$5" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$5" />
	<class name="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getMin()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getMax()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAbundance)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAbundance" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_min" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_max" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAbundance" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAbundance" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="void setNumOfMembership(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="int getNumOfMembership()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<field name="numOfMembership" class="org.openscience.cdk.smiles.smarts.parser.ASTRingMembership" />
	<class name="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void addPeakGroup(org.xmlcml.cml.element.AbstractPeakGroup)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakElements()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPeakList)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void addPeak(org.xmlcml.cml.element.AbstractPeak)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakGroupElements()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPeakList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPeakList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPeakList" />
	<class name="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="org.openscience.cdk.interfaces.IReaction parseReactionSmiles(java.lang.String)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="int getCharge(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="java.lang.String getSymbolForOrganicSubsetElement(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="java.lang.String getElementSymbol(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="void perceiveAromaticity(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="void handleRing(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="org.openscience.cdk.interfaces.IMolecule parseString(java.lang.String)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="java.lang.String getRingNumber(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="void addImplicitHydrogens(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="java.lang.String getAtomString(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="org.openscience.cdk.interfaces.IMolecule parseSmiles(java.lang.String)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="int getImplicitHydrogenCount(java.lang.String,int)" class="org.openscience.cdk.smiles.SmilesParser" />
	<method signature="org.openscience.cdk.interfaces.IAtom assembleAtom(java.lang.String)" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="currentSymbol" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="bondIsAromatic" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="ringbonds" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="HAS_HARDCODED_HYDROGEN_COUNT" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="rings" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="position" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="smiles" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="bondStatus" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="status" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="hAdder" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="molecule" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="bondStatusForRingClosure" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="builder" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="logger" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="nodeCounter" class="org.openscience.cdk.smiles.SmilesParser" />
	<field name="thisRing" class="org.openscience.cdk.smiles.SmilesParser" />
	<class name="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.TurboMoleFormat" />
	<class name="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPlane3)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPlane3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPlane3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPlane3" />
	<class name="org.openscience.cdk.Reaction" />
	<method signature="void setReactants(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Double getProductCoefficient(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.Reaction" />
	<method signature="void addReactant(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.Reaction" />
	<method signature="void addReactant(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.Reaction" />
	<method signature="boolean setReactantCoefficients(java.lang.Double[])" class="org.openscience.cdk.Reaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getAgents()" class="org.openscience.cdk.Reaction" />
	<method signature="boolean setReactantCoefficient(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.Reaction" />
	<method signature="org.openscience.cdk.interfaces.IMapping getMapping(int)" class="org.openscience.cdk.Reaction" />
	<method signature="void growMappingArray()" class="org.openscience.cdk.Reaction" />
	<method signature="void removeMapping(int)" class="org.openscience.cdk.Reaction" />
	<method signature="int getMappingCount()" class="org.openscience.cdk.Reaction" />
	<method signature="int getReactantCount()" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Double getReactantCoefficient(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.Reaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getProducts()" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Double[] getReactantCoefficients()" class="org.openscience.cdk.Reaction" />
	<method signature="int getProductCount()" class="org.openscience.cdk.Reaction" />
	<method signature="void setDirection(org.openscience.cdk.interfaces.IReaction$Direction)" class="org.openscience.cdk.Reaction" />
	<method signature="void addProduct(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Double[] getProductCoefficients()" class="org.openscience.cdk.Reaction" />
	<method signature="void addMapping(org.openscience.cdk.interfaces.IMapping)" class="org.openscience.cdk.Reaction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Reaction" />
	<method signature="void setProducts(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.Reaction" />
	<method signature="boolean setProductCoefficient(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.Reaction" />
	<method signature="void addAgent(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Reaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getReactants()" class="org.openscience.cdk.Reaction" />
	<method signature="boolean setProductCoefficients(java.lang.Double[])" class="org.openscience.cdk.Reaction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Reaction" />
	<method signature="void addProduct(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.Reaction" />
	<method signature="java.lang.Iterable mappings()" class="org.openscience.cdk.Reaction" />
	<method signature="org.openscience.cdk.interfaces.IReaction$Direction getDirection()" class="org.openscience.cdk.Reaction" />
	<field name="agents" class="org.openscience.cdk.Reaction" />
	<field name="products" class="org.openscience.cdk.Reaction" />
	<field name="mappingCount" class="org.openscience.cdk.Reaction" />
	<field name="reactionDirection" class="org.openscience.cdk.Reaction" />
	<field name="map" class="org.openscience.cdk.Reaction" />
	<field name="serialVersionUID" class="org.openscience.cdk.Reaction" />
	<field name="reactants" class="org.openscience.cdk.Reaction" />
	<field name="growArraySize" class="org.openscience.cdk.Reaction" />
	<class name="org.openscience.jchempaint.JCPStatusBar" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.JCPStatusBar" />
	<method signature="java.lang.String getStatus(int)" class="org.openscience.jchempaint.JCPStatusBar" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JCPStatusBar" />
	<method signature="void setStatus(int,java.lang.String)" class="org.openscience.jchempaint.JCPStatusBar" />
	<field name="status" class="org.openscience.jchempaint.JCPStatusBar" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JCPStatusBar" />
	<class name="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void vertexRemoved(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void vertexAdded(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void init()" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void edgeRemoved(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="java.util.List biconnectedSets()" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph)" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void edgeAdded(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<method signature="java.util.List lazyFindBiconnectedSets()" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<field name="biconnectedSets" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<field name="graph" class="org.openscience.cdk.graph.BiconnectivityInspector" />
	<class name="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<method signature="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position[] values()" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<method signature="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position valueOf(java.lang.String)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="S" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="NE" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="NW" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="$VALUES" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="W" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="SW" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="N" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="SE" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<field name="E" class="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position" />
	<class name="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void removeAllAtomContainers()" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void setMultiplier(int,java.lang.Double)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void removeAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="java.lang.Iterable atomContainers()" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="java.lang.Double getMultiplier(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void replaceAtomContainer(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="java.lang.Double getMultiplier(int)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void sortAtomContainers(java.util.Comparator)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void removeAtomContainer(int)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="java.lang.Double[] getMultipliers()" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer(int)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="int getAtomContainerCount()" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="boolean setMultiplier(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Double)" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<method signature="boolean setMultipliers(java.lang.Double[])" class="org.openscience.cdk.interfaces.IAtomContainerSet" />
	<class name="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void addSubstanceList(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceElements()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void addSubstance(org.xmlcml.cml.element.AbstractSubstance)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceListElements()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSample" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSample)" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSample" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSample" />
	<class name="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getWisley_2000()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getWisley_1000()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getDNP_2000()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getWisley_500()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getDNP_500()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getDNP_3000()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<method signature="java.util.HashMap getDNP_1000()" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<field name="hashMap" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<field name="rangeMassUsed" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<field name="databaseUsed" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.MMElementRule" />
	<class name="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void addLength(org.xmlcml.cml.element.AbstractLength)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractZMatrix)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLElements getTorsionElements()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLElements getLengthElements()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLElements getAngleElements()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void addTorsion(org.xmlcml.cml.element.AbstractTorsion)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void addAngle(org.xmlcml.cml.element.AbstractAngle)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractZMatrix" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph$ArrayListFactory" />
	<method signature="java.util.List createEdgeList(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$ArrayListFactory" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$ArrayListFactory" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph$1)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$ArrayListFactory" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$ArrayListFactory" />
	<class name="org.openscience.cdk.charges.Electronegativity" />
	<method signature="double calculateSigmaElectronegativity(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="double calculateSigmaElectronegativity(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int,int)" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="void setMaxIterations(int)" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="void setMaxResonStruc(int)" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="int getMaxIterations()" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="int getMaxResonStruc()" class="org.openscience.cdk.charges.Electronegativity" />
	<method signature="void &lt;init&gt;(int,int)" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="molSigma" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="maxI" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="acOldS" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="maxRS" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="marsiliFactors" class="org.openscience.cdk.charges.Electronegativity" />
	<field name="peoe" class="org.openscience.cdk.charges.Electronegativity" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.MassAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.MassAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.MassAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.MassAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.MassAtom" />
	<class name="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void displayArray(double[])" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="int[] getAtomLayers(int[][])" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void displayMatrix(int[][])" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void displayArray(int[])" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void displayMatrix(double[][])" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="double[][] getExtendedAdjacenyMatrix(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="double getEAIDNumber(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<method signature="double[] getAtomWeights(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<field name="logger" class="org.openscience.cdk.graph.invariant.HuLuIndexTool" />
	<class name="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addElectron(org.xmlcml.cml.element.AbstractElectron)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addFormula(org.xmlcml.cml.element.AbstractFormula)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractProduct)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getAmountElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addSubstanceList(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getFormulaElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getIdentifierElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addAmount(org.xmlcml.cml.element.AbstractAmount)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addIdentifier(org.xmlcml.cml.element.AbstractIdentifier)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void addSubstance(org.xmlcml.cml.element.AbstractSubstance)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getElectronElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceListElements()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractProduct" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractProduct" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractProduct" />
	<class name="org.openscience.cdk.io.formats.IChemFormatMatcher" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.IChemFormatMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.IChemFormatMatcher" />
	<class name="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isOnPlane(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void multiplyEquals(double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void subtractEquals(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 subtract(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 subtract(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void plusEquals(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double getDistanceFromOrigin()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 calculateFromInternalCoordinates(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3,double,double,double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getMidPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double distanceFromPlane(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 transform(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double getTorsion(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 divideBy(double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isOrigin()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void setElementAt(int,double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean equalsCrystallographically(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void setXYZ3(double[])" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLPoint3,double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void plusEquals(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 plus(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getClosestPointOnLine(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double getSquaredDistanceFromPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.euclid.Point3 getEuclidPoint3()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isInvariant(org.xmlcml.cml.element.CMLTransform3,boolean)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void subtractEquals(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="boolean isOnLine(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 plus(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.euclid.Angle getAngle(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double elementAt(int)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double[] getXYZ3()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double distanceFromLine(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPoint3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 multiplyBy(double)" class="org.xmlcml.cml.element.CMLPoint3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPoint3" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.StereoBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.StereoBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.StereoBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.StereoBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.StereoBond" />
	<class name="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaxBondOrder()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.Integer getFormalCharge()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.Integer getValency()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setCovalentRadius(java.lang.Double)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setMaxBondOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="org.openscience.cdk.interfaces.IAtomType$Hybridization getHybridization()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setAtomTypeName(java.lang.String)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.String getAtomTypeName()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setFormalCharge(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setBondOrderSum(java.lang.Double)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.Double getCovalentRadius()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.Integer getFormalNeighbourCount()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setValency(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="java.lang.Double getBondOrderSum()" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setFormalNeighbourCount(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAtomType" />
	<method signature="void setHybridization(org.openscience.cdk.interfaces.IAtomType$Hybridization)" class="org.openscience.cdk.interfaces.IAtomType" />
	<class name="org.openscience.cdk.index.CASNumber" />
	<method signature="int calculateCheckDigit(java.lang.String,java.lang.String)" class="org.openscience.cdk.index.CASNumber" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.index.CASNumber" />
	<method signature="boolean isValid(java.lang.String)" class="org.openscience.cdk.index.CASNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.index.CASNumber" />
	<class name="org.xmlcml.cml.element.CMLReactionList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactionList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactionList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactionList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactionList)" class="org.xmlcml.cml.element.CMLReactionList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactionList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactionList" />
	<class name="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableRowElements()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void addTableRow(org.xmlcml.cml.element.AbstractTableRow)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableRowList)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableRowList" />
	<class name="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.util.List getList(org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="void setAtomRefs4(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="double getCalculatedTorsion(java.util.List)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.util.List getAtomIds()" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.CMLAtomSet)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.util.Map getIndexedTorsions(java.util.List)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="double getCalculatedTorsion(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="void outputHTML(java.io.Writer,java.util.List,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.lang.String atomHash(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLTorsion" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLTorsion" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTorsion" />
	<field name="logger" class="org.xmlcml.cml.element.CMLTorsion" />
	<class name="org.xmlcml.cml.element.CMLParticle" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLParticle" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLParticle)" class="org.xmlcml.cml.element.CMLParticle" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLParticle" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLParticle" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLParticle" />
	<field name="NS" class="org.xmlcml.cml.element.CMLParticle" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$1" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$1" />
	<field name="this$0" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$1" />
	<class name="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="double get(int)" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="void add(double)" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<field name="array" class="org.openscience.cdk.qsar.result.DoubleArrayResult" />
	<class name="org.xmlcml.cml.element.CMLRegion" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLRegion" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLRegion" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLRegion)" class="org.xmlcml.cml.element.CMLRegion" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLRegion" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLRegion" />
	<field name="NS" class="org.xmlcml.cml.element.CMLRegion" />
	<class name="org._3pq.jgrapht.DirectedGraph" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.DirectedGraph" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.DirectedGraph" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.DirectedGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.DirectedGraph" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.DirectedGraph" />
	<class name="org.openscience.cdk.interfaces.IChemObjectChangeEvent" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemObjectChangeEvent" />
	<method signature="java.lang.Object getSource()" class="org.openscience.cdk.interfaces.IChemObjectChangeEvent" />
	<class name="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.MacroModelFormat" />
	<class name="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="java.lang.String extractFieldData(java.lang.String)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="java.lang.String extractFieldName(java.lang.String,java.lang.String)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void readDataBlockInto(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void processIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="java.lang.String skipOtherFieldHeaderLines(java.lang.String)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="nextMolecule" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="input" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="builder" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="currentLine" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="currentFormat" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="nextAvailableIsKnown" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="logger" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="factory" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<field name="forceReadAs3DCoords" class="org.openscience.cdk.io.iterator.IteratingMDLReader" />
	<class name="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.HINFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.HINFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.HINFormat" />
	<class name="org.openscience.cdk.Monomer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Monomer" />
	<method signature="java.lang.String getMonomerType()" class="org.openscience.cdk.Monomer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Monomer" />
	<method signature="void setMonomerName(java.lang.String)" class="org.openscience.cdk.Monomer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Monomer" />
	<method signature="void setMonomerType(java.lang.String)" class="org.openscience.cdk.Monomer" />
	<method signature="java.lang.String getMonomerName()" class="org.openscience.cdk.Monomer" />
	<field name="monomerName" class="org.openscience.cdk.Monomer" />
	<field name="serialVersionUID" class="org.openscience.cdk.Monomer" />
	<field name="monomerType" class="org.openscience.cdk.Monomer" />
	<class name="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getRecord()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.Integer getSerial()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setOxt(java.lang.Boolean)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getSegID()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setAltLoc(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setResSeq(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getName()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.Double getOccupancy()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setChainID(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.Double getTempFactor()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setName(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setRecord(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.Boolean getHetAtom()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setHetAtom(java.lang.Boolean)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.Boolean getOxt()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getICode()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setTempFactor(java.lang.Double)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setICode(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setSegID(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getAltLoc()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setSerial(java.lang.Integer)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getChainID()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getResSeq()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setOccupancy(java.lang.Double)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="java.lang.String getResName()" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<method signature="void setResName(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBAtom" />
	<class name="org.openscience.jchempaint.renderer.generators.AtomContainerTitleGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.AtomContainerTitleGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.AtomContainerTitleGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.AtomContainerTitleGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.AtomContainerTitleGenerator" />
	<class name="org.openscience.cdk.interfaces.IRing" />
	<method signature="org.openscience.cdk.interfaces.IBond getNextBond(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IRing" />
	<method signature="int getBondOrderSum()" class="org.openscience.cdk.interfaces.IRing" />
	<method signature="int getRingSize()" class="org.openscience.cdk.interfaces.IRing" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IRing" />
	<class name="org.openscience.cdk.event.ChemObjectChangeEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.openscience.cdk.event.ChemObjectChangeEvent" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.event.ChemObjectChangeEvent" />
	<field name="serialVersionUID" class="org.openscience.cdk.event.ChemObjectChangeEvent" />
	<class name="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,double,boolean,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="x2" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="width" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="direction" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="y2" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="x1" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<field name="y1" class="org.openscience.jchempaint.renderer.elements.ArrowElement" />
	<class name="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<method signature="org.xmlcml.molutil.ChemicalElement$RadiusType[] values()" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<method signature="org.xmlcml.molutil.ChemicalElement$RadiusType valueOf(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<field name="ATOMIC" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<field name="$VALUES" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<field name="COVALENT" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<field name="IONIC" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<field name="VDW" class="org.xmlcml.molutil.ChemicalElement$RadiusType" />
	<class name="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Aces2Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Aces2Format" />
	<class name="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SMILESFormat" />
	<class name="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBondTypeList)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void addBondType(org.xmlcml.cml.element.AbstractBondType)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondTypeElements()" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBondTypeList" />
	<class name="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setXMLContent(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="java.lang.String[] getXMLContent()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBondSet)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSizeAttribute()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setSize(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setSize(int)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="int getSize()" class="org.xmlcml.cml.element.AbstractBondSet" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_att_size" class="org.xmlcml.cml.element.AbstractBondSet" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBondSet" />
	<class name="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<method signature="org.xmlcml.cml.attribute.DelimiterAttribute$Action[] values()" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<method signature="org.xmlcml.cml.attribute.DelimiterAttribute$Action valueOf(java.lang.String)" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<field name="RESET" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<field name="PRESERVE" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<field name="$VALUES" class="org.xmlcml.cml.attribute.DelimiterAttribute$Action" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreAngleBond" />
	<method signature="double getBondLength()" class="org.openscience.cdk.pharmacophore.PharmacophoreAngleBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreAngleBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreAtom,org.openscience.cdk.pharmacophore.PharmacophoreAtom,org.openscience.cdk.pharmacophore.PharmacophoreAtom)" class="org.openscience.cdk.pharmacophore.PharmacophoreAngleBond" />
	<class name="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseWheelMovedBackward(int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseExit(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseWheelMovedForward(int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseClickedDouble(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseEnter(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseClickedUpRight(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseClickedUp(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseMove(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseDrag(int,int,int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseClickedDownRight(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<method signature="void mouseClickedDown(int,int)" class="org.openscience.jchempaint.controller.IMouseEventRelay" />
	<class name="org.openscience.cdk.io.PDBReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="org.openscience.cdk.protein.data.PDBAtom readAtom(java.lang.String,int)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void addBond(org.openscience.cdk.protein.data.PDBPolymer,int,int)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void close()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="boolean createBondsWithRebondTool(org.openscience.cdk.interfaces.IBioPolymer)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.PDBReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.PDBReader" />
	<field name="pdbFactory" class="org.openscience.cdk.io.PDBReader" />
	<field name="atomNumberMap" class="org.openscience.cdk.io.PDBReader" />
	<field name="_oInput" class="org.openscience.cdk.io.PDBReader" />
	<field name="readConnect" class="org.openscience.cdk.io.PDBReader" />
	<field name="bondsFromConnectRecords" class="org.openscience.cdk.io.PDBReader" />
	<field name="logger" class="org.openscience.cdk.io.PDBReader" />
	<field name="useRebondTool" class="org.openscience.cdk.io.PDBReader" />
	<class name="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractObject)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractObject" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractObject" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractObject" />
	<class name="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="boolean isElement(java.lang.String)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.config.IsotopeFactory getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IElement getElement(java.lang.String)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtom configure(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="double getNaturalMass(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IIsotope getMajorIsotope(int)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IIsotope getMajorIsotope(java.lang.String)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IElement getElement(int)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtom configure(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="java.lang.String getElementSymbol(int)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="org.openscience.cdk.interfaces.IIsotope[] getIsotopes(java.lang.String)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="void configureAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.config.IsotopeFactory" />
	<method signature="int getSize()" class="org.openscience.cdk.config.IsotopeFactory" />
	<field name="debug" class="org.openscience.cdk.config.IsotopeFactory" />
	<field name="isotopes" class="org.openscience.cdk.config.IsotopeFactory" />
	<field name="ifac" class="org.openscience.cdk.config.IsotopeFactory" />
	<field name="majorIsotopes" class="org.openscience.cdk.config.IsotopeFactory" />
	<field name="logger" class="org.openscience.cdk.config.IsotopeFactory" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="boolean isUnspecified()" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void setClockwise(boolean)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void setUnspecified(boolean)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="int getDegree()" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="void setDegree(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<method signature="boolean isClockwise()" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<field name="unspecified" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<field name="clockwise" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<field name="degree" class="org.openscience.cdk.smiles.smarts.parser.ASTChirality" />
	<class name="org.openscience.cdk.io.ShelXWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void writeCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void writeln(java.lang.String)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void write(java.lang.String)" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.ShelXWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.ShelXWriter" />
	<field name="writer" class="org.openscience.cdk.io.ShelXWriter" />
	<class name="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="void addSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="boolean hasSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="java.util.HashSet getSymbolSet()" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<method signature="void removeSymbol(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<field name="symbols" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.SymbolSetQueryAtom" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="void setType(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<method signature="int getType()" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<field name="type" class="org.openscience.cdk.smiles.smarts.parser.ASTNotBond" />
	<class name="org.xmlcml.cml.element.CMLReaction" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReaction)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void mergeProductLists()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.CMLReaction$Component)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.lang.String getId(java.lang.String)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.lang.String getFilename()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getMolecules(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getBonds(org.xmlcml.cml.element.CMLReaction$Component)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void removeOrphanSubstances()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getOrCreateFormulas(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.lang.String access$000()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getDescendantReactants()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getFormulas(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getBonds(org.xmlcml.cml.element.ReactionComponent)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getDescendantProducts()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="org.xmlcml.cml.element.CMLReactantList getReactantList()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getReactionComponentDescendants(org.xmlcml.cml.element.ReactionComponent,boolean)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getSpectatorMolecules(int)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void mergeReactantLists()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getMolecules(org.xmlcml.cml.element.CMLReaction$Component)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="org.xmlcml.cml.element.CMLReactantList getOrCreateReactantList()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void mergePRLists(org.xmlcml.cml.element.CMLReaction$Component,org.xmlcml.cml.element.CMLReaction$Component)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getDescendantSpectators()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void addReactant(org.xmlcml.cml.element.CMLReactant)" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLReaction" />
	<method signature="org.xmlcml.cml.element.CMLProductList getProductList()" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="FROM_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="IGNORE_ORDER" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="MAP_REACTION_ATOM_MAP_INCOMPLETE" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="FROM_SPECTATOR_PRODUCT_TO_REACTANT" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="logger" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="MAP_REACTION_ATOM_MAP_COMPLETE" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReaction" />
	<field name="ANYTAG" class="org.xmlcml.cml.element.CMLReaction" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<field name="ringSize" class="org.openscience.cdk.isomorphism.matchers.smarts.RingAtom" />
	<class name="org.xmlcml.cml.element.CMLElementConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLElementConstants" />
	<class name="org.openscience.cdk.validate.Geometry3DValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.validate.Geometry3DValidator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.Geometry3DValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.Geometry3DValidator" />
	<class name="org.xmlcml.euclid.Line2" />
	<method signature="double getYIntercept()" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Vector2 getUnitVector()" class="org.xmlcml.euclid.Line2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getFrom()" class="org.xmlcml.euclid.Line2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getMidPoint()" class="org.xmlcml.euclid.Line2" />
	<method signature="double getSlope()" class="org.xmlcml.euclid.Line2" />
	<method signature="double getDistanceFromPoint(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Line2" />
	<method signature="boolean contains(org.xmlcml.euclid.Real2,double,boolean)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getTo()" class="org.xmlcml.euclid.Line2" />
	<method signature="void init()" class="org.xmlcml.euclid.Line2" />
	<method signature="void setXY(org.xmlcml.euclid.Real2,int)" class="org.xmlcml.euclid.Line2" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Line2" />
	<method signature="double getLambda(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getIntersection(org.xmlcml.euclid.Line2)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getNearestPointOnLine(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Line2" />
	<method signature="double getXIntercept()" class="org.xmlcml.euclid.Line2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Real2 getXY(int)" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Vector2 getVector()" class="org.xmlcml.euclid.Line2" />
	<method signature="org.xmlcml.euclid.Angle getAngleMadeWith(org.xmlcml.euclid.Line2)" class="org.xmlcml.euclid.Line2" />
	<method signature="double getLength()" class="org.xmlcml.euclid.Line2" />
	<method signature="void flipCoordinates()" class="org.xmlcml.euclid.Line2" />
	<field name="to" class="org.xmlcml.euclid.Line2" />
	<field name="slope" class="org.xmlcml.euclid.Line2" />
	<field name="c" class="org.xmlcml.euclid.Line2" />
	<field name="unitVector" class="org.xmlcml.euclid.Line2" />
	<field name="vector" class="org.xmlcml.euclid.Line2" />
	<field name="from" class="org.xmlcml.euclid.Line2" />
	<field name="xint" class="org.xmlcml.euclid.Line2" />
	<class name="org.xmlcml.cml.element.AbstractList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractList)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractList" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractList" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="boolean equals(java.lang.Object)" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="int[] getMatchingAtoms()" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="java.lang.String getSmarts()" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="void setSmarts(java.lang.String)" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="void setMatchingAtoms(int[])" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreAtom)" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<field name="matchingAtoms" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<field name="smarts" class="org.openscience.cdk.pharmacophore.PharmacophoreAtom" />
	<class name="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,java.lang.String)" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<method signature="void setSource(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getSource()" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<field name="menuHelper" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<field name="source" class="org.openscience.jchempaint.JChemPaintPopupMenu" />
	<class name="org.openscience.jchempaint.controller.IChangeModeListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IChangeModeListener" />
	<method signature="void modeChanged(org.openscience.jchempaint.controller.IControllerModule)" class="org.openscience.jchempaint.controller.IChangeModeListener" />
	<class name="org.xmlcml.cml.element.CMLJoin" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="java.lang.String getId(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLJoin)" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="void processMoleculeRefs2AndAtomRefs2(org.xmlcml.cml.element.CMLMolecule,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLJoin" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="PREVIOUS_S" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="PARENT_S" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="CHILD_S" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="FRAGMENT_CONTAINER" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="TORSION_END" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="TORSION_END_QUERY" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="R_GROUP" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="NS" class="org.xmlcml.cml.element.CMLJoin" />
	<field name="NEXT_S" class="org.xmlcml.cml.element.CMLJoin" />
	<class name="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="boolean checkJavaTypes()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void init()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="java.util.Map getMap()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void addXSDTypes()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.SchemaManager)" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void readAssembleAndIndexSchema(java.lang.String)" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void setMap(java.util.Map)" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="boolean processJavaTypes()" class="org.xmlcml.cml.base.TypeGenerator" />
	<method signature="void indexSchema()" class="org.xmlcml.cml.base.TypeGenerator" />
	<field name="map" class="org.xmlcml.cml.base.TypeGenerator" />
	<class name="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CACheFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CACheFormat" />
	<class name="org.openscience.cdk.interfaces.IReaction$Direction" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<method signature="org.openscience.cdk.interfaces.IReaction$Direction[] values()" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<method signature="org.openscience.cdk.interfaces.IReaction$Direction valueOf(java.lang.String)" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<field name="$VALUES" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<field name="BIDIRECTIONAL" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<field name="BACKWARD" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<field name="FORWARD" class="org.openscience.cdk.interfaces.IReaction$Direction" />
	<class name="org.openscience.jchempaint.renderer.elements.WigglyLineElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.WigglyLineElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.WigglyLineElement" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.LineElement,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.WigglyLineElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.WigglyLineElement" />
	<class name="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="int getIsotopeCountMin(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="org.openscience.cdk.interfaces.IIsotope getIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="java.util.Map access$000(org.openscience.cdk.formula.MolecularFormulaRange)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="void removeAllIsotopes()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="void addIsotope(org.openscience.cdk.interfaces.IIsotope,int,int)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="void removeIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="boolean isTheSame(org.openscience.cdk.interfaces.IIsotope,org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="java.lang.Iterable isotopes()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="int getIsotopeCount()" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<method signature="int getIsotopeCountMax(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<field name="isotopesMax" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<field name="isotopesMin" class="org.openscience.cdk.formula.MolecularFormulaRange" />
	<class name="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="java.lang.String getSphericalMatcher(org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="java.lang.String getSphericalMatcher(java.lang.String)" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<field name="maxBondOrder" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<field name="atomTypeTools" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<field name="atomTypeIds" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<field name="logger" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<field name="factory" class="org.openscience.cdk.atomtype.MMFF94AtomTypeMatcher" />
	<class name="org.openscience.cdk.io.ISimpleChemObjectReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.ISimpleChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ISimpleChemObjectReader" />
	<class name="org.xmlcml.cml.element.CMLFormula$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<method signature="org.xmlcml.cml.element.CMLFormula$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<method signature="org.xmlcml.cml.element.CMLFormula$Type[] values()" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="example" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="type" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="NESTEDBRACKETS" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="IUPAC" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="NOPUNCTUATION" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="STRUCTURAL" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="ELEMENT_WHITESPACE_COUNT" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="SUBMOIETY" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="MOIETY" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="ELEMENT_COUNT_WHITESPACE" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="MULTIPLIED_ELEMENT_COUNT_WHITESPACE" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="CONCISE" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<field name="ANY" class="org.xmlcml.cml.element.CMLFormula$Type" />
	<class name="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setWeight(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="java.lang.String getLabel()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setLabel(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getWeightAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractKpoint)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setWeight(double)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLabelAttribute()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="double getWeight()" class="org.xmlcml.cml.element.AbstractKpoint" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_weight" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_label" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractKpoint" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractKpoint" />
	<class name="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian03Format" />
	<class name="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeBonds(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void writeAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<field name="write3DCoordinates" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<field name="writer" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<field name="logger" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<field name="write2DCoordinates" class="org.openscience.cdk.io.CDKSourceCodeWriter" />
	<class name="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.MDLRXNFormat" />
	<class name="org.xmlcml.cml.element.CMLSphere3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSphere3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSphere3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSphere3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSphere3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSphere3)" class="org.xmlcml.cml.element.CMLSphere3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSphere3" />
	<class name="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExternalHighlightGenerator" />
	<class name="org.openscience.cdk.Isotope" />
	<method signature="void setNaturalAbundance(java.lang.Double)" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;init&gt;(int,java.lang.String,int,double,double)" class="org.openscience.cdk.Isotope" />
	<method signature="java.lang.Integer getMassNumber()" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Isotope" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Isotope" />
	<method signature="void setMassNumber(java.lang.Integer)" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.Isotope" />
	<method signature="void setExactMass(java.lang.Double)" class="org.openscience.cdk.Isotope" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;init&gt;(int,java.lang.String,double,double)" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.Isotope" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.Isotope" />
	<method signature="java.lang.Double getExactMass()" class="org.openscience.cdk.Isotope" />
	<method signature="java.lang.Double getNaturalAbundance()" class="org.openscience.cdk.Isotope" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.Isotope" />
	<field name="naturalAbundance" class="org.openscience.cdk.Isotope" />
	<field name="exactMass" class="org.openscience.cdk.Isotope" />
	<field name="massNumber" class="org.openscience.cdk.Isotope" />
	<field name="serialVersionUID" class="org.openscience.cdk.Isotope" />
	<class name="org.xmlcml.euclid.Transform2$Type" />
	<method signature="org.xmlcml.euclid.Transform2$Type[] values()" class="org.xmlcml.euclid.Transform2$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Transform2$Type" />
	<method signature="org.xmlcml.euclid.Transform2$Type valueOf(java.lang.String)" class="org.xmlcml.euclid.Transform2$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int,java.lang.String)" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ROT_TRANS_AXIAL_SCALE" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="i" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ROT_ORIG" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="$VALUES" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ROT_TRANS_SCALE" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ROT_TRANS" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ROT_TRANS_SCALE_PERSP" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="s" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="NULL" class="org.xmlcml.euclid.Transform2$Type" />
	<field name="ANY" class="org.xmlcml.euclid.Transform2$Type" />
	<class name="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.GROMOS96Format" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSAtom" />
	<class name="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ShelXFormat" />
	<class name="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void addTableCell(org.xmlcml.cml.element.AbstractTableCell)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableRow)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableCellElements()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableRow" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableRow" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableRow" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableRow" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableRow" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableRow" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableRow" />
	<class name="org.openscience.cdk.AtomParity" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.AtomParity" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.AtomParity" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.AtomParity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomParity" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.AtomParity" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getSurroundingAtoms()" class="org.openscience.cdk.AtomParity" />
	<method signature="int getParity()" class="org.openscience.cdk.AtomParity" />
	<field name="parity" class="org.openscience.cdk.AtomParity" />
	<field name="neighbors" class="org.openscience.cdk.AtomParity" />
	<field name="centralAtom" class="org.openscience.cdk.AtomParity" />
	<field name="serialVersionUID" class="org.openscience.cdk.AtomParity" />
	<class name="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void addYaxis(org.xmlcml.cml.element.AbstractYaxis)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSpectrumData)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLElements getYaxisElements()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void addXaxis(org.xmlcml.cml.element.AbstractXaxis)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLElements getXaxisElements()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSpectrumData" />
	<class name="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MDLV3000Format" />
	<class name="org.xmlcml.cml.element.CMLFragmentList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLFragmentList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLFragmentList)" class="org.xmlcml.cml.element.CMLFragmentList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLFragmentList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFragmentList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLFragmentList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLFragmentList" />
	<class name="org.openscience.jchempaint.renderer.elements.TextElement" />
	<method signature="void &lt;init&gt;(double,double,java.lang.String,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<method signature="void &lt;init&gt;(double,double,java.lang.String,java.awt.Color,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<field name="text" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<field name="y" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<field name="backColor" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<field name="x" class="org.openscience.jchempaint.renderer.elements.TextElement" />
	<class name="org.openscience.cdk.validate.ValidationTest" />
	<method signature="void setDetails(java.lang.String)" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObject,java.lang.String,java.lang.String)" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObject,java.lang.String)" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getChemObject()" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="java.lang.String getError()" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.ValidationTest" />
	<method signature="java.lang.String getDetails()" class="org.openscience.cdk.validate.ValidationTest" />
	<field name="object" class="org.openscience.cdk.validate.ValidationTest" />
	<field name="details" class="org.openscience.cdk.validate.ValidationTest" />
	<field name="error" class="org.openscience.cdk.validate.ValidationTest" />
	<class name="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="java.util.List findEquivalenceClasses()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet toRingSet(org.openscience.cdk.interfaces.IAtomContainer,java.util.Collection)" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findRelevantRings()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="int[] getSSSRWeightVector()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findEssentialRings()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findSSSR()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis cycleBasis()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<method signature="int[] getEquivalenceClassesSizeVector()" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<field name="cycleBasis" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<field name="atomContainer" class="org.openscience.cdk.ringsearch.SSSRFinder" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RingBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.RingBond" />
	<class name="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="int countChars(java.lang.String,char)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="java.lang.String getCommand(java.lang.String)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="int countBrackets(java.lang.String)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="nextMolecule" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="input" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="builder" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="currentLine" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="depth" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="nextAvailableIsKnown" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<field name="logger" class="org.openscience.cdk.io.iterator.IteratingPCCompoundASNReader" />
	<class name="org.openscience.jchempaint.action.OpenAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.OpenAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.OpenAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.OpenAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.OpenAction" />
	<class name="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<method signature="org.xmlcml.cml.base.CMLElement$CoordinateType[] values()" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<method signature="org.xmlcml.cml.base.CMLElement$CoordinateType valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<field name="CARTESIAN" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<field name="TWOD" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<field name="FRACTIONAL" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<field name="name" class="org.xmlcml.cml.base.CMLElement$CoordinateType" />
	<class name="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<method signature="org.xmlcml.cml.base.CMLElement$Hybridization[] values()" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<method signature="org.xmlcml.cml.base.CMLElement$Hybridization valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="UNKNOWN" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="SP2" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="SP" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="SP3" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="SQUARE_PLANAR" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<field name="BENT" class="org.xmlcml.cml.base.CMLElement$Hybridization" />
	<class name="org.xmlcml.cml.element.CMLModule" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLModule" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLModule)" class="org.xmlcml.cml.element.CMLModule" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLModule" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLModule" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLModule" />
	<field name="NS" class="org.xmlcml.cml.element.CMLModule" />
	<class name="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void setReactants(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="java.lang.Double getProductCoefficient(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addReactant(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addReactant(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="boolean setReactantCoefficients(java.lang.Double[])" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getAgents()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="boolean setReactantCoefficient(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="org.openscience.cdk.interfaces.IMapping getMapping(int)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void removeMapping(int)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="int getMappingCount()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="int getReactantCount()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="java.lang.Double getReactantCoefficient(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getProducts()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="java.lang.Double[] getReactantCoefficients()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="int getProductCount()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void setDirection(org.openscience.cdk.interfaces.IReaction$Direction)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addProduct(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="java.lang.Double[] getProductCoefficients()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addMapping(org.openscience.cdk.interfaces.IMapping)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void setProducts(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="boolean setProductCoefficient(org.openscience.cdk.interfaces.IMolecule,java.lang.Double)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addAgent(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getReactants()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="boolean setProductCoefficients(java.lang.Double[])" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="void addProduct(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="java.lang.Iterable mappings()" class="org.openscience.cdk.interfaces.IReaction" />
	<method signature="org.openscience.cdk.interfaces.IReaction$Direction getDirection()" class="org.openscience.cdk.interfaces.IReaction" />
	<class name="org.openscience.cdk.config.IAtomTypeConfigurator" />
	<method signature="java.util.List readAtomTypes(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.IAtomTypeConfigurator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.IAtomTypeConfigurator" />
	<method signature="void setInputStream(java.io.InputStream)" class="org.openscience.cdk.config.IAtomTypeConfigurator" />
	<class name="org.openscience.jchempaint.renderer.generators.IGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.IGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.IGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.IGenerator" />
	<class name="org.openscience.jchempaint.action.JCPAction" />
	<method signature="boolean isEnabled()" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="boolean isPopupAction()" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="org.openscience.jchempaint.action.JCPAction getAction(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,boolean)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="org.openscience.jchempaint.action.JCPAction getAction(org.openscience.jchempaint.JChemPaintPanel,java.lang.String)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void setIsPopupAction(boolean)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void setType(java.lang.String)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getSource(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void setJChemPaintPanel(org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.action.JCPAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,boolean)" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="popupActions" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="isPopupAction" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="jcpPanel" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="TIPSUFFIX" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="type" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="actionSuffix" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="actions" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="disabled_imageSuffix" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="logger" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.JCPAction" />
	<field name="imageSuffix" class="org.openscience.jchempaint.action.JCPAction" />
	<class name="org.openscience.cdk.Crystal" />
	<method signature="void setZeroAxes()" class="org.openscience.cdk.Crystal" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.Crystal" />
	<method signature="java.lang.String getSpaceGroup()" class="org.openscience.cdk.Crystal" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Crystal" />
	<method signature="void setSpaceGroup(java.lang.String)" class="org.openscience.cdk.Crystal" />
	<method signature="java.lang.Integer getZ()" class="org.openscience.cdk.Crystal" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Crystal" />
	<method signature="javax.vecmath.Vector3d getC()" class="org.openscience.cdk.Crystal" />
	<method signature="void setB(javax.vecmath.Vector3d)" class="org.openscience.cdk.Crystal" />
	<method signature="void setZ(java.lang.Integer)" class="org.openscience.cdk.Crystal" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Crystal" />
	<method signature="void setA(javax.vecmath.Vector3d)" class="org.openscience.cdk.Crystal" />
	<method signature="javax.vecmath.Vector3d getA()" class="org.openscience.cdk.Crystal" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Crystal" />
	<method signature="void setC(javax.vecmath.Vector3d)" class="org.openscience.cdk.Crystal" />
	<method signature="javax.vecmath.Vector3d getB()" class="org.openscience.cdk.Crystal" />
	<field name="spaceGroup" class="org.openscience.cdk.Crystal" />
	<field name="zValue" class="org.openscience.cdk.Crystal" />
	<field name="cAxis" class="org.openscience.cdk.Crystal" />
	<field name="aAxis" class="org.openscience.cdk.Crystal" />
	<field name="bAxis" class="org.openscience.cdk.Crystal" />
	<field name="serialVersionUID" class="org.openscience.cdk.Crystal" />
	<class name="org.openscience.cdk.interfaces.IStrand" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="java.util.Map getMonomers()" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void removeMonomer(java.lang.String)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void setStrandName(java.lang.String)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="void setStrandType(java.lang.String)" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="java.lang.String getStrandType()" class="org.openscience.cdk.interfaces.IStrand" />
	<method signature="java.lang.String getStrandName()" class="org.openscience.cdk.interfaces.IStrand" />
	<class name="org.openscience.jchempaint.renderer.generators.ReactantsBoxGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactantsBoxGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ReactantsBoxGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactantsBoxGenerator" />
	<class name="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSpectator)" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="void mergeChildMolecules()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLSpectator" />
	<method signature="void moveLabelledReactantsProducts(nu.xom.Elements,java.lang.String)" class="org.xmlcml.cml.element.CMLSpectator" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSpectator" />
	<class name="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void finishAppendingStrings(java.lang.String)" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void append(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void setDelimiter(java.lang.String)" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="java.lang.String[] getStrings()" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableContent" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableContent)" class="org.xmlcml.cml.element.CMLTableContent" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTableContent" />
	<field name="sb" class="org.xmlcml.cml.element.CMLTableContent" />
	<class name="org.xmlcml.cml.element.CMLArg" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void eval(java.util.List)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteAttributes(nu.xom.Element)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void setDouble(double)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void addArg(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.element.CMLArg,int)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteParameterName(org.xmlcml.cml.base.CMLElement,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="org.xmlcml.cml.element.CMLScalar getScalar()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteTextContent(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="java.util.List getArgs(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLArg)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="double getDouble()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void setInteger(int)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void addIdxArgsWithSerialNumber(org.xmlcml.cml.base.CMLElement,java.lang.String)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void processArgs(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void setString(java.lang.String)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void processArg(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void transferArgs(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void removeArgs(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteParentAttributes(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="int getInteger()" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteNameByValue(org.xmlcml.cml.base.CMLElement,java.util.List)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteNameByValue(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLArg" />
	<method signature="void substituteNameByValue(nu.xom.Attribute)" class="org.xmlcml.cml.element.CMLArg" />
	<field name="START_CHARS" class="org.xmlcml.cml.element.CMLArg" />
	<field name="NS" class="org.xmlcml.cml.element.CMLArg" />
	<field name="END_CHARS" class="org.xmlcml.cml.element.CMLArg" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom" />
	<class name="org.openscience.cdk.io.SDFWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void writeMoleculeSet(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="boolean isCDKInternalProperty(java.lang.Object)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void customizeJob()" class="org.openscience.cdk.io.SDFWriter" />
	<method signature="void writeChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.SDFWriter" />
	<field name="cdkInternalProperties" class="org.openscience.cdk.io.SDFWriter" />
	<field name="writerProperties" class="org.openscience.cdk.io.SDFWriter" />
	<field name="writer" class="org.openscience.cdk.io.SDFWriter" />
	<field name="logger" class="org.openscience.cdk.io.SDFWriter" />
	<class name="org.xmlcml.cml.element.CMLIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLIdentifier" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLIdentifier" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLIdentifier" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLConstants)" class="org.xmlcml.cml.element.CMLIdentifier" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLIdentifier" />
	<field name="NS" class="org.xmlcml.cml.element.CMLIdentifier" />
	<class name="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIGenerator getInChIGenerator(org.openscience.cdk.interfaces.IAtomContainer,java.lang.String)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIToStructure getInChIToStructure(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder,java.lang.String)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIGenerator getInChIGenerator(org.openscience.cdk.interfaces.IAtomContainer,java.util.List)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIToStructure getInChIToStructure(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder,java.util.List)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIGenerator getInChIGenerator(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIGeneratorFactory getInstance()" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="org.openscience.cdk.inchi.InChIToStructure getInChIToStructure(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<field name="INSTANCE" class="org.openscience.cdk.inchi.InChIGeneratorFactory" />
	<class name="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="void setCompareTable(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="void setBaseTable(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="boolean isIsomorphic(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="boolean isIsomorphic(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="base" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="compare" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="sortedCompareTable" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="baseTable" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="compareTable" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<field name="sortedBaseTable" class="org.openscience.cdk.isomorphism.IsomorphismTester" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis,org._3pq.jgrapht.Graph,java.util.List,boolean[],boolean[])" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="java.lang.Object auxVertex11(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="java.lang.Object auxVertex00(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="java.lang.Object auxVertex01(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<method signature="java.lang.Object auxVertex10(java.lang.Object)" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="vertexMap11" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="vertexMap00" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="uj" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="auxEdgeMap" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="auxVertexMap" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="vertexMap01" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="this$0" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="vertexMap10" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="serialVersionUID" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="g" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<field name="ui" class="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis$AuxiliaryGraph2" />
	<class name="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<method signature="void setTo(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ConvertToPseudoAtomAction" />
	<class name="org.xmlcml.euclid.Vector2" />
	<method signature="org.xmlcml.euclid.Vector2 projectOnto(org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Vector2" />
	<method signature="org.xmlcml.euclid.Angle getAngleMadeWith(org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Vector2" />
	<method signature="double getPerpProduct(org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Vector2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Vector2" />
	<method signature="boolean isParallelTo(org.xmlcml.euclid.Vector2,double)" class="org.xmlcml.euclid.Vector2" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Vector2" />
	<method signature="boolean isAntiParallelTo(org.xmlcml.euclid.Vector2,double)" class="org.xmlcml.euclid.Vector2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Vector2" />
	<class name="org.openscience.cdk.PhysicalConstants" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.PhysicalConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.PhysicalConstants" />
	<field name="MASS_PROTON" class="org.openscience.cdk.PhysicalConstants" />
	<field name="MASS_ELECTRON" class="org.openscience.cdk.PhysicalConstants" />
	<field name="BOHR_TO_ANGSTROM" class="org.openscience.cdk.PhysicalConstants" />
	<class name="org.openscience.cdk.io.GamessReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.GamessReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readCoordinates(org.openscience.cdk.interfaces.IMolecule,boolean)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void close()" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.GamessReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="double scalesCoordinatesUnits(boolean)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="java.lang.String identifyAtomicSymbol(int)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.GamessReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.GamessReader" />
	<field name="BOHR_UNIT" class="org.openscience.cdk.io.GamessReader" />
	<field name="input" class="org.openscience.cdk.io.GamessReader" />
	<field name="ANGSTROM_UNIT" class="org.openscience.cdk.io.GamessReader" />
	<field name="BOHR_TO_ANGSTROM" class="org.openscience.cdk.io.GamessReader" />
	<class name="org.openscience.cdk.Reaction$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.Reaction$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Reaction)" class="org.openscience.cdk.Reaction$1" />
	<field name="this$0" class="org.openscience.cdk.Reaction$1" />
	<class name="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CRK2DFormat" />
	<class name="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="void setHCount(int)" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<field name="HCount" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<field name="ID" class="org.openscience.cdk.isomorphism.matchers.SymbolQueryAtom" />
	<class name="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZAttribute()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractCrystal)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setZ(int)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void addCellParameter(org.xmlcml.cml.element.AbstractCellParameter)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setZ(java.lang.String)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void addSymmetry(org.xmlcml.cml.element.AbstractSymmetry)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="int getZ()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLElements getSymmetryElements()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractCrystal" />
	<method signature="org.xmlcml.cml.base.CMLElements getCellParameterElements()" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="_att_z" class="org.xmlcml.cml.element.AbstractCrystal" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractCrystal" />
	<class name="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.Type type()" class="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.path.Type)" class="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<field name="type" class="org.openscience.jchempaint.renderer.elements.path.PathElement" />
	<class name="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="void setTransform(java.awt.geom.AffineTransform)" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="java.awt.Point getTextBasePoint(java.lang.String,double,double,java.awt.Graphics2D)" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="int[] transformPoint(double,double)" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<method signature="java.awt.geom.Rectangle2D getTextBounds(java.lang.String,double,double,java.awt.Graphics2D,double)" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<field name="transform" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<field name="fm" class="org.openscience.jchempaint.renderer.visitor.AbstractAWTDrawVisitor" />
	<class name="org.openscience.cdk.Molecule" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Molecule" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.Molecule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Molecule" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.openscience.cdk.Molecule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Molecule" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Molecule" />
	<field name="serialVersionUID" class="org.openscience.cdk.Molecule" />
	<class name="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrderAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefsAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBond)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setBondRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondStereoElements()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setOrder(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setCyclic(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setAtomRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefsAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCyclicAttribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs2Attribute()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String[] getAtomRefs2()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setAtomRefs2(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getCyclic()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void addBondStereo(org.xmlcml.cml.element.AbstractBondStereo)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getOrder()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setAtomRefs2(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setAtomRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBond" />
	<method signature="void setBondRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_bondrefs" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_order" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_cyclic" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_atomrefs" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_atomrefs2" class="org.xmlcml.cml.element.AbstractBond" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBond" />
	<class name="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="org.openscience.cdk.interfaces.IReaction readReaction(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="boolean isReady()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="java.lang.String readCommand()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="java.lang.String readLine()" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<field name="input" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<field name="logger" class="org.openscience.cdk.io.MDLRXNV3000Reader" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="int getNumOfConnection()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="void setNumOfConnection(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<field name="numOfConnection" class="org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity" />
	<class name="org.xmlcml.euclid.Line3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Vector3 getVector()" class="org.xmlcml.euclid.Line3" />
	<method signature="boolean containsPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Line3 negative()" class="org.xmlcml.euclid.Line3" />
	<method signature="boolean isAntiparallelTo(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Line3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Line3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Line3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Line3" />
	<method signature="boolean isParallelTo(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Point3 getClosestPointTo(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Line3" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Line3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Point3 getIntersectionWith(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Line3 transform(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Line3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Line3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Line3" />
	<method signature="org.xmlcml.euclid.Point3 getPoint()" class="org.xmlcml.euclid.Line3" />
	<field name="point" class="org.xmlcml.euclid.Line3" />
	<field name="vect" class="org.xmlcml.euclid.Line3" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreBond" />
	<method signature="double getBondLength()" class="org.openscience.cdk.pharmacophore.PharmacophoreBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreAtom,org.openscience.cdk.pharmacophore.PharmacophoreAtom)" class="org.openscience.cdk.pharmacophore.PharmacophoreBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreBond" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTReaction" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTReaction" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTReaction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTReaction" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTReaction" />
	<class name="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<method signature="void constructPanel()" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="hCountField" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="symbolField" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="formalChargeField" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="hub" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="logger" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="isotopeField" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<field name="majorIsotopeNumber" class="org.openscience.jchempaint.dialog.editor.AtomEditor" />
	<class name="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void addMetadata(org.xmlcml.cml.element.AbstractMetadata)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataElements()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMetadataList" />
	<class name="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<method signature="void &lt;init&gt;(java.util.List,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<field name="elements" class="org.openscience.jchempaint.renderer.elements.GeneralPath" />
	<class name="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void setCMLValue(java.lang.String[])" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="java.lang.String[] getStringArray()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void checkValue(java.lang.String[])" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.StringArraySTAttribute)" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<field name="length" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<field name="ss" class="org.xmlcml.cml.base.StringArraySTAttribute" />
	<class name="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,boolean,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="filled" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="width" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="height" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="y" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<field name="x" class="org.openscience.jchempaint.renderer.elements.RectangleElement" />
	<class name="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Mol2Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Mol2Format" />
	<class name="org.openscience.cdk.AtomContainer" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addAtomParity(org.openscience.cdk.interfaces.IAtomParity)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer removeElectronContainer(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getElectronContainerCount()" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getLastAtom()" class="org.openscience.cdk.AtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer getElectronContainer(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getFirstAtom()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.util.List getConnectedLonePairsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Iterable bonds()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getConnectedBondsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAllElements()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeLonePair(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Iterable singleElectrons()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Iterable electronContainers()" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getAtomCount()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Iterable lonePairs()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ILonePair getLonePair(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getBondNumber(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void setBonds(org.openscience.cdk.interfaces.IBond[])" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getSingleElectronNumber(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAllBonds()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeSingleElectron(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond removeBond(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void growBondArray()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getConnectedBondsCount(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAtom(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron removeSingleElectron(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.util.List getConnectedAtomsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getConnectedAtomsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMinimumBondOrder(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ILonePair removeLonePair(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getConnectedLonePairsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addSingleElectron(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAllElectronContainers()" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getLonePairCount()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.util.List getConnectedBondsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getLonePairNumber(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getBondNumber(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getSingleElectronCount()" class="org.openscience.cdk.AtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomParity getAtomParity(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond getBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.util.List getConnectedSingleElectronsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron getSingleElectron(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addBond(int,int,org.openscience.cdk.interfaces.IBond$Order,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAtomAndConnectedElectronContainers(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addLonePair(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.AtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getAtomNumber(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void growLonePairArray()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void setAtom(int,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond getBond(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getConnectedSingleElectronsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addSingleElectron(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void growSingleElectronArray()" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addBond(int,int,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void removeAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Iterable atoms()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void remove(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond removeBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="java.util.List getConnectedElectronContainersList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaximumBondOrder(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addLonePair(int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.AtomContainer" />
	<method signature="double getBondOrderSum(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void &lt;init&gt;(int,int,int,int)" class="org.openscience.cdk.AtomContainer" />
	<method signature="int getBondCount()" class="org.openscience.cdk.AtomContainer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.AtomContainer" />
	<method signature="void growAtomArray()" class="org.openscience.cdk.AtomContainer" />
	<field name="atoms" class="org.openscience.cdk.AtomContainer" />
	<field name="atomCount" class="org.openscience.cdk.AtomContainer" />
	<field name="atomParities" class="org.openscience.cdk.AtomContainer" />
	<field name="lonePairCount" class="org.openscience.cdk.AtomContainer" />
	<field name="singleElectrons" class="org.openscience.cdk.AtomContainer" />
	<field name="lonePairs" class="org.openscience.cdk.AtomContainer" />
	<field name="singleElectronCount" class="org.openscience.cdk.AtomContainer" />
	<field name="bonds" class="org.openscience.cdk.AtomContainer" />
	<field name="bondCount" class="org.openscience.cdk.AtomContainer" />
	<field name="serialVersionUID" class="org.openscience.cdk.AtomContainer" />
	<field name="growArraySize" class="org.openscience.cdk.AtomContainer" />
	<class name="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPoint3)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPoint3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPoint3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPoint3" />
	<class name="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<method signature="org.xmlcml.cml.element.CMLCellParameter$Type[] values()" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<method signature="org.xmlcml.cml.element.CMLCellParameter$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<field name="ANGLE" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<field name="LENGTH" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<field name="s" class="org.xmlcml.cml.element.CMLCellParameter$Type" />
	<class name="org.openscience.cdk.qsar.result.IntegerResult" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<method signature="int intValue()" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<field name="value" class="org.openscience.cdk.qsar.result.IntegerResult" />
	<class name="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="int getBadCount(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecule loop(long,org.openscience.cdk.interfaces.IMolecule,int,java.util.List,int[],org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void sevenMemberedRingPossibilities(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRing,java.util.List)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="boolean isStructureOK(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="org.openscience.cdk.interfaces.IRingSet removeExtraRings(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="boolean inRingSet(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void sixMemberedRingPossibilities(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRing,java.util.List)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="org.openscience.cdk.interfaces.IRingSet recoverRingSystem(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void FixPyridineNOxides(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void fiveMemberedRingPossibilities(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRing,java.util.List)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="boolean isInterrupted()" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="boolean[] findRingsToCheck(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void setInterrupted(boolean)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecule fixAromaticBondOrders(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="boolean isOK(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void applyBonds(org.openscience.cdk.interfaces.IMolecule,java.util.ArrayList)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<method signature="void storeRingSystem(org.openscience.cdk.interfaces.IMolecule,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<field name="allRingsFinder" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<field name="interrupted" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<field name="listOfRings" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<field name="logger" class="org.openscience.cdk.smiles.DeduceBondSystemTool" />
	<class name="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PDBFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PDBFormat" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTGroup" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTGroup" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTGroup" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTGroup" />
	<class name="org.xmlcml.cml.base.CMLConstants$Role" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Role[] values()" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Role valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<field name="GROUP" class="org.xmlcml.cml.base.CMLConstants$Role" />
	<class name="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="int getReactionSchemeCount()" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="void add(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="java.lang.Iterable reactionSchemes()" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="void removeReactionScheme(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="void removeAllReactionSchemes()" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.interfaces.IReactionScheme" />
	<class name="org.openscience.cdk.interfaces.IMolecule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMolecule" />
	<class name="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ViewmolFormat" />
	<class name="org.xmlcml.cml.element.CMLLabel$Position" />
	<method signature="org.xmlcml.cml.element.CMLLabel$Position[] values()" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<method signature="org.xmlcml.cml.element.CMLLabel$Position valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<field name="PARENT" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<field name="LEFT" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<field name="RIGHT" class="org.xmlcml.cml.element.CMLLabel$Position" />
	<class name="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.PathBuilder lineTo(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.GeneralPath createPath()" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.PathBuilder color(java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="void add(org.openscience.jchempaint.renderer.elements.path.PathElement)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.PathBuilder cubicTo(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.PathBuilder moveTo(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="void close()" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<method signature="org.openscience.jchempaint.renderer.elements.path.PathBuilder quadTo(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<field name="elements" class="org.openscience.jchempaint.renderer.elements.path.PathBuilder" />
	<class name="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer$1)" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron next()" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainer$SingleElectronIterator" />
	<class name="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCMLValueAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakStructureElements()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setPeakMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void addPeakStructure(org.xmlcml.cml.element.AbstractPeakStructure)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setBondRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getPeakShape()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setAtomRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getPeakMultiplicity()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getCMLValue()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setPeakShape(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPeakStructure)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setAtomRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="void setBondRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakShapeAttribute()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_bondrefs" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_peakmultiplicity" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_value" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_peakshape" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_atomrefs" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPeakStructure" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="int getNumOfConnection()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="void setNumOfConnection(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<field name="numOfConnection" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity" />
	<class name="org.openscience.cdk.atomtype.StructGenMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<field name="logger" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<field name="factory" class="org.openscience.cdk.atomtype.StructGenMatcher" />
	<class name="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSphere3)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSphere3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSphere3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSphere3" />
	<class name="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<method signature="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy[] values()" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<method signature="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<field name="HYDROGEN_COUNT" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<field name="EXPLICIT_HYDROGENS" class="org.xmlcml.cml.element.CMLFormula$HydrogenStrategy" />
	<class name="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void process(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void process(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.attribute.RefAttribute)" class="org.xmlcml.cml.attribute.RefAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.RefAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.RefAttribute" />
	<class name="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRowsAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getMatrixType()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setMinValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setColumns(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setMaxValueArray(double[])" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="int getRows()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setMatrixType(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setRows(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setMaxValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMatrixTypeAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setRows(int)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setMinValueArray(double[])" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="int getColumns()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="double[] getMaxValueArray()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="double[] getErrorValueArray()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setErrorValueArray(double[])" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDelimiterAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setDelimiter(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getColumnsAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setErrorValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setColumns(int)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getDelimiter()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="double[] getMinValueArray()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_columns" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_matrixtype" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_errorvaluearray" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_delimiter" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_maxvaluearray" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_rows" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_minvaluearray" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMatrix" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractMatrix" />
	<class name="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IIsotope getIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.util.Map getProperties()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void setCharge(java.lang.Integer)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void removeAllIsotopes()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void removeProperty(java.lang.Object)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void setProperties(java.util.Map)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void removeIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="int getIsotopeCount(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula addIsotope(org.openscience.cdk.interfaces.IIsotope,int)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="boolean isTheSame(org.openscience.cdk.interfaces.IIsotope,org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.util.Map lazyProperties()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.lang.Integer getCharge()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula addIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.lang.Iterable isotopes()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="int getIsotopeCount()" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula add(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="java.lang.Object getProperty(java.lang.Object)" class="org.openscience.cdk.formula.MolecularFormula" />
	<method signature="void setProperty(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.formula.MolecularFormula" />
	<field name="isotopes" class="org.openscience.cdk.formula.MolecularFormula" />
	<field name="charge" class="org.openscience.cdk.formula.MolecularFormula" />
	<field name="serialVersionUID" class="org.openscience.cdk.formula.MolecularFormula" />
	<field name="properties" class="org.openscience.cdk.formula.MolecularFormula" />
	<class name="org.openscience.jchempaint.JCPToolBar$1" />
	<method signature="float getAlignmentY()" class="org.openscience.jchempaint.JCPToolBar$1" />
	<method signature="void &lt;init&gt;(javax.swing.Icon)" class="org.openscience.jchempaint.JCPToolBar$1" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JCPToolBar$1" />
	<class name="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.GhemicalSPMFormat" />
	<class name="org.openscience.cdk.geometry.ZMatrixTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.ZMatrixTools" />
	<method signature="javax.vecmath.Vector3d rotate(javax.vecmath.Vector3d,javax.vecmath.Vector3d,double)" class="org.openscience.cdk.geometry.ZMatrixTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.ZMatrixTools" />
	<method signature="javax.vecmath.Point3d[] zmatrixToCartesian(double[],int[],double[],int[],double[],int[])" class="org.openscience.cdk.geometry.ZMatrixTools" />
	<class name="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void writeCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void writeVector3d(javax.vecmath.Vector3d)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void writeln(java.lang.String)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void writeChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void write(java.lang.String)" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CrystClustWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.CrystClustWriter" />
	<field name="writer" class="org.openscience.cdk.io.CrystClustWriter" />
	<field name="logger" class="org.openscience.cdk.io.CrystClustWriter" />
	<class name="org.openscience.jchempaint.renderer.generators.HighlightAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.HighlightAtomGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.HighlightAtomGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.HighlightAtomGenerator" />
	<method signature="boolean shouldHighlight(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.HighlightAtomGenerator" />
	<class name="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject next()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void close()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="nextMolecule" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="hasNext" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="input" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="sp" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="currentLine" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="nextAvailableIsKnown" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<field name="logger" class="org.openscience.cdk.io.iterator.IteratingSMILESReader" />
	<class name="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTransform3)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTransform3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTransform3" />
	<class name="org.xmlcml.euclid.StringIntegerComparator" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.xmlcml.euclid.StringIntegerComparator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.StringIntegerComparator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.StringIntegerComparator" />
	<method signature="java.lang.Integer strip(java.lang.String)" class="org.xmlcml.euclid.StringIntegerComparator" />
	<class name="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.QChemFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.QChemFormat" />
	<class name="org.xmlcml.cml.element.CMLProperty$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<method signature="org.xmlcml.cml.element.CMLProperty$Type[] values()" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<method signature="org.xmlcml.cml.element.CMLProperty$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<field name="EXTENSIVE" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<field name="SEMINTENSIVE" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<field name="value" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<field name="INTENSIVE" class="org.xmlcml.cml.element.CMLProperty$Type" />
	<class name="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer createNewMolecule(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="void setAtomProperties(org.openscience.cdk.interfaces.IChemModel,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="java.util.List getAllChemObjects(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="int getBondCount(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="java.util.List getAllIDs(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getRelevantAtomContainer(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="java.util.List getAllAtomContainers(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="int getAtomCount(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="void removeElectronContainer(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="org.openscience.cdk.interfaces.IReaction getRelevantReaction(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="org.openscience.cdk.interfaces.IChemModel newChemModel(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<method signature="void removeAtomAndConnectedElectronContainers(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.ChemModelManipulator" />
	<class name="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAttribute(java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.SchemaManager getSchemaManager()" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAttribute(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="void init()" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="void setSchemaManager(org.xmlcml.cml.base.SchemaManager)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.AttributeFactory createAttributeFactory(java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute createSpecialAttribute(java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute createCMLAttribute(java.lang.String,org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="void makeSynonymMap()" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAttributeByGroupName(java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="java.lang.String getAttributeGroupName(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="org.xmlcml.cml.base.CMLAttribute createCMLAttribute(java.lang.String,org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.AttributeFactory" />
	<method signature="java.lang.String getValue()" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="attributeFactory" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="schemaManager" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="LOG" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="attributeGroupNameAttributeMap" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="elementSynonymMap" class="org.xmlcml.cml.base.AttributeFactory" />
	<field name="attributeGroupElementMap" class="org.xmlcml.cml.base.AttributeFactory" />
	<class name="org.openscience.cdk.io.listener.SwingGUIListener" />
	<method signature="void &lt;init&gt;(java.awt.Component,int)" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<method signature="void processIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<method signature="void frameRead(org.openscience.cdk.io.ReaderEvent)" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<method signature="void setLevel(int)" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<field name="level" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<field name="frame" class="org.openscience.cdk.io.listener.SwingGUIListener" />
	<class name="org.openscience.cdk.io.CTXReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CTXReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="java.lang.String getCommand(java.lang.String)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void close()" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void processAtomsBlock(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void processNameBlock(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void processIdentBlock(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void processBondsBlock(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="int getContentLinesCount(java.lang.String)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile()" class="org.openscience.cdk.io.CTXReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.CTXReader" />
	<method signature="boolean isCommand(java.lang.String)" class="org.openscience.cdk.io.CTXReader" />
	<field name="input" class="org.openscience.cdk.io.CTXReader" />
	<field name="file" class="org.openscience.cdk.io.CTXReader" />
	<field name="logger" class="org.openscience.cdk.io.CTXReader" />
	<class name="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void setMaxGasteigerIters(double)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="double getMaxGasteigerDamp()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="double getChiCatHydrogen()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void setStepSize(int)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void setMaxGasteigerDamp(double)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer assignGasteigerMarsiliSigmaPartialCharges(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="void setChiCatHydrogen(double)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="double getMaxGasteigerIters()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="double[] assignGasteigerSigmaMarsiliFactors(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<method signature="int getStepSize()" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<field name="STEP_SIZE" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<field name="MX_ITERATIONS" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<field name="MX_DAMP" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<field name="DEOC_HYDROGEN" class="org.openscience.cdk.charges.GasteigerMarsiliPartialCharges" />
	<class name="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 roughAlign(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void transform(org.xmlcml.euclid.Transform3,org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Angle torsion(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 align3PointVectors(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 fitTo(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealArray deviationsFromPlane(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Real3Range getRange3()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="int size()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Line3 getLine(int,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 fit3Points(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 translateRotateRetranslate(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="java.util.List getPoint3List()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Angle angle(int,int,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double rms(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void setElementAt(org.xmlcml.euclid.Vector3,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector subtract(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 getTransformOfPlane(int[],org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="int[] get3SeparatedPoints()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void multiplyByEquals(double)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void checkConformable(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3 getPoint3(int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector multiplyBy(double)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double distance(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Plane3 bestPlane()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Transform3 alignUsing3Points(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealRange getRange(org.xmlcml.euclid.Axis$Axis3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector subArray(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getDistanceMatrix()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void add(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector plus(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void plusEquals(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3 get(int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector plus(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3 getCentroid()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="int getFurthestPointFrom(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void transform(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void addElement(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void inertialAxes(org.xmlcml.euclid.RealArray,org.xmlcml.euclid.RealSquareMatrix,org.xmlcml.euclid.EuclidRuntimeException)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix inertialTensor()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3 elementAt(int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Angle angle(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealArray getXYZ(org.xmlcml.euclid.Axis$Axis3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="int getPointMakingSmallestAngle(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;init&gt;(int,double[],double[],double[])" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double getCoordinate(int,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void setElementAt(org.xmlcml.euclid.Point3,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.RealArray getXYZ()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double getSigmaDeltaSquared(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double distance(int,int)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void moveToCentroid()" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="void removeNullValues(org.xmlcml.euclid.Point3Vector,org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="double getCoordinate(int,org.xmlcml.euclid.Axis$Axis3)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Point3Vector subtract(org.xmlcml.euclid.Point3Vector)" class="org.xmlcml.euclid.Point3Vector" />
	<method signature="org.xmlcml.euclid.Angle torsion(int,int,int,int)" class="org.xmlcml.euclid.Point3Vector" />
	<field name="vector" class="org.xmlcml.euclid.Point3Vector" />
	<field name="serialVersionUID" class="org.xmlcml.euclid.Point3Vector" />
	<field name="logger" class="org.xmlcml.euclid.Point3Vector" />
	<class name="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setHydrogenCount(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IBond getClosestBond(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IControllerModel,org.openscience.jchempaint.renderer.IRenderer,org.openscience.cdk.interfaces.IChemModel,org.openscience.jchempaint.controller.IViewEventRelay,org.openscience.jchempaint.controller.undoredo.UndoRedoHandler,org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory,boolean,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void moveToWithoutUndo(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void moveToWithoutUndo(org.openscience.cdk.interfaces.IBond,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void makeAllImplicitExplicit()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(org.openscience.cdk.interfaces.IBond,int,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(int,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setCursor(int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void clearPhantoms()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void fireEvents(java.util.Collection)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeChangeModeListener(org.openscience.jchempaint.controller.IChangeModeListener)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(org.openscience.cdk.interfaces.IBond,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseWheelMovedForward(int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseClickedUp(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addPhantomBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseClickedDownRight(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void cleanup()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void select(org.openscience.jchempaint.renderer.selection.IChemObjectSelection)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void updateImplicitHydrogenCounts()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer deleteFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setValence(org.openscience.cdk.interfaces.IAtom,java.lang.Integer)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModel()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setActiveDrawModule(org.openscience.jchempaint.controller.IControllerModule)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void coordinatesChanged()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IBond addBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler getUndoRedoHandler()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void moveBy(java.util.Collection,javax.vecmath.Vector2d,javax.vecmath.Vector2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.jchempaint.controller.IControllerModel getController2DModel()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseEnter(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseClickedDown(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void structureChanged()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void makeAllExplicitImplicit()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPhantoms()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="javax.vecmath.Point2d getConnectedAtomsCenter(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseClickedDouble(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseClickedUpRight(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void generateNewCoordinates(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Stereo,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getIChemModel()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="boolean isUndefined(org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeSingleElectron(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setMassNumber(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void clearValidation()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeEmptyContainers(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,int,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void replaceAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void updateAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addChangeModeListener(org.openscience.jchempaint.controller.IChangeModeListener)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseMove(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="boolean isUp(org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void resetBondOrders()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtomInRange(java.util.Collection,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeAtomWithoutUndo(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IBond addBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void registerGeneralControllerModule(org.openscience.jchempaint.controller.IControllerModule)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeBondAndLoneAtoms(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setCharge(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseExit(int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(org.openscience.cdk.interfaces.IAtom,int,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void avoidOverlap(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setEventHandler(org.openscience.jchempaint.controller.IChemModelEventRelayHandler)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory getUndoRedoFactory()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mergeMolecules(javax.vecmath.Vector2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="double calculateAverageBondLength(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void updateAtoms(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Iterable)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setOrder(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,int,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="boolean isDown(org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IBond makeNewStereoBond(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.controller.IChemModelRelay$Direction)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void cycleBondValence(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void structurePropertiesChanged()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.jchempaint.renderer.IRenderer getRenderer()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IPseudoAtom convertToPseudoAtom(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void flip(boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void select(org.openscience.jchempaint.renderer.selection.IncrementalSelection)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void adjustBondOrders()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void selectionChanged()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void unRegisterAllControllerModule()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void moveTo(org.openscience.cdk.interfaces.IBond,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseWheelMovedBackward(int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void updateAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void zap()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addNewBond(javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void setSymbol(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IAtom convertToPseudoAtom(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.cdk.interfaces.IRing createAttachRing(org.openscience.cdk.interfaces.IAtomContainer,int,java.lang.String,boolean)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void moveTo(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void fireStructureChangedEvent()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void fireZoomEvent()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void updateView()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void addPhantomAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="org.openscience.jchempaint.controller.IControllerModule getActiveDrawModule()" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void makeBondStereo(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.controller.IChemModelRelay$Direction)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void flipDirection(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void mouseDrag(int,int,int,int)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<method signature="void removeBondWithoutUndo(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="changeModeListeners" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="phantoms" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="changeHandler" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="renderer" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="controllerModel" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="activeDrawModule" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="chemModel" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="ringPlacer" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="undoredohandler" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="matcher" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="oldMouseCursor" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="diagramGenerator" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="undoredofactory" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="eventRelay" class="org.openscience.jchempaint.controller.ControllerHub" />
	<field name="generalModules" class="org.openscience.jchempaint.controller.ControllerHub" />
	<class name="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;(double)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableCell)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="double getDouble()" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="double getInt()" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void appendValueTo(java.lang.String,org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.element.CMLTableCell" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.element.CMLTableCell" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTSmarts" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmarts" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmarts" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTSmarts" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSmarts" />
	<class name="org.openscience.jchempaint.renderer.elements.path.MoveTo" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.MoveTo" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.MoveTo" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.MoveTo" />
	<field name="point" class="org.openscience.jchempaint.renderer.elements.path.MoveTo" />
	<class name="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="java.lang.Integer getCharge()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="java.lang.Iterable isotopes()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="void setCharge(java.lang.Integer)" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="int getIsotopeCount()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<method signature="int getIsotopeCount(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.interfaces.IAdductFormula" />
	<class name="org.xmlcml.cml.element.CMLExpression" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLExpression" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLExpression)" class="org.xmlcml.cml.element.CMLExpression" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLExpression" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLExpression" />
	<class name="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void addObject(org.xmlcml.cml.element.AbstractObject)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLElements getObjectElements()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSpectator)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSpectator" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSpectator" />
	<class name="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern sortByMass(org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern sortAndNormalizedByIntensity(org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern sortByIntensity(org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<method signature="org.openscience.cdk.formula.IsotopePattern normalize(org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternManipulator" />
	<class name="org.openscience.jchempaint.renderer.selection.IncrementalSelection" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(java.awt.Color)" class="org.openscience.jchempaint.renderer.selection.IncrementalSelection" />
	<method signature="boolean isFinished()" class="org.openscience.jchempaint.renderer.selection.IncrementalSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.IncrementalSelection" />
	<class name="org.openscience.cdk.exception.UnsupportedChemObjectException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.UnsupportedChemObjectException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.UnsupportedChemObjectException" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.UnsupportedChemObjectException" />
	<class name="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setOrientation(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getOrientation()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractEigen)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOrientationAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractEigen" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_orientation" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractEigen" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractEigen" />
	<class name="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLSymmetry makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLSymmetry createFromXYZStrings(java.util.List)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLSymmetry convolute(org.xmlcml.cml.element.CMLSymmetry)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="int getSpaceGroupMultiplicity(org.xmlcml.euclid.Point3)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLSymmetry getNonTranslations()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Centering getCentering()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="int getPointGroupMultiplicity(org.xmlcml.euclid.Point3,double)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLSymmetry getContainedSymmetry(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSymmetry)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Centering getCentering(java.util.List)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="java.util.List getPureTranslations()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="boolean isSpaceGroup()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLSymmetry,double)" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="boolean isGroup()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void normalizeCrystallographically()" class="org.xmlcml.cml.element.CMLSymmetry" />
	<method signature="void &lt;init&gt;(java.lang.String[])" class="org.xmlcml.cml.element.CMLSymmetry" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSymmetry" />
	<class name="org.xmlcml.cml.element.CMLAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomType" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomType)" class="org.xmlcml.cml.element.CMLAtomType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomType" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomType" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtomType" />
	<class name="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;init&gt;(double,org.xmlcml.euclid.Angle$Units)" class="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;init&gt;(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="double getDegrees()" class="org.xmlcml.euclid.Angle" />
	<method signature="double cos()" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean lessThan(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean greaterThan(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="double getRadian()" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean greaterThanOrEquals(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="void shallowCopy(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="double sin()" class="org.xmlcml.euclid.Angle" />
	<method signature="org.xmlcml.euclid.Angle plus(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="double tan()" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean lessThanOrEquals(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="double normalise(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean isEqualTo(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="void putDegrees(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean lessThanOrEquals(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean lessThan(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean greaterThanOrEquals(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="org.xmlcml.euclid.Angle multiplyBy(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="double getAngle()" class="org.xmlcml.euclid.Angle" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Angle" />
	<method signature="org.xmlcml.euclid.Angle subtract(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Angle" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Angle" />
	<method signature="void setRange(org.xmlcml.euclid.Angle$Range)" class="org.xmlcml.euclid.Angle" />
	<method signature="double adjust(double)" class="org.xmlcml.euclid.Angle" />
	<method signature="boolean greaterThan(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Angle" />
	<field name="type" class="org.xmlcml.euclid.Angle" />
	<field name="angle" class="org.xmlcml.euclid.Angle" />
	<field name="range" class="org.xmlcml.euclid.Angle" />
	<field name="DEGREES_IN_RADIAN" class="org.xmlcml.euclid.Angle" />
	<class name="org.xmlcml.cml.element.CMLCml" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLCml" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLCml" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCml" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLCml" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLCml)" class="org.xmlcml.cml.element.CMLCml" />
	<field name="NS" class="org.xmlcml.cml.element.CMLCml" />
	<class name="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.jchempaint.controller.undoredo.UndoRedoHandler getUndoRedoHandler()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.jchempaint.controller.IControllerModel getController2DModel()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IBond getClosestBond(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void addFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.jchempaint.renderer.IRenderer getRenderer()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void resetBondOrders()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void makeAllImplicitExplicit()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtomInRange(java.util.Collection,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void flip(boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void makeAllExplicitImplicit()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void select(org.openscience.jchempaint.renderer.selection.IncrementalSelection)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPhantoms()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void adjustBondOrders()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(org.openscience.cdk.interfaces.IBond,int,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(int,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void setCursor(int)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void clearPhantoms()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IBond addBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void removeBondAndLoneAtoms(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtomWithoutUndo(java.lang.String,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond$Stereo,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(org.openscience.cdk.interfaces.IBond,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addRing(org.openscience.cdk.interfaces.IAtom,int,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getIChemModel()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void setChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void zap()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void addPhantomBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom convertToPseudoAtom(org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void setEventHandler(org.openscience.jchempaint.controller.IChemModelEventRelayHandler)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IRing addPhenyl(javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory getUndoRedoFactory()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void cleanup()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void select(org.openscience.jchempaint.renderer.selection.IChemObjectSelection)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void fireStructureChangedEvent()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void fireZoomEvent()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void updateView()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void addPhantomAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void updateImplicitHydrogenCounts()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer deleteFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void setValence(org.openscience.cdk.interfaces.IAtom,java.lang.Integer)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void clearValidation()" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="void setActiveDrawModule(org.openscience.jchempaint.controller.IControllerModule)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom addAtom(java.lang.String,int,javax.vecmath.Point2d,boolean)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.IChemModelRelay" />
	<class name="org.openscience.cdk.graph.matrix.TopologicalMatrix" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.matrix.TopologicalMatrix" />
	<method signature="int[][] getMatrix(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.matrix.TopologicalMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.matrix.TopologicalMatrix" />
	<class name="org.xmlcml.euclid.Axis$Axis2" />
	<method signature="org.xmlcml.euclid.Axis$Axis2[] values()" class="org.xmlcml.euclid.Axis$Axis2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Axis$Axis2" />
	<method signature="org.xmlcml.euclid.Axis$Axis2 valueOf(java.lang.String)" class="org.xmlcml.euclid.Axis$Axis2" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,int)" class="org.xmlcml.euclid.Axis$Axis2" />
	<field name="value" class="org.xmlcml.euclid.Axis$Axis2" />
	<field name="axis" class="org.xmlcml.euclid.Axis$Axis2" />
	<field name="$VALUES" class="org.xmlcml.euclid.Axis$Axis2" />
	<field name="Y" class="org.xmlcml.euclid.Axis$Axis2" />
	<field name="X" class="org.xmlcml.euclid.Axis$Axis2" />
	<class name="org.openscience.cdk.interfaces.IMapping" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getChemObject(int)" class="org.openscience.cdk.interfaces.IMapping" />
	<method signature="java.lang.Iterable relatedChemObjects()" class="org.openscience.cdk.interfaces.IMapping" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMapping" />
	<class name="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMolecule(int)" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="java.lang.Iterable molecules()" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="void addMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="void setMolecules(org.openscience.cdk.interfaces.IMolecule[])" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<method signature="int getMoleculeCount()" class="org.openscience.cdk.interfaces.IMoleculeSet" />
	<class name="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void addStructure(org.openscience.cdk.interfaces.IPDBStructure)" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="java.util.Collection getStructures()" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="java.util.Collection getMonomerNamesInSequentialOrder()" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IPDBAtom)" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IPDBAtom,org.openscience.cdk.interfaces.IMonomer,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IPDBAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<field name="secondaryStructures" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<field name="sequentialListOfMonomers" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<field name="serialVersionUID" class="org.openscience.cdk.protein.data.PDBPolymer" />
	<class name="org.xmlcml.euclid.Int2Array" />
	<method signature="int hashCode()" class="org.xmlcml.euclid.Int2Array" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntArray,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.Int2Array" />
	<method signature="int size()" class="org.xmlcml.euclid.Int2Array" />
	<method signature="boolean equals(java.lang.Object)" class="org.xmlcml.euclid.Int2Array" />
	<method signature="org.xmlcml.euclid.Int2 elementAt(int)" class="org.xmlcml.euclid.Int2Array" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Int2Array" />
	<method signature="void expand()" class="org.xmlcml.euclid.Int2Array" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Int2Array" />
	<method signature="org.xmlcml.euclid.Int2Range getRange2()" class="org.xmlcml.euclid.Int2Array" />
	<field name="xy" class="org.xmlcml.euclid.Int2Array" />
	<field name="yarr" class="org.xmlcml.euclid.Int2Array" />
	<field name="xarr" class="org.xmlcml.euclid.Int2Array" />
	<field name="expanded" class="org.xmlcml.euclid.Int2Array" />
	<field name="nelem" class="org.xmlcml.euclid.Int2Array" />
	<class name="org.xmlcml.cml.element.AbstractName" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractName" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractName" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractName" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractName" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractName" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractName" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractName" />
	<class name="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<method signature="boolean ringIsAromatic(org.openscience.cdk.interfaces.IRing)" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateRingElements(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IRing,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateRingRingElement(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IRing,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<field name="painted_rings" class="org.openscience.jchempaint.renderer.generators.RingGenerator" />
	<class name="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="java.lang.String[] getParameterNames()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="org.openscience.cdk.qsar.result.IDescriptorResult getValue()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.qsar.DescriptorSpecification,java.lang.String[],java.lang.Object[],org.openscience.cdk.qsar.result.IDescriptorResult,java.lang.String[],java.lang.Exception)" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="java.lang.Exception getException()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.qsar.DescriptorSpecification,java.lang.String[],java.lang.Object[],org.openscience.cdk.qsar.result.IDescriptorResult,java.lang.String[])" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="org.openscience.cdk.qsar.DescriptorSpecification getSpecification()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<method signature="java.lang.String[] getNames()" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="value" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="parameterNames" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="exception" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="descriptorNames" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="parameterSettings" class="org.openscience.cdk.qsar.DescriptorValue" />
	<field name="specification" class="org.openscience.cdk.qsar.DescriptorValue" />
	<class name="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<method signature="org.openscience.cdk.formula.rules.MMElementRule$Database[] values()" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<method signature="org.openscience.cdk.formula.rules.MMElementRule$Database valueOf(java.lang.String)" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<field name="$VALUES" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<field name="WILEY" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<field name="DNP" class="org.openscience.cdk.formula.rules.MMElementRule$Database" />
	<class name="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void addSpectator(org.xmlcml.cml.element.AbstractSpectator)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLElements getSpectatorElements()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSpectatorList)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSpectatorList" />
	<class name="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="java.util.List getParameterDescendants()" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="java.util.List getParameterDescendantsByName(java.lang.String)" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="java.util.List getParameterDescendantsByDictRef(java.util.List,java.lang.String)" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="java.util.List getParameterDescendants(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLParameterList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLParameterList)" class="org.xmlcml.cml.element.CMLParameterList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLParameterList" />
	<class name="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="double getOverlapScore(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector,java.util.Vector)" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="double getAtomOverlapScore(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector)" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="boolean areIntersected(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="double getBondOverlapScore(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector)" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="double displace(org.openscience.cdk.interfaces.IAtomContainer,java.util.Vector,java.util.Vector)" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.OverlapResolver" />
	<method signature="double resolveOverlap(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.OverlapResolver" />
	<field name="bondLength" class="org.openscience.cdk.layout.OverlapResolver" />
	<field name="maxSteps" class="org.openscience.cdk.layout.OverlapResolver" />
	<field name="logger" class="org.openscience.cdk.layout.OverlapResolver" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression" />
	<class name="org.openscience.cdk.ChemObject" />
	<method signature="void removeListener(org.openscience.cdk.interfaces.IChemObjectListener)" class="org.openscience.cdk.ChemObject" />
	<method signature="java.util.Map getProperties()" class="org.openscience.cdk.ChemObject" />
	<method signature="void addListener(org.openscience.cdk.interfaces.IChemObjectListener)" class="org.openscience.cdk.ChemObject" />
	<method signature="boolean getFlag(int)" class="org.openscience.cdk.ChemObject" />
	<method signature="void removeProperty(java.lang.Object)" class="org.openscience.cdk.ChemObject" />
	<method signature="boolean getNotification()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setNotification(boolean)" class="org.openscience.cdk.ChemObject" />
	<method signature="void notifyChanged()" class="org.openscience.cdk.ChemObject" />
	<method signature="boolean[] getFlags()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setFlags(boolean[])" class="org.openscience.cdk.ChemObject" />
	<method signature="java.lang.String getID()" class="org.openscience.cdk.ChemObject" />
	<method signature="java.lang.Object getProperty(java.lang.Object)" class="org.openscience.cdk.ChemObject" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.ChemObject" />
	<method signature="java.util.List lazyChemObjectListeners()" class="org.openscience.cdk.ChemObject" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.ChemObject" />
	<method signature="java.lang.Object shallowCopy()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setID(java.lang.String)" class="org.openscience.cdk.ChemObject" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemObject" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setProperties(java.util.Map)" class="org.openscience.cdk.ChemObject" />
	<method signature="void notifyChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.ChemObject" />
	<method signature="java.util.Map lazyProperties()" class="org.openscience.cdk.ChemObject" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setFlag(int,boolean)" class="org.openscience.cdk.ChemObject" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ChemObject" />
	<method signature="int getListenerCount()" class="org.openscience.cdk.ChemObject" />
	<method signature="void setProperty(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.ChemObject" />
	<field name="chemObjectListeners" class="org.openscience.cdk.ChemObject" />
	<field name="flags" class="org.openscience.cdk.ChemObject" />
	<field name="doNotification" class="org.openscience.cdk.ChemObject" />
	<field name="identifier" class="org.openscience.cdk.ChemObject" />
	<field name="serialVersionUID" class="org.openscience.cdk.ChemObject" />
	<field name="properties" class="org.openscience.cdk.ChemObject" />
	<class name="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBondType)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addBond(org.xmlcml.cml.element.AbstractBond)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractBondType" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractBondType" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBondType" />
	<class name="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void close()" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.ZMatrixReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.ZMatrixReader" />
	<field name="input" class="org.openscience.cdk.io.ZMatrixReader" />
	<class name="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getIntersectionWith(org.xmlcml.cml.element.CMLLine3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="boolean isParallelTo(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.euclid.Plane3 getEuclidPlane3()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void setArrayNoCheck(double[])" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLLine3 getIntersectionWith(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="boolean containsPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getClosestPointTo(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLine3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="double getDistance()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3,double)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="double getAngleMadeWith(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void negative()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="boolean isAntiparallelTo(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getIntersectionWith(org.xmlcml.cml.element.CMLPlane3,org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(double[],double)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPlane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getVector()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="double[] getArray()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="org.xmlcml.cml.element.CMLPlane3 subtract()" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void setArray(double[])" class="org.xmlcml.cml.element.CMLPlane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Plane3)" class="org.xmlcml.cml.element.CMLPlane3" />
	<field name="logger" class="org.xmlcml.cml.element.CMLPlane3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPlane3" />
	<class name="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addAtomParity(org.openscience.cdk.interfaces.IAtomParity)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer removeElectronContainer(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getElectronContainerCount()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getLastAtom()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer getElectronContainer(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getFirstAtom()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.util.List getConnectedLonePairsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.lang.Iterable bonds()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getConnectedBondsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAllElements()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeLonePair(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.lang.Iterable singleElectrons()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.lang.Iterable electronContainers()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getAtomCount()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.lang.Iterable lonePairs()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ILonePair getLonePair(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getBondNumber(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void setBonds(org.openscience.cdk.interfaces.IBond[])" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getSingleElectronNumber(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAllBonds()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeSingleElectron(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond removeBond(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getConnectedBondsCount(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAtom(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron removeSingleElectron(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.util.List getConnectedAtomsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getConnectedAtomsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMinimumBondOrder(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ILonePair removeLonePair(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getConnectedLonePairsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addSingleElectron(org.openscience.cdk.interfaces.ISingleElectron)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAllElectronContainers()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getLonePairCount()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.util.List getConnectedBondsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getLonePairNumber(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getBondNumber(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getSingleElectronCount()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomParity getAtomParity(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond getBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.util.List getConnectedSingleElectronsList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.ISingleElectron getSingleElectron(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addBond(int,int,org.openscience.cdk.interfaces.IBond$Order,org.openscience.cdk.interfaces.IBond$Stereo)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAtomAndConnectedElectronContainers(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addLonePair(org.openscience.cdk.interfaces.ILonePair)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getAtomNumber(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void setAtom(int,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond getBond(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getConnectedSingleElectronsCount(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addSingleElectron(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addBond(int,int,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void removeAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.lang.Iterable atoms()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void remove(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond removeBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="java.util.List getConnectedElectronContainersList(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaximumBondOrder(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addLonePair(int)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="double getBondOrderSum(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="int getBondCount()" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAtomContainer" />
	<class name="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="void addTuple(org.openscience.cdk.graph.rebond.Bspt$Tuple)" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="void dump()" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="java.util.Enumeration enumNear(org.openscience.cdk.graph.rebond.Bspt$Tuple,double)" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere enumSphere(org.openscience.cdk.graph.rebond.Bspt$Tuple,double)" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="java.util.Enumeration enumeration()" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.graph.rebond.Bspt" />
	<method signature="org.openscience.cdk.graph.rebond.Bspt$EnumerateSphere enumHemiSphere(org.openscience.cdk.graph.rebond.Bspt$Tuple,double)" class="org.openscience.cdk.graph.rebond.Bspt" />
	<field name="leafCount" class="org.openscience.cdk.graph.rebond.Bspt" />
	<field name="stackDepth" class="org.openscience.cdk.graph.rebond.Bspt" />
	<field name="dimMax" class="org.openscience.cdk.graph.rebond.Bspt" />
	<field name="eleRoot" class="org.openscience.cdk.graph.rebond.Bspt" />
	<class name="org.openscience.jchempaint.controller.undoredo.IUndoListener" />
	<method signature="void doUndo(org.openscience.jchempaint.controller.undoredo.IUndoRedoable)" class="org.openscience.jchempaint.controller.undoredo.IUndoListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.undoredo.IUndoListener" />
	<class name="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void setResidues(java.util.List)" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="java.util.List getResidues()" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void setChargeGroups(java.util.List)" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="java.util.List getChargeGroups()" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void addChargeGroup(org.openscience.cdk.libio.md.ChargeGroup)" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void addResidue(org.openscience.cdk.libio.md.Residue)" class="org.openscience.cdk.libio.md.MDMolecule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.md.MDMolecule" />
	<field name="residues" class="org.openscience.cdk.libio.md.MDMolecule" />
	<field name="serialVersionUID" class="org.openscience.cdk.libio.md.MDMolecule" />
	<field name="chargeGroups" class="org.openscience.cdk.libio.md.MDMolecule" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAromatic" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAromatic" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAromatic" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAromatic" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAromatic" />
	<class name="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCMLValueAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setTautomeric(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setVersion(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTautomericAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractIdentifier)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getVersionAttribute()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getCMLValue()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getTautomeric()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<method signature="java.lang.String getVersion()" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_version" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_tautomeric" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_value" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractIdentifier" />
	<class name="org.openscience.cdk.validate.ValidationReport" />
	<method signature="java.util.List getWarnings()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void addCDKError(org.openscience.cdk.validate.ValidationTest)" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="java.util.List getCDKErrors()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="int getWarningCount()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void addWarning(org.openscience.cdk.validate.ValidationTest)" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="int getErrorCount()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="int getOKCount()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void addError(org.openscience.cdk.validate.ValidationTest)" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void addReport(org.openscience.cdk.validate.ValidationReport)" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="java.util.List getOKs()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="void addOK(org.openscience.cdk.validate.ValidationTest)" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="int getCount()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="int getCDKErrorCount()" class="org.openscience.cdk.validate.ValidationReport" />
	<method signature="java.util.List getErrors()" class="org.openscience.cdk.validate.ValidationReport" />
	<field name="errors" class="org.openscience.cdk.validate.ValidationReport" />
	<field name="warnings" class="org.openscience.cdk.validate.ValidationReport" />
	<field name="cdkErrors" class="org.openscience.cdk.validate.ValidationReport" />
	<field name="oks" class="org.openscience.cdk.validate.ValidationReport" />
	<class name="org._3pq.jgrapht.ListenableGraph" />
	<method signature="void removeGraphListener(org._3pq.jgrapht.event.GraphListener)" class="org._3pq.jgrapht.ListenableGraph" />
	<method signature="void addGraphListener(org._3pq.jgrapht.event.GraphListener)" class="org._3pq.jgrapht.ListenableGraph" />
	<method signature="void removeVertexSetListener(org._3pq.jgrapht.event.VertexSetListener)" class="org._3pq.jgrapht.ListenableGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.ListenableGraph" />
	<method signature="void addVertexSetListener(org._3pq.jgrapht.event.VertexSetListener)" class="org._3pq.jgrapht.ListenableGraph" />
	<class name="org.openscience.cdk.io.WriterFactory" />
	<method signature="int formatCount()" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="org.openscience.cdk.io.IChemObjectWriter createWriter(org.openscience.cdk.io.formats.IChemFormat)" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="org.openscience.cdk.io.formats.IChemFormat[] findChemFormats(int)" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="void registerWriter(java.lang.Class)" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.WriterFactory" />
	<method signature="void loadFormats()" class="org.openscience.cdk.io.WriterFactory" />
	<field name="registeredReaders" class="org.openscience.cdk.io.WriterFactory" />
	<field name="IO_FORMATS_LIST" class="org.openscience.cdk.io.WriterFactory" />
	<field name="formats" class="org.openscience.cdk.io.WriterFactory" />
	<field name="logger" class="org.openscience.cdk.io.WriterFactory" />
	<class name="org.xmlcml.cml.element.CMLLength" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.util.List getList(org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.util.Map getIndexedLengths(java.util.List)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="double getCalculatedLength(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void addAtomIds(java.util.List,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.util.List getAtomIds()" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void outputHTML(java.io.Writer,java.util.List,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLength)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="void setAtomRefs2(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLLength" />
	<method signature="java.lang.String atomHash()" class="org.xmlcml.cml.element.CMLLength" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLength" />
	<class name="org.xmlcml.cml.element.CMLLabel" />
	<method signature="java.lang.String getLabelValue(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.element.CMLLabel$Position)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLabel)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="void removeLabel(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.element.CMLLabel$Position)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="org.xmlcml.cml.element.CMLLabel getLabel(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.element.CMLLabel$Position)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="void setLabel(org.xmlcml.cml.base.CMLElement,org.xmlcml.cml.element.CMLLabel$Position,java.lang.String)" class="org.xmlcml.cml.element.CMLLabel" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLLabel" />
	<field name="NS" class="org.xmlcml.cml.element.CMLLabel" />
	<class name="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractObservation)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractObservation" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractObservation" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractObservation" />
	<class name="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.TinkerMM2Format" />
	<class name="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void removeListener(org.openscience.cdk.interfaces.IChemObjectListener)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void addListener(org.openscience.cdk.interfaces.IChemObjectListener)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="java.util.Map getProperties()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="boolean getFlag(int)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void removeProperty(java.lang.Object)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="boolean getNotification()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setID(java.lang.String)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setProperties(java.util.Map)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setNotification(boolean)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void notifyChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void notifyChanged()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setFlag(int,boolean)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="boolean[] getFlags()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="int getListenerCount()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setFlags(boolean[])" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="java.lang.String getID()" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="void setProperty(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.interfaces.IChemObject" />
	<method signature="java.lang.Object getProperty(java.lang.Object)" class="org.openscience.cdk.interfaces.IChemObject" />
	<class name="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="java.lang.String getResSeq()" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="java.lang.String getChainID()" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="java.lang.String getICode()" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="void setResSeq(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="void setICode(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<method signature="void setChainID(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBMonomer" />
	<class name="org.xmlcml.euclid.IntMatrix" />
	<method signature="void shallowCopy(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.Int2Array extractColumns(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="java.text.DecimalFormat getFormat()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int indexOfLargestElementInColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceColumnData(int,int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(int[][])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int largestElementInRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void deleteRows(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int getRows()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntArray extractColumnData(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int largestElement()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix subtract(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntArray extractRowData(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix getTranspose()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="boolean checkNonEmptyMatrix()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix reorderColumnsBy(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void deleteColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkConformable(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int smallestElementInRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void multiplyBy(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkColumns(int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void deleteColumns(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceColumnData(int,org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void insertRowData(int,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.Int2 indexOfSmallestElement()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void insertRowData(int,org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix reorderRowsBy(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.Int2 indexOfLargestElement()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int smallestElementInColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int elementAt(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void insertRows(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void makeSpaceForNewColumns(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void appendRowData(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix multiply(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int indexOfLargestElementInRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix extractSubMatrixData(int,int,int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void writeXML(java.io.Writer)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void insertColumnData(int,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="boolean isSquare()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void copyRowData(int[][],int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void translateByColumn(int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix getIntMatrix()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void appendRowData(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix plus(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceSubMatrixData(int,int,org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void setElementAt(int,int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void setAllElements(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntArray multiply(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int indexOfSmallestElementInRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int smallestElement()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceRowData(int,int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int largestElementInColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(int,int,int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int[] getMatrixAsArray()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void insertColumnData(int,org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void copyColumns(int[][],int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void clearMatrix()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void check(int,int,int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void deleteRow(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.Int2Array extractRows(int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void appendColumnData(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void multiplyEquals(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkRows(int[])" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="org.xmlcml.euclid.IntMatrix elementsInRange(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkConformable2(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int getCols()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkRows(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void negative()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntMatrix,int,int,int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkRows(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void columnwiseDivide(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int elementAt(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;(int,int,int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="boolean isOrthogonal()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceColumnData(int,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int indexOfSmallestElementInColumn(int)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void appendColumnData(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceRowData(int,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void replaceRowData(int,org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void checkColumns(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="int[][] getMatrix()" class="org.xmlcml.euclid.IntMatrix" />
	<method signature="void setFormat(java.text.DecimalFormat)" class="org.xmlcml.euclid.IntMatrix" />
	<field name="flmat" class="org.xmlcml.euclid.IntMatrix" />
	<field name="cols" class="org.xmlcml.euclid.IntMatrix" />
	<field name="rows" class="org.xmlcml.euclid.IntMatrix" />
	<field name="logger" class="org.xmlcml.euclid.IntMatrix" />
	<field name="format" class="org.xmlcml.euclid.IntMatrix" />
	<class name="org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator" />
	<method signature="org._3pq.jgrapht.Edge getSpanningTreeEdge(java.lang.Object)" class="org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.lang.Object)" class="org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator" />
	<method signature="void encounterVertex(java.lang.Object,org._3pq.jgrapht.Edge)" class="org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.BFSShortestPath$MyBreadthFirstIterator" />
	<class name="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="void remove()" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ReactionSet,org.openscience.cdk.ReactionSet$1)" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="org.openscience.cdk.interfaces.IReaction next()" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ReactionSet)" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<field name="this$0" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<field name="pointer" class="org.openscience.cdk.ReactionSet$ReactionIterator" />
	<class name="org.openscience.cdk.io.ReaderEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object)" class="org.openscience.cdk.io.ReaderEvent" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ReaderEvent" />
	<field name="serialVersionUID" class="org.openscience.cdk.io.ReaderEvent" />
	<class name="org._3pq.jgrapht.graph.UndirectedSubgraph" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph,java.util.Set,java.util.Set)" class="org._3pq.jgrapht.graph.UndirectedSubgraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.UndirectedSubgraph" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.graph.UndirectedSubgraph" />
	<class name="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="java.util.Collection essentialCycles()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="java.util.Map relevantCycles()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="org.openscience.cdk.ringsearch.cyclebasis.SimpleCycleBasis simpleBasis()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.UndirectedGraph)" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="java.util.List equivalenceClasses()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="java.util.Collection cycles()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<method signature="int[] weightVector()" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<field name="subgraphBases" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<field name="multiEdgeList" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<field name="baseGraph" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<field name="cachedCycleBasis" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<field name="mulitEdgeCycles" class="org.openscience.cdk.ringsearch.cyclebasis.CycleBasis" />
	<class name="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLattice)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setSpaceType(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getSpaceType()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpaceTypeAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void addSymmetry(org.xmlcml.cml.element.AbstractSymmetry)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLatticeTypeAttribute()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLElements getLatticeVectorElements()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void addLatticeVector(org.xmlcml.cml.element.AbstractLatticeVector)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="org.xmlcml.cml.base.CMLElements getSymmetryElements()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="void setLatticeType(java.lang.String)" class="org.xmlcml.cml.element.AbstractLattice" />
	<method signature="java.lang.String getLatticeType()" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_latticetype" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_spacetype" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLattice" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLattice" />
	<class name="org.openscience.jchempaint.action.HelpAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.HelpAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.HelpAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.HelpAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.HelpAction" />
	<class name="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MOPAC2002Format" />
	<class name="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemASNFormat" />
	<class name="javax.vecmath.Vector2d" />
	<method signature="double length()" class="javax.vecmath.Vector2d" />
	<method signature="void normalize()" class="javax.vecmath.Vector2d" />
	<method signature="double lengthSquared()" class="javax.vecmath.Vector2d" />
	<method signature="void normalize(javax.vecmath.Vector2d)" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Vector2d)" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;clinit&gt;()" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2d)" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(double[])" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;()" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(double,double)" class="javax.vecmath.Vector2d" />
	<method signature="double dot(javax.vecmath.Vector2d)" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Vector2f)" class="javax.vecmath.Vector2d" />
	<method signature="double angle(javax.vecmath.Vector2d)" class="javax.vecmath.Vector2d" />
	<method signature="void &lt;init&gt;(javax.vecmath.Tuple2f)" class="javax.vecmath.Vector2d" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<field name="hybridization" class="org.openscience.cdk.isomorphism.matchers.smarts.HybridizationNumberAtom" />
	<class name="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void &lt;init&gt;(java.lang.String,boolean)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setPocketSize(int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void firePSPEvent(java.util.List)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double getLatticeConstant()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="java.lang.String getVanDerWaalsFile()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setLinkageRadius(double)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void debuggCheckPSPEvent()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setProtein(org.openscience.cdk.interfaces.IBioPolymer)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setAtomCheckRadius(double)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="java.util.List clusterPSPPocket(javax.vecmath.Point3d,java.util.List,int[])" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void proteinGridToPmesh(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double getRAtom()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IBioPolymer,double[][][])" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setRSolvent(double)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void axisScanY(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void &lt;init&gt;(java.lang.String,double,boolean)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setSolvantValue(int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void createCubicGrid()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void diagonalAxisScanXZY(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="org.openscience.cdk.interfaces.IBioPolymer getProtein()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void axisScanX(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void assignProteinToGrid()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int getProteinInterior()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setMinPSCluster(int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int getPocketSize()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setRAtom(double)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double[][][] getGrid()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void sitefinder()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setMinPSPocket(int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int getSolvantValue()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setProteinInterior(int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setVanDerWaalsFile(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setGrid(double[][][])" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void diagonalAxisScanYZX(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void findPockets()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void writePocketsToPMesh(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double getLinkageRadius()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void diagonalAxisScanXYZ(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void axisScanZ(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void gridToPmesh(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void setLatticeConstant(double)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void pspGridToPmesh(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double[] findGridBoundaries()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="double getRSolvent()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void readBioPolymer(java.lang.String)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void diagonalAxisScanYXZ(int,int,int)" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int[] checkBoundaries(int[],int[])" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int getMinPSCluster()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void assignVdWRadiiToProtein()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void &lt;init&gt;(java.lang.String,double[][][])" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="void sortPockets()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="java.util.List getPockets()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<method signature="int getMinPSPocket()" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="pockets" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="gridGenerator" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="minPSPocket" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="solvantValue" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="atomCheckRadius" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="pocketSize" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="grid" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="rSolvent" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="vanDerWaalsFile" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="visited" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="protein" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="proteinInterior" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="rAtom" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="linkageRadius" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="minPSCluster" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="logger" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<field name="latticeConstant" class="org.openscience.cdk.protein.ProteinPocketFinder" />
	<class name="org.xmlcml.cml.element.CMLBondType" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondType" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBondType)" class="org.xmlcml.cml.element.CMLBondType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBondType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondType" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBondType" />
	<class name="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Object)" class="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IAtom,java.lang.Object)" class="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<method signature="void customize(org.openscience.cdk.interfaces.IBond,java.lang.Object)" class="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.cml.MDMoleculeCustomizer" />
	<class name="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addElectron(org.xmlcml.cml.element.AbstractElectron)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addFormula(org.xmlcml.cml.element.AbstractFormula)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getAmountElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addSubstanceList(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getFormulaElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getIdentifierElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addAmount(org.xmlcml.cml.element.AbstractAmount)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addIdentifier(org.xmlcml.cml.element.AbstractIdentifier)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactant)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void addSubstance(org.xmlcml.cml.element.AbstractSubstance)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getElectronElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceListElements()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractReactant" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactant" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactant" />
	<class name="org.openscience.cdk.exception.NoSuchAtomException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.NoSuchAtomException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.NoSuchAtomException" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.NoSuchAtomException" />
	<class name="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="org.xmlcml.cml.element.CMLCellParameter getCellParameter(org.xmlcml.cml.base.CMLElements,org.xmlcml.cml.element.CMLCellParameter$Type)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="void &lt;init&gt;(java.util.List,org.xmlcml.cml.element.CMLCellParameter$Type)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="java.util.List createCMLScalars(java.util.List)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLScalar[],org.xmlcml.cml.element.CMLCellParameter$Type)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLCellParameter)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="java.util.List createCMLScalars(org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="org.xmlcml.cml.element.CMLCellParameter getCellParameter(java.util.List,org.xmlcml.cml.element.CMLCellParameter$Type)" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCellParameter" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLCellParameter" />
	<field name="dictRef" class="org.xmlcml.cml.element.CMLCellParameter" />
	<field name="NS" class="org.xmlcml.cml.element.CMLCellParameter" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="void setSymbol(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="java.lang.String getSymbol()" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<field name="symbol" class="org.openscience.cdk.smiles.smarts.parser.ASTElement" />
	<class name="org.openscience.jchempaint.renderer.generators.HighlightBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.HighlightBondGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.HighlightBondGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.HighlightBondGenerator" />
	<method signature="boolean shouldHighlight(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.HighlightBondGenerator" />
	<class name="org.xmlcml.cml.element.CMLEntry" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="void checkAndSetTerm(java.lang.String)" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLEntry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLEntry)" class="org.xmlcml.cml.element.CMLEntry" />
	<field name="NS" class="org.xmlcml.cml.element.CMLEntry" />
	<class name="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeRing(org.openscience.cdk.interfaces.IRing,javax.vecmath.Point2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeBridgedRing(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="javax.vecmath.Vector2d getRingCenterOfFirstRing(org.openscience.cdk.interfaces.IRing,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void checkAndMarkPlaced(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="org.openscience.cdk.layout.AtomPlacer getAtomPlacer()" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMolecule()" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeConnectedRings(org.openscience.cdk.interfaces.IRingSet,org.openscience.cdk.interfaces.IRing,int,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeRing(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer placeRingSubstituents(org.openscience.cdk.interfaces.IRingSet,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void setAtomPlacer(org.openscience.cdk.layout.AtomPlacer)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeFusedRing(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeRing(org.openscience.cdk.interfaces.IRing,javax.vecmath.Point2d,double,java.util.Map)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="boolean allPlaced(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void setMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void partitionNonRingPartners(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="double getNativeRingRadius(org.openscience.cdk.interfaces.IRing,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="void placeSpiroRing(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,javax.vecmath.Vector2d,double)" class="org.openscience.cdk.layout.RingPlacer" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getBridgeAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="atomPlacer" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="debug" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="defaultAngles" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="BRIDGED" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="SPIRO" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="FUSED" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="logger" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="jcpAngles" class="org.openscience.cdk.layout.RingPlacer" />
	<field name="molecule" class="org.openscience.cdk.layout.RingPlacer" />
	<class name="org.openscience.jchempaint.JChemPaintPanel$1" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.JChemPaintPanel$1" />
	<method signature="void mouseExited(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.JChemPaintPanel$1" />
	<field name="this$0" class="org.openscience.jchempaint.JChemPaintPanel$1" />
	<class name="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="java.util.List getHeavyAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="double getTotalCharge(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IBond[] getBondArray(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void setAtomProperties(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Object,java.lang.Object)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="double getBondOrderSum(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtomById(org.openscience.cdk.interfaces.IAtomContainer,java.lang.String)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="java.util.List getAllIDs(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="double getTotalNaturalAbundance(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer[] getElectronContainerArray(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void convertImplicitToExplicitHydrogens(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void percieveAtomTypesAndConfigureUnsetProperties(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeHydrogens(org.openscience.cdk.interfaces.IAtomContainer,java.util.List)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IBond[] getBondArray(java.util.List)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int getTotalPositiveFormalCharge(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getAtomArray(java.util.List)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int getTotalFormalCharge(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="double getTotalExactMass(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void unregisterElectronContainerListeners(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void percieveAtomTypesAndConfigureAtoms(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int getSingleBondEquivalentSum(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeHydrogensPreserveMultiplyBonded(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int getTotalHydrogenCount(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="double getNaturalExactMass(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int countHydrogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int getTotalNegativeFormalCharge(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getAtomArray(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="boolean replaceAtomByAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="int countExplicitHydrogens(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void clearAtomConfigurations(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="void unregisterAtomListeners(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeHydrogens(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getIntersection(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer createAllCarbonAllSingleNonAromaticBondAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IElectronContainer[] getElectronContainerArray(java.util.List)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaximumBondOrder(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<field name="$assertionsDisabled" class="org.openscience.cdk.tools.manipulator.AtomContainerManipulator" />
	<class name="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="void setMonoIsotope(org.openscience.cdk.formula.IsotopeContainer)" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="org.openscience.cdk.formula.IsotopeContainer getIsotope(int)" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="void addIsotope(org.openscience.cdk.formula.IsotopeContainer)" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="void setCharge(double)" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="int getNumberOfIsotopes()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="java.util.List getIsotopes()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="double getCharge()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.IsotopePattern" />
	<method signature="org.openscience.cdk.formula.IsotopeContainer getMonoIsotope()" class="org.openscience.cdk.formula.IsotopePattern" />
	<field name="chargI" class="org.openscience.cdk.formula.IsotopePattern" />
	<field name="isotopeCList" class="org.openscience.cdk.formula.IsotopePattern" />
	<field name="monoIsotopePosition" class="org.openscience.cdk.formula.IsotopePattern" />
	<class name="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian95Format" />
	<class name="org.xmlcml.cml.interfacex.HasUnits" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.HasUnits" />
	<method signature="void setUnits(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.interfacex.HasUnits" />
	<class name="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.Sprout getSprout(org.xmlcml.cml.element.CMLTorsion,java.lang.String)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addToMolecule(org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLZMatrix)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.CMLAngle getNewAngle(org.xmlcml.cml.element.CMLAngle)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addFullTorsion(org.xmlcml.cml.element.FullTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void setCoordinates(org.xmlcml.cml.element.CMLAngle,org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addToMolecule(org.xmlcml.cml.element.CMLLength)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List removeTorsion(java.util.Map,org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List getFreeAtomList(org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void makeZMatrix(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addAtom(java.lang.String)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addTorsion(java.util.Map,java.lang.String,org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void debugPrint()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.CMLTorsion getNewTorsion(org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List makeAngleList(org.xmlcml.cml.base.CMLElement,int)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List removeTorsion(java.util.Map,java.lang.String,org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addFirstFullTorsion()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.CMLLength getNewLength(org.xmlcml.cml.element.CMLLength)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.Sprout getNextSprout()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addCartesiansTo(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List makeTorsionList(org.xmlcml.cml.base.CMLElement,int)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addToMolecule(org.xmlcml.cml.element.CMLAngle)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="org.xmlcml.cml.element.FullTorsion getFullTorsion(org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="java.util.List makeLengthList(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void addSprout(org.xmlcml.cml.element.Sprout)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void setXYZ3(org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLAngle,org.xmlcml.cml.element.CMLTorsion,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLZMatrix" />
	<method signature="void makeTorsionByAtomMap()" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="currentAtomSet" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="lengthByAtomHashMap" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="deadAngleList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="deadAtomSet" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="deadLengthList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="lengthList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="angleByAtomHashMap" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="deadTorsionList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="torsionList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="finalAtomSet" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="NS" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="torsionByAtomMap" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="currentTorsionSet" class="org.xmlcml.cml.element.CMLZMatrix" />
	<field name="angleList" class="org.xmlcml.cml.element.CMLZMatrix" />
	<class name="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void addSpectrum(org.xmlcml.cml.element.AbstractSpectrum)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSpectrumList)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLElements getSpectrumElements()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void addSpectrumList(org.xmlcml.cml.element.AbstractSpectrumList)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getMoleculeRef()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setMoleculeRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLElements getSpectrumListElements()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLElements getListElements()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMoleculeRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void addList(org.xmlcml.cml.element.AbstractList)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_moleculeref" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSpectrumList" />
	<class name="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="double getMultiplierToData()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setConstantToData(double)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setMultiplierToData(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractYaxis)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="double getConstantToData()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMultiplierToDataAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstantToDataAttribute()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setConstantToData(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<method signature="void setMultiplierToData(double)" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_constanttodata" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_multipliertodata" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractYaxis" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractYaxis" />
	<class name="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="org.openscience.cdk.interfaces.IAtom getSwitchingAtom()" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="int getNumber()" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void setParentMolecule(org.openscience.cdk.libio.md.MDMolecule)" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void setNumber(int)" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="org.openscience.cdk.libio.md.MDMolecule getParentMolecule()" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,int,org.openscience.cdk.libio.md.MDMolecule)" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<method signature="void setSwitchingAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<field name="switchingAtom" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<field name="serialVersionUID" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<field name="parentMolecule" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<field name="number" class="org.openscience.cdk.libio.md.ChargeGroup" />
	<class name="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getBondRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXMinAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXValueAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getYMin()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractPeakGroup)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setMoleculeRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getYWidth()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYMin(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setPeakHeight(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getPeakShape()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXMaxAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXMax(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setAtomRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addPeakGroup(org.xmlcml.cml.element.AbstractPeakGroup)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addBond(org.xmlcml.cml.element.AbstractBond)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getYUnits()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYWidth(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakHeightAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getXMax()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String[] getMoleculeRefs()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYValueAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getPeakHeight()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXWidth(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYMax(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getXMin()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setAtomRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYMaxAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getXUnits()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXWidth(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addAtom(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYWidth(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMoleculeRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String[] getAtomRefs()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setPeakMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getXValue()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void addPeak(org.xmlcml.cml.element.AbstractPeak)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getXWidth()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setMoleculeRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setBondRefs(java.lang.String[])" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondElements()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setYValue(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getPeakUnits()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIntegralAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXWidthAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setPeakUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getPeakMultiplicity()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getIntegral()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getYValue()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXValue(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakElements()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setIntegral(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setPeakHeight(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXMin(double)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String[] getBondRefs()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="double getYMax()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXUnitsAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setPeakShape(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYMinAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomElements()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakGroupElements()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYWidthAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setBondRefs(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="void setXValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPeakShapeAttribute()" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_yvalue" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_yunits" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_peakheight" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_bondrefs" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_xmin" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_xunits" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_ywidth" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_moleculerefs" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_integral" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_ymin" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_peakmultiplicity" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_xvalue" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_ymax" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_peakshape" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_peakunits" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_xmax" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_atomrefs" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_xwidth" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractPeakGroup" />
	<class name="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZFractAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setAtomID(java.lang.String[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZ3Attribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setElementType(java.lang.String[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setElementType(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="int[] getFormalCharge()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setFormalCharge(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getCount()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getY3Attribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setX3(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setXFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setFormalCharge(int[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXFractAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String[] getAtomID()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getZ3()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getElementTypeAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getZFract()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getX3Attribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setZFract(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setYFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setXFract(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYFractAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setZFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setOccupancy(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setY3(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormalChargeAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setYFract(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getHydrogenCountAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setY2(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getX2()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getX3()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void addAtom(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="int[] getHydrogenCount()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getYFract()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getX2Attribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setX2(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setX2(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOccupancyAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getY3()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getY2()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomArray)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setZ3(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setAtomID(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setZ3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setY2(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setHydrogenCount(int[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setHydrogenCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setY3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setCount(double[])" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getY2Attribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getOccupancy()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomIDAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setX3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String[] getElementType()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomElements()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="double[] getXFract()" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<method signature="void setOccupancy(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_occupancy" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_atomid" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_y2" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_formalcharge" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_z3" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_yfract" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_hydrogencount" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_zfract" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_x3" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_xfract" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_elementtype" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_y3" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<field name="_att_x2" class="org.xmlcml.cml.element.AbstractAtomArray" />
	<class name="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="void main(java.lang.String)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="nu.xom.Nodes finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="java.lang.Class makeClass(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="void init()" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="nu.xom.Nodes makeAttribute(java.lang.String,java.lang.String,java.lang.String,nu.xom.Attribute$Type)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="nu.xom.Element startMakingElement(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="nu.xom.Nodes makeText(java.lang.String)" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<field name="current" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<field name="nodeFactory" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<field name="stack" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<field name="factoryElementMap" class="org.xmlcml.cml.base.CMLNodeFactory" />
	<class name="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="java.lang.String getXML(nu.xom.Document)" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="void write(nu.xom.Element)" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="void write(nu.xom.Attribute)" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLSerializer" />
	<method signature="java.lang.String getXML(nu.xom.Element)" class="org.xmlcml.cml.base.CMLSerializer" />
	<field name="logger" class="org.xmlcml.cml.base.CMLSerializer" />
	<field name="baos" class="org.xmlcml.cml.base.CMLSerializer" />
	<class name="org.xmlcml.cml.element.CMLKpointList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLKpointList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLKpointList)" class="org.xmlcml.cml.element.CMLKpointList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLKpointList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLKpointList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLKpointList" />
	<class name="org.openscience.jchempaint.controller.SelectLassoModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.SelectLassoModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.SelectLassoModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.SelectLassoModule" />
	<class name="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<field name="tolerance" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<field name="mass" class="org.openscience.cdk.formula.rules.ToleranceRangeRule" />
	<class name="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void zoomChanged()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void selectionChanged()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void structurePropertiesChanged()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void coordinatesChanged()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<method signature="void structureChanged()" class="org.openscience.jchempaint.controller.IChemModelEventRelayHandler" />
	<class name="org.openscience.jchempaint.renderer.generators.SelectBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.SelectBondGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.SelectBondGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.SelectBondGenerator" />
	<field name="autoUpdateSelection" class="org.openscience.jchempaint.renderer.generators.SelectBondGenerator" />
	<class name="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2 getCentroid()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Range getRange2()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2Array)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void subtract(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void swapXY()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="int getPoint(org.xmlcml.euclid.Real2,double,double)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealArray getYArray()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void multiplyBy(double)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector sortDescending(org.xmlcml.euclid.Axis$Axis2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void transformBy(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector regularPolygon(int,double)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="int size()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2 get(int)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealArray getXArray()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void translateBy(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector sortAscending(org.xmlcml.euclid.Axis$Axis2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Angle angle(int,int,int)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector regularPolygon(int,org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,boolean)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="double getCoordinate(int,org.xmlcml.euclid.Axis$Axis2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void plus(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="double distance(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void rotateAboutCentroid(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="int getClosestPoint(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="java.util.List getVector()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void flipX()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealArray getXorY(org.xmlcml.euclid.Axis$Axis2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void set(int,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void flipY()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector partOfRegularPolygon(int,int,double)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(int,double[],double[])" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Array getReal2Array()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void add(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="boolean encloses(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="int getSerialOfNearestPoint(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="double[] getSquaredDistances(org.xmlcml.euclid.Real2Vector)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.IntSet subSet(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="double getSquaredDifference(org.xmlcml.euclid.Real2Vector)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector subArray(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Angle angle(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealMatrix getDistanceMatrix(java.util.List)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealArray getXY()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="double distance(int,int)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2Vector)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.RealRange getRange(org.xmlcml.euclid.Axis$Axis2)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2Vector regularPolygon(int,double,double)" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="java.util.List getReal2List()" class="org.xmlcml.euclid.Real2Vector" />
	<method signature="org.xmlcml.euclid.Real2 getReal2(int)" class="org.xmlcml.euclid.Real2Vector" />
	<field name="vector" class="org.xmlcml.euclid.Real2Vector" />
	<field name="serialVersionUID" class="org.xmlcml.euclid.Real2Vector" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<method signature="int getIMPH(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.ImplicitHCountAtom" />
	<class name="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.XEDFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.XEDFormat" />
	<class name="org.openscience.cdk.Ring" />
	<method signature="org.openscience.cdk.interfaces.IBond getNextBond(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Ring" />
	<method signature="void &lt;init&gt;(int,java.lang.String)" class="org.openscience.cdk.Ring" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Ring" />
	<method signature="int getBondOrderSum()" class="org.openscience.cdk.Ring" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.Ring" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Ring" />
	<method signature="int getRingSize()" class="org.openscience.cdk.Ring" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Ring" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.Ring" />
	<field name="serialVersionUID" class="org.openscience.cdk.Ring" />
	<class name="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void primeProduct(java.util.ArrayList,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void step3(java.util.ArrayList,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void canonLabel(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="boolean isInvPart(java.util.ArrayList)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="java.util.ArrayList createInvarLabel(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void sortArrayList(java.util.ArrayList)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void breakTies(java.util.ArrayList)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void rankArrayList(java.util.ArrayList)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<method signature="void step2(java.util.ArrayList,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.invariant.CanonicalLabeler" />
	<class name="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.UniChemXYZFormat" />
	<class name="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<field name="size" class="org.openscience.cdk.qsar.result.DoubleArrayResultType" />
	<class name="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.interfaces.IReaction readReaction(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemModel readChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="org.openscience.cdk.interfaces.IReactionSet readReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLRXNReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLRXNReader" />
	<field name="input" class="org.openscience.cdk.io.MDLRXNReader" />
	<field name="logger" class="org.openscience.cdk.io.MDLRXNReader" />
	<class name="org.xmlcml.cml.element.CMLSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSubstanceList)" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<field name="TAG" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSubstanceList" />
	<class name="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="void setMetadataType(java.lang.String)" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMetadata)" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMetadataTypeAttribute()" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="java.lang.String getMetadataType()" class="org.xmlcml.cml.element.CMLMetadata" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMetadata" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMetadata" />
	<class name="org.xmlcml.cml.element.CMLBondArray$Message" />
	<method signature="org.xmlcml.cml.element.CMLBondArray$Message[] values()" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<method signature="org.xmlcml.cml.element.CMLBondArray$Message valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<field name="value" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<field name="NULL_BONDARRAY_PARENT" class="org.xmlcml.cml.element.CMLBondArray$Message" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticOrSingleQueryBond" />
	<class name="org.openscience.cdk.io.CrystClustReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void close()" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.CrystClustReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.CrystClustReader" />
	<field name="input" class="org.openscience.cdk.io.CrystClustReader" />
	<field name="logger" class="org.openscience.cdk.io.CrystClustReader" />
	<class name="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void stateChanged(java.util.EventObject)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void structurePropertiesChanged()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setupPopupMenus(org.openscience.jchempaint.SwingPopupModule)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.lang.String getSVGString()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setShowInsertTextField(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setCurrentSaveFileFilter(javax.swing.filechooser.FileFilter)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setLastOpenedFile(java.io.File)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="boolean getShowMenuBar()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="boolean getShowStatusBar()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setShowToolBar(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void structureChanged()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void closeAllInstances()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="int showWarning()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void customizeView()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAllAtomContainersInOne(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void keyReleased(java.awt.event.KeyEvent)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.io.File getCurrentWorkDirectory()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void selectionChanged()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="boolean getShowInsertTextField()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void keyPressed(java.awt.event.KeyEvent)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.io.File isAlreadyAFile()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.lang.String getGuistring()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setShowMenuBar(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setTitle(java.lang.String)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="javax.swing.filechooser.FileFilter getCurrentSaveFileFilter()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setModified(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="javax.swing.filechooser.FileFilter getCurrentOpenFileFilter()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setCurrentWorkDirectory(java.io.File)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="boolean getShowToolBar()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setIsAlreadyAFile(java.io.File)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void updateUndoRedoControls()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setLastSecondaryButton(javax.swing.JComponent)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.awt.Container getTopLevelContainer()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void enOrDisableMenus(javax.swing.JMenu,boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void keyTyped(java.awt.event.KeyEvent)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setShowStatusBar(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setLastActionButton(javax.swing.JComponent)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="boolean isDebug()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void zoomChanged()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setIsNewChemModel(boolean)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="javax.swing.JComponent getLastActionButton()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.awt.Image takeSnapshot()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="java.io.File getLastOpenedFile()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void setCurrentOpenFileFilter(javax.swing.filechooser.FileFilter)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemModel,java.lang.String,boolean,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void modeChanged(org.openscience.jchempaint.controller.IControllerModule)" class="org.openscience.jchempaint.JChemPaintPanel" />
	<method signature="void coordinatesChanged()" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="bondMenu" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="righttoolbar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lastOpenedFile" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="centerContainer" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lastSecondaryButton" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="atomMenu" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lastActionButton" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="menu" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="topContainer" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="showInsertTextField" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="redoMenu" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="currentWorkDirectory" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="currentOpenFileFilter" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lefttoolbar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lowertoolbar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="debug" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="currentSaveFileFilter" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="showMenuBar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="undoMenu" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="instances" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="showToolBar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="isModified" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="uppertoolbar" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="lastSelectId" class="org.openscience.jchempaint.JChemPaintPanel" />
	<field name="isAlreadyAFile" class="org.openscience.jchempaint.JChemPaintPanel" />
	<class name="org.openscience.cdk.graph.invariant.exception.BadMatrixFormatException" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.exception.BadMatrixFormatException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.exception.BadMatrixFormatException" />
	<field name="serialVersionUID" class="org.openscience.cdk.graph.invariant.exception.BadMatrixFormatException" />
	<class name="org.xmlcml.cml.element.CMLComplexObject" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLComplexObject" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLComplexObject)" class="org.xmlcml.cml.element.CMLComplexObject" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLComplexObject" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLComplexObject" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLComplexObject" />
	<class name="org.xmlcml.euclid.Euclid" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Euclid" />
	<class name="org.openscience.cdk.qsar.result.BooleanResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.BooleanResult" />
	<method signature="void &lt;init&gt;(boolean)" class="org.openscience.cdk.qsar.result.BooleanResult" />
	<method signature="boolean booleanValue()" class="org.openscience.cdk.qsar.result.BooleanResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.BooleanResult" />
	<field name="value" class="org.openscience.cdk.qsar.result.BooleanResult" />
	<class name="org.xmlcml.euclid.Point2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point2)" class="org.xmlcml.euclid.Point2" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Point2" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Point2" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Point2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Point2" />
	<class name="org.xmlcml.cml.element.CMLName" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLName" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLName" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLName)" class="org.xmlcml.cml.element.CMLName" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLName" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLName" />
	<field name="NS" class="org.xmlcml.cml.element.CMLName" />
	<class name="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="void updateLanguage()" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.AbstractJChemPaintPanel,javax.swing.JFrame)" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="java.lang.String getDataFromURL(java.lang.String)" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="boolean isCASNumber(java.lang.String)" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMolecule()" class="org.openscience.jchempaint.InsertTextPanel" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMoleculeFromCAS(java.lang.String)" class="org.openscience.jchempaint.InsertTextPanel" />
	<field name="closeafter" class="org.openscience.jchempaint.InsertTextPanel" />
	<field name="textCombo" class="org.openscience.jchempaint.InsertTextPanel" />
	<field name="jChemPaintPanel" class="org.openscience.jchempaint.InsertTextPanel" />
	<field name="button" class="org.openscience.jchempaint.InsertTextPanel" />
	<field name="editor" class="org.openscience.jchempaint.InsertTextPanel" />
	<class name="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableContent)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDelimiterAttribute()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setDelimiter(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getDelimiter()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableContent" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_att_delimiter" class="org.xmlcml.cml.element.AbstractTableContent" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableContent" />
	<class name="org.xmlcml.euclid.Diagonalise" />
	<method signature="void subroutine(int,double[],int,int,int,int,int,int,int,int,int,double,double,double[],double[],double,double,double)" class="org.xmlcml.euclid.Diagonalise" />
	<method signature="int vneigl(int,double[],double[],double[],org.xmlcml.euclid.EuclidRuntimeException)" class="org.xmlcml.euclid.Diagonalise" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Diagonalise" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Diagonalise" />
	<method signature="int eigtest(int,double[],double[],double)" class="org.xmlcml.euclid.Diagonalise" />
	<field name="TWO" class="org.xmlcml.euclid.Diagonalise" />
	<field name="ZERO" class="org.xmlcml.euclid.Diagonalise" />
	<field name="SQRT2" class="org.xmlcml.euclid.Diagonalise" />
	<field name="ONE" class="org.xmlcml.euclid.Diagonalise" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticSymbolAtom" />
	<class name="org.openscience.cdk.event.ICDKSelectionChangeListener" />
	<method signature="void stateChanged(java.util.EventObject)" class="org.openscience.cdk.event.ICDKSelectionChangeListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.event.ICDKSelectionChangeListener" />
	<class name="org.openscience.cdk.interfaces.IBond$Stereo" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<method signature="org.openscience.cdk.interfaces.IBond$Stereo valueOf(java.lang.String)" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<method signature="org.openscience.cdk.interfaces.IBond$Stereo[] values()" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="UP_OR_DOWN_INVERTED" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="DOWN_INVERTED" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="DOWN" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="$VALUES" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="UP_OR_DOWN" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="UP_INVERTED" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="E_Z_BY_COORDINATES" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="UP" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="E_OR_Z" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<field name="NONE" class="org.openscience.cdk.interfaces.IBond$Stereo" />
	<class name="org.openscience.cdk.ChemFile" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.ChemFile" />
	<method signature="void growChemSequenceArray()" class="org.openscience.cdk.ChemFile" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ChemFile" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ChemFile" />
	<method signature="void removeChemSequence(int)" class="org.openscience.cdk.ChemFile" />
	<method signature="int getChemSequenceCount()" class="org.openscience.cdk.ChemFile" />
	<method signature="org.openscience.cdk.interfaces.IChemSequence getChemSequence(int)" class="org.openscience.cdk.ChemFile" />
	<method signature="java.lang.Iterable chemSequences()" class="org.openscience.cdk.ChemFile" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemFile" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ChemFile" />
	<method signature="void addChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.ChemFile" />
	<field name="chemSequenceCount" class="org.openscience.cdk.ChemFile" />
	<field name="chemSequences" class="org.openscience.cdk.ChemFile" />
	<field name="serialVersionUID" class="org.openscience.cdk.ChemFile" />
	<field name="growArraySize" class="org.openscience.cdk.ChemFile" />
	<class name="org.xmlcml.cml.element.CMLFormula$Sort" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<method signature="org.xmlcml.cml.element.CMLFormula$Sort[] values()" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<method signature="org.xmlcml.cml.element.CMLFormula$Sort valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<field name="ALPHABETIC_ELEMENTS" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<field name="example" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<field name="type" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<field name="CHFIRST" class="org.xmlcml.cml.element.CMLFormula$Sort" />
	<class name="org.openscience.cdk.ReactionSet" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.ReactionSet" />
	<method signature="org.openscience.cdk.interfaces.IReaction getReaction(int)" class="org.openscience.cdk.ReactionSet" />
	<method signature="int getReactionCount()" class="org.openscience.cdk.ReactionSet" />
	<method signature="java.lang.Iterable reactions()" class="org.openscience.cdk.ReactionSet" />
	<method signature="void removeReaction(int)" class="org.openscience.cdk.ReactionSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ReactionSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ReactionSet" />
	<method signature="void removeReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.ReactionSet" />
	<method signature="int access$100(org.openscience.cdk.ReactionSet)" class="org.openscience.cdk.ReactionSet" />
	<method signature="void addReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.ReactionSet" />
	<method signature="void removeAllReactions()" class="org.openscience.cdk.ReactionSet" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ReactionSet" />
	<method signature="org.openscience.cdk.interfaces.IReaction[] access$200(org.openscience.cdk.ReactionSet)" class="org.openscience.cdk.ReactionSet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ReactionSet" />
	<method signature="void growReactionArray()" class="org.openscience.cdk.ReactionSet" />
	<field name="reactionCount" class="org.openscience.cdk.ReactionSet" />
	<field name="reactions" class="org.openscience.cdk.ReactionSet" />
	<field name="serialVersionUID" class="org.openscience.cdk.ReactionSet" />
	<field name="growArraySize" class="org.openscience.cdk.ReactionSet" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.DegreeAtom" />
	<class name="org.openscience.cdk.geometry.RDFCalculator" />
	<method signature="void &lt;init&gt;(double,double,double,double,org.openscience.cdk.geometry.IRDFWeightFunction)" class="org.openscience.cdk.geometry.RDFCalculator" />
	<method signature="double[] calculate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.RDFCalculator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.RDFCalculator" />
	<method signature="void &lt;init&gt;(double,double,double,double)" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="startCutoff" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="weightFunction" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="peakWidth" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="resolution" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="logger" class="org.openscience.cdk.geometry.RDFCalculator" />
	<field name="cutoff" class="org.openscience.cdk.geometry.RDFCalculator" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalValencyAtom" />
	<class name="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="java.applet.Applet getSpectrumApplet()" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void updateBond(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void update(org.openscience.cdk.interfaces.IChemObject,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void updateAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay,org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void highlightPeakInSpectrumApplet(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void unsetHighlights(org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="void highlightPeakInTable(int)" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.HighlightModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="jcpApplet" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="oldnumber" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="prevHighlightBond" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="$assertionsDisabled" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="prevHighlightAtom" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="spectrumApplet" class="org.openscience.jchempaint.controller.HighlightModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.HighlightModule" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom$1" />
	<method signature="int compare(java.lang.Object,java.lang.Object)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom$1" />
	<method signature="int compare(org.openscience.cdk.isomorphism.mcss.RMap,org.openscience.cdk.isomorphism.mcss.RMap)" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom$1" />
	<field name="this$0" class="org.openscience.cdk.isomorphism.matchers.smarts.RecursiveSmartsAtom$1" />
	<class name="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getParentAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getDelete()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addAtomType(org.xmlcml.cml.element.AbstractAtomType)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEvalAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setSubstitute(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDeleteAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSubstituteAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getParameterName()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setParameterName(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setParentAttribute(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addAtom(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getSubstitute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getEval()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setDelete(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setEval(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getParameterNameAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomTypeElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractArg)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getExpressionElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="void addExpression(org.xmlcml.cml.element.AbstractExpression)" class="org.xmlcml.cml.element.AbstractArg" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getParentAttributeAttribute()" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_delete" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_eval" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_parentattribute" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_parametername" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_substitute" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractArg" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractArg" />
	<class name="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String[] getAtomRefs3()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="double getErrorValue()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setAtomRefs3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setErrorValue(double)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setErrorValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getMin()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getMax()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setAtomRefs3(java.lang.String[])" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs3Attribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractAngle" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAngle)" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_min" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_max" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_errorvalue" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_atomrefs3" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAngle" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAngle" />
	<class name="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$2" />
	<method signature="void mousePressed(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$2" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$2" />
	<field name="this$0" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$2" />
	<class name="org.xmlcml.euclid.Vector3" />
	<method signature="void multiplyEquals(double)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 getPerpendicularVector()" class="org.xmlcml.euclid.Vector3" />
	<method signature="boolean isZero()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double getScalarTripleProduct(org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 normalize()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 negative()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 round()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 normalise()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void setElementAt(int,double)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 cross(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double getLength()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Axis$Axis3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 clone(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 plus(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 getNonColinearVector()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 getUnitVector()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 multiplyBy(double)" class="org.xmlcml.euclid.Vector3" />
	<method signature="boolean isIdenticalTo(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 clone(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double dot(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double elementAt(int)" class="org.xmlcml.euclid.Vector3" />
	<method signature="boolean isColinearVector(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 transform(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="boolean longerThan(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 subtract(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="void subtractEquals(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Vector3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 negativeEquals()" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Vector3 projectOnto(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.Vector3" />
	<method signature="void plusEquals(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="org.xmlcml.euclid.Angle getAngleMadeWith(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Vector3" />
	<method signature="double dot(double[])" class="org.xmlcml.euclid.Vector3" />
	<field name="flarray" class="org.xmlcml.euclid.Vector3" />
	<field name="ZERO_VECT" class="org.xmlcml.euclid.Vector3" />
	<field name="YV" class="org.xmlcml.euclid.Vector3" />
	<field name="UNIT_VECT" class="org.xmlcml.euclid.Vector3" />
	<field name="ZEROV" class="org.xmlcml.euclid.Vector3" />
	<field name="XV" class="org.xmlcml.euclid.Vector3" />
	<field name="OK_VECT" class="org.xmlcml.euclid.Vector3" />
	<field name="UNK_VECT" class="org.xmlcml.euclid.Vector3" />
	<field name="ZV" class="org.xmlcml.euclid.Vector3" />
	<class name="org.xmlcml.cml.element.CMLBand" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBand" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBand)" class="org.xmlcml.cml.element.CMLBand" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBand" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBand" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBand" />
	<class name="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="java.lang.String getImplementationIdentifier()" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="java.lang.String getImplementationTitle()" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="java.lang.String getImplementationVendor()" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="java.lang.String getSpecificationReference()" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<field name="implementationTitle" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<field name="implementationIdentifier" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<field name="specificationReference" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<field name="implementationVendor" class="org.openscience.cdk.qsar.DescriptorSpecification" />
	<class name="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.jchempaint.renderer.BoundsCalculator" />
	<class name="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<method signature="org.xmlcml.cml.element.CMLJoin$MoleculePointer[] values()" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<method signature="org.xmlcml.cml.element.CMLJoin$MoleculePointer valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<field name="PREVIOUS" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<field name="PARENT" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<field name="NEXT" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<field name="CHILD" class="org.xmlcml.cml.element.CMLJoin$MoleculePointer" />
	<class name="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<method signature="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type valueOf(java.lang.String)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<method signature="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type[] values()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<field name="$VALUES" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<field name="ALL" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<field name="NONE" class="org.openscience.jchempaint.renderer.selection.LogicalSelection$Type" />
	<class name="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PMPFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PMPFormat" />
	<class name="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void layoutRingSet(javax.vecmath.Vector2d,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void resetUnplacedRings()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void setMolecule(org.openscience.cdk.interfaces.IMolecule,boolean)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void fixRest()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer placeFirstBond(org.openscience.cdk.interfaces.IBond,javax.vecmath.Vector2d)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void generateExperimentalCoordinates()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void generateCoordinates(javax.vecmath.Vector2d)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void setTemplateHandler(org.openscience.cdk.layout.TemplateHandler)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getUnplacedAtoms(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void setMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRingSystemOfAtom(java.util.List,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IBond getNextBondWithUnplacedRingAtom()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void layoutNextRingSystem()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="boolean getUseTemplates()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtom getRingAtom(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void setUseTemplates(boolean)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPlacedAtoms(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void generateCoordinates()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMolecule()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.layout.TemplateHandler getTemplateHandler()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void markRingAtoms(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtom getNextAtomWithAliphaticUnplacedNeigbors()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IMolecule fixMol(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void setBondLength(double)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtom getOtherBondAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="boolean allPlaced(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void generateExperimentalCoordinates(javax.vecmath.Vector2d)" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<method signature="void handleAliphatics()" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="atomPlacer" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="disconnectedMessage" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="mappedSubstructures" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="bondLength" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="DEFAULT_TEMPLATE_HANDLER" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="ringPlacer" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="templateHandler" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="molecule" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="firstBondVector" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="ringSystems" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="useTemplates" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="logger" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<field name="sssr" class="org.openscience.cdk.layout.StructureDiagramGenerator" />
	<class name="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="org.openscience.cdk.interfaces.IAtom next()" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="void remove()" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Bond,org.openscience.cdk.Bond$1)" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Bond)" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Bond$AtomsIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.Bond$AtomsIterator" />
	<field name="this$0" class="org.openscience.cdk.Bond$AtomsIterator" />
	<field name="pointer" class="org.openscience.cdk.Bond$AtomsIterator" />
	<class name="org.openscience.cdk.PseudoAtom" />
	<method signature="void setLabel(java.lang.String)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.PseudoAtom" />
	<method signature="java.lang.String getLabel()" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void setStereoParity(java.lang.Integer)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.PseudoAtom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.PseudoAtom" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.PseudoAtom" />
	<field name="label" class="org.openscience.cdk.PseudoAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.PseudoAtom" />
	<class name="org.openscience.cdk.ReactionSet$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.ReactionSet$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ReactionSet)" class="org.openscience.cdk.ReactionSet$1" />
	<field name="this$0" class="org.openscience.cdk.ReactionSet$1" />
	<class name="org.xmlcml.cml.element.FullTorsion" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLAngle,org.xmlcml.cml.element.CMLLength,org.xmlcml.cml.element.CMLAngle,org.xmlcml.cml.element.CMLTorsion)" class="org.xmlcml.cml.element.FullTorsion" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="length2" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="length1" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="torsion" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="angle12" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="length3" class="org.xmlcml.cml.element.FullTorsion" />
	<field name="angle23" class="org.xmlcml.cml.element.FullTorsion" />
	<class name="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setXMLContent(double[])" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractVector3)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="double[] getXMLContent()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractVector3" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractVector3" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractVector3" />
	<class name="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSpectrum)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="java.util.List getDescendantPeaks(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="java.util.List getCouplingsTo(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="org.xmlcml.cml.element.CMLSpectrum getSpectrum(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getAuntMolecule(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="void getDescendantPeaks(org.xmlcml.cml.base.CMLElement,java.util.List)" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getSiblingMolecule()" class="org.xmlcml.cml.element.CMLSpectrum" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSpectrum" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSpectrum" />
	<class name="org.openscience.jchempaint.action.AddHydrogenAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.AddHydrogenAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.AddHydrogenAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.AddHydrogenAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.AddHydrogenAction" />
	<class name="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondByAtomIds(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeAtomArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void insertBondArray(org.xmlcml.cml.element.CMLBondArray,int)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBondArray getOrCreateBondArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.Map getChildMoleculeAtomMap()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtomArray getAtomArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void normalizeSingleMoleculeChild()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtom(int)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="boolean isMoleculeContainer()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeChild(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="boolean hasCloseContacts()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void translate2D(org.xmlcml.euclid.Real2)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeBondArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void setNormalizedBondOrders()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void deleteMolecule(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void addBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.euclid.Real2Vector getCoordinates2D()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="int getMoleculeCount()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBond deleteBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="int getAtomCount()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void appendToIds(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void multiply2DCoordsBy(double)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtomArray getOrCreateAtomArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void indexAtomIds(java.util.Map)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtomByIdXX(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void indexAtoms()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void appendMolecule(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBond getBond(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBond deleteBond(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void insertAtomArray(org.xmlcml.cml.element.CMLAtomArray,int)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void appendChild(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.euclid.Real2 calculateCentroid2D()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void addBond(org.xmlcml.cml.element.CMLBond,boolean)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void updateLigands()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void appendChild(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getDoubleBonds()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void addAtom(org.xmlcml.cml.element.CMLAtom,boolean)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMoleculeAncestor(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getChildMoleculeList(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtom deleteAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.Map getBondMap()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeChild(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLMolecule createMoleculeWithId(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void appendChild(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeAtomFromChildMoleculeAtomMap(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="boolean hasCoordinates(org.xmlcml.cml.base.CMLElement$CoordinateType,boolean)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void roundCoords(double,org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.Map getAtomMap()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.Map getCloseContacts()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void unlabelAllAtoms()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getDescendantsOrMolecule()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeAtomsFromAtomMap(java.util.List)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void getAtomChildMoleculeMap()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="boolean hasCoordinates(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void renameAtomIDs(java.util.List,java.util.List)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="int calculateFormalCharge()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.Map getBondIdMap()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void addAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void removeChild(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getAtomsById(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void indexBonds()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBondArray getBondArray()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void setBondOrders(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtomByLabel(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="int getCalculatedFormalCharge(org.xmlcml.cml.base.CMLElement$FormalChargeControl)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtomById(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondById(java.lang.String)" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="int getBondCount()" class="org.xmlcml.cml.element.CMLMolecule" />
	<method signature="java.util.List getAtomListByIds(java.lang.String[])" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="atomChildMoleculeMap" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="D3" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="COORD3" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="childMoleculeAtomMap" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="D2" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="COORD2" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="logger" class="org.xmlcml.cml.element.CMLMolecule" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMolecule" />
	<class name="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setMovingAllowed(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="java.lang.String getDrawElement()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean getAutoUpdateImplicitHydrogens()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setDrawIsotopeNumber(int)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setAutoUpdateImplicitHydrogens(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setRingPointerLength(double)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="double getBondPointerLength()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setSnapAngle(int)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setBondPointerLength(double)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setSnapCartesian(int)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="int getDrawIsotopeNumber()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean isHightlighLastSelected()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setDrawElement(java.lang.String)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean isMovingAllowed()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean getDrawPseudoAtom()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean getSnapToGridCartesian()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setDefaultElementSymbol(java.lang.String)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="java.util.HashMap getMerge()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setSnapToGridCartesian(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setCommonElements(java.lang.String[])" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="java.lang.String getDefaultElementSymbol()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="int getSnapAngle()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setSnapToGridAngle(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="int getSnapCartesian()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setDrawPseudoAtom(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="boolean getSnapToGridAngle()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setHightlighLastSelected(boolean)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="double getRingPointerLength()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="java.lang.String[] getCommonElements()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaxOrder()" class="org.openscience.jchempaint.controller.ControllerModel" />
	<method signature="void setMaxOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.jchempaint.controller.ControllerModel" />
	<field name="parameters" class="org.openscience.jchempaint.controller.ControllerModel" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.controller.ControllerModel" />
	<field name="merge" class="org.openscience.jchempaint.controller.ControllerModel" />
	<class name="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainerSet,org.openscience.cdk.AtomContainerSet$1)" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer next()" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainerSet)" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainerSet$AtomContainerIterator" />
	<class name="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="java.awt.geom.Rectangle2D getExtent(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="double getScale(org.openscience.cdk.interfaces.IAtomContainer,java.awt.Dimension)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="java.awt.geom.Point2D center(java.awt.Dimension)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="double[] getDimensions(org.openscience.cdk.interfaces.IAtomContainer,java.awt.Dimension)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void add(org.openscience.jchempaint.renderer.elements.IRenderingElement)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void visitChildren(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<method signature="void setScale(double[])" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<field name="scalex" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<field name="scaley" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<field name="extent" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<field name="elements" class="org.openscience.jchempaint.renderer.elements.ElementGroup" />
	<class name="org.openscience.cdk.isomorphism.matchers.IQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.IQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.IQueryBond" />
	<class name="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemFormat" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AnyOrderQueryBond" />
	<class name="org.openscience.cdk.io.listener.IWriterListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.IWriterListener" />
	<class name="org.xmlcml.cml.base.CMLLog$Severity" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<method signature="org.xmlcml.cml.base.CMLLog$Severity valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<method signature="org.xmlcml.cml.base.CMLLog$Severity[] values()" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<field name="ERROR" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<field name="INFO" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<field name="WARNING" class="org.xmlcml.cml.base.CMLLog$Severity" />
	<class name="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="java.util.List getMetadataDescendants(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="java.util.List getMetadataDescendantsByName(java.lang.String)" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="java.util.List getMetadataDescendants()" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMetadataList)" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="java.util.List getMetadataDescendantsByName(java.util.List,java.lang.String)" class="org.xmlcml.cml.element.CMLMetadataList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMetadataList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMetadataList" />
	<class name="org.xmlcml.euclid.RealInterval" />
	<method signature="double scaleTo(org.xmlcml.euclid.RealInterval)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="double offsetTo(double,double,double)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealInterval)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="double offsetTo(org.xmlcml.euclid.RealInterval)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RealInterval" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="double midPoint()" class="org.xmlcml.euclid.RealInterval" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealInterval" />
	<method signature="double getLength()" class="org.xmlcml.euclid.RealInterval" />
	<method signature="double offsetTo(org.xmlcml.euclid.RealInterval,double)" class="org.xmlcml.euclid.RealInterval" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealInterval" />
	<field name="x2" class="org.xmlcml.euclid.RealInterval" />
	<field name="x1" class="org.xmlcml.euclid.RealInterval" />
	<class name="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Character getStartChainID()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setStartInsertionCode(java.lang.Character)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Character getStartInsertionCode()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setEndSequenceNumber(java.lang.Integer)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setEndInsertionCode(java.lang.Character)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Integer getEndSequenceNumber()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setEndChainID(java.lang.Character)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setStartSequenceNumber(java.lang.Integer)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setStartChainID(java.lang.Character)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Character getEndChainID()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="void setStructureType(java.lang.String)" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Integer getStartSequenceNumber()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.String getStructureType()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<method signature="java.lang.Character getEndInsertionCode()" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="TURN" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="HELIX" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="SHEET" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="startSequenceNumber" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="startChainID" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="endSequenceNumber" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="startInsertionCode" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="endChainID" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="serialVersionUID" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="endInsertionCode" class="org.openscience.cdk.protein.data.PDBStructure" />
	<field name="structureType" class="org.openscience.cdk.protein.data.PDBStructure" />
	<class name="org.xmlcml.cml.base.CMLConstants$Units" />
	<method signature="java.lang.String toString()" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Units valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<method signature="org.xmlcml.cml.base.CMLConstants$Units[] values()" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="value" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="MOL" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="GRAM" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="MMOL" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="CMCUBED" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="GRAM_PER_MOLE" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="GRAM_PER_CMCUBED" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="L" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<field name="ML" class="org.xmlcml.cml.base.CMLConstants$Units" />
	<class name="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.config.IAtomTypeConfigurator constructConfigurator(java.lang.String)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="void readConfiguration(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="void readConfiguration(java.io.InputStream,java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtom configure(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.config.AtomTypeFactory getInstance(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="void &lt;init&gt;(java.io.InputStream,java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.config.AtomTypeFactory getInstance(java.io.InputStream,java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtomType getAtomType(java.lang.String)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="void &lt;init&gt;(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] getAtomTypes(java.lang.String)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] getAllAtomTypes()" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="org.openscience.cdk.config.AtomTypeFactory getInstance(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.AtomTypeFactory" />
	<method signature="int getSize()" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="atomTypes" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="tables" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="OWL_EXTENSION" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="XML_EXTENSION" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="logger" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="TXT_EXTENSION" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="ATOMTYPE_ID_STRUCTGEN" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="ATOMTYPE_ID_JMOL" class="org.openscience.cdk.config.AtomTypeFactory" />
	<field name="ATOMTYPE_ID_MODELING" class="org.openscience.cdk.config.AtomTypeFactory" />
	<class name="org.openscience.cdk.ConformerContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer remove(int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean addAll(java.util.Collection)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean retainAll(java.util.Collection)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean contains(java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void add(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.Object get(int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer[])" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.util.List subList(int,int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.Object remove(int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="int lastIndexOf(java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer get(int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.util.ListIterator listIterator()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="int indexOf(java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="int size()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean containsAll(java.util.Collection)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean add(java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer set(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void add(int,java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="javax.vecmath.Point3d[] getCoordinateList(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer access$200(org.openscience.cdk.ConformerContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean remove(java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean add(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.Object set(int,java.lang.Object)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.Object[] toArray()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean isEmpty()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean addAll(int,java.util.Collection)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="boolean removeAll(java.util.Collection)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.util.ListIterator listIterator(int)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.String getTitle()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="void clear()" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.util.List access$100(org.openscience.cdk.ConformerContainer)" class="org.openscience.cdk.ConformerContainer" />
	<method signature="java.lang.Object[] toArray(java.lang.Object[])" class="org.openscience.cdk.ConformerContainer" />
	<field name="title" class="org.openscience.cdk.ConformerContainer" />
	<field name="coordinates" class="org.openscience.cdk.ConformerContainer" />
	<field name="atomContainer" class="org.openscience.cdk.ConformerContainer" />
	<class name="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="void ensureDefaultOccurElements(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.ElementRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.ElementRule" />
	<field name="mfRange" class="org.openscience.cdk.formula.rules.ElementRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.ElementRule" />
	<class name="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="void initPath(org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="org.openscience.cdk.Ring getRing(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="org.openscience.cdk.Ring prepareRing(java.util.List,org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="java.util.Vector getUnion(java.util.Vector,java.util.Vector)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="java.util.List getIntersection(java.util.List,java.util.List)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="org.openscience.cdk.RingSet findSSSR(org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="void breakBond(org.openscience.cdk.Atom,org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="org.openscience.cdk.interfaces.IBond checkEdges(org.openscience.cdk.Ring,org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<method signature="void trim(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.Molecule)" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<field name="trimCounter" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<field name="logger" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<field name="PATH" class="org.openscience.cdk.ringsearch.FiguerasSSSRFinder" />
	<class name="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<field name="startAtom" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.AtomAtomMappingModule" />
	<class name="org.openscience.cdk.io.CMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CMLReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void registerConvention(java.lang.String,org.openscience.cdk.io.cml.ICMLModule)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void init()" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.CMLReader" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.io.CMLReader" />
	<field name="input" class="org.openscience.cdk.io.CMLReader" />
	<field name="parser" class="org.openscience.cdk.io.CMLReader" />
	<field name="url" class="org.openscience.cdk.io.CMLReader" />
	<field name="logger" class="org.openscience.cdk.io.CMLReader" />
	<field name="userConventions" class="org.openscience.cdk.io.CMLReader" />
	<class name="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="java.lang.String getKeyString(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom[],double)" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="int[] getNeighbors(int)" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="int[] getKeyArray(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="int getNumberOfNeighbors(int)" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<field name="atoms" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<field name="boxSize" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<field name="boxes" class="org.openscience.cdk.geometry.surface.NeighborList" />
	<class name="org.openscience.cdk.graph.invariant.exception.MatrixNotInvertibleException" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.exception.MatrixNotInvertibleException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.exception.MatrixNotInvertibleException" />
	<field name="serialVersionUID" class="org.openscience.cdk.graph.invariant.exception.MatrixNotInvertibleException" />
	<class name="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CDKSourceCodeFormat" />
	<class name="org.openscience.cdk.io.listener.IChemObjectIOListener" />
	<method signature="void processIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.listener.IChemObjectIOListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.listener.IChemObjectIOListener" />
	<class name="org.openscience.jchempaint.renderer.generators.ReactionBoxGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionBoxGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ReactionBoxGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionBoxGenerator" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<method signature="void setAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<field name="atomContainer" class="org.openscience.cdk.isomorphism.matchers.smarts.HydrogenAtom" />
	<class name="org.xmlcml.cml.element.CMLAngle" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAngle)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.util.Map getIndexedAngles(java.util.List)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.util.List getAtoms(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.util.List getList(org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="void setAtomRefs3(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.lang.String atomHash(java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.util.List getAtomIds()" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="double getCalculatedAngle(java.util.List)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="void outputHTML(java.io.Writer,java.util.List,org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="double getCalculatedAngle(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLAngle" />
	<method signature="java.lang.String atomHash()" class="org.xmlcml.cml.element.CMLAngle" />
	<field name="LOG" class="org.xmlcml.cml.element.CMLAngle" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAngle" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<method signature="boolean hasMoreElements()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt)" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<method signature="java.lang.Object nextElement()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<field name="i" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<field name="sp" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<field name="leaf" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<field name="stack" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateAll" />
	<class name="org.openscience.jchempaint.action.NewAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.NewAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.NewAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.NewAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.NewAction" />
	<class name="org.xmlcml.cml.base.CMLConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="MAIN" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="TEXT_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ATTRIBUTE_GROUP" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="C_E" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML3" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_NS_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ELEMENT_CLASS_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_COMPLEX_TYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="BANNER_S" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ELEMENTS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_DATATYPETYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_NAME" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="TYPES" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XML_SUFF" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="PATTERN_QNAME" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML1" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XHTML_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_STRING" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_XMLNS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_APPINFO" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ENUMERATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_CHOICE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_INTEGER" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ANY" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="PATTERN_ANYURI" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="C_A" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="LITE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ATTRIBUTES" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ENUMERATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_DOUBLE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="NUNIT_TYPE_DICT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="NUNIT_DICT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_SIMPLE_CONTENT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ATTPREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_PREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="SIUNIT_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="SVG_NS_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ELEMENT_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_SIUNITS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_BOOLEAN" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_POSITIVEINTEGER" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_MAXINCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_SIMPLETYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_TYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_DOUB" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="SVG_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_DICT_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CRYSTAL_DICT_REFS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="UNITTYPES_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XPATH_XSD" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_REPOSITORY_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_MAXINCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_NAMESPACEREFTYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ATTRIBUTE_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_SIMPLE_TYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ELEMENT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="TYPE_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_POSITIVE_NUMBER" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_QNAME" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ROOT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_INT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_FILENAME" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ABSTRACT_NODEFACTORY" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML2" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_EXTENSION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_RESTRICTION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_XMLNS_PREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="U_CELSIUS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_BOOL" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="X_OR" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="FPX_REAL" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ATTRIBUTE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ID" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XMLNS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_COLON" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ATTRIBUTE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="NDICT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ANYURI" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_PATTERN" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_XMLNS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CRYSTAL_DICT_UNITS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_DOCUMENTATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_PREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="U_ANGSTROM" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_MAXEXCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_TEXT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLX_PREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_ANNOTATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_UNITSTYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_UNBOUNDED" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="X_CML" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLX_XMLNS_PREFIX" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_PATTERN" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_BOOLEAN" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_DOCUMENTATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CATALOG_XML" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_LENGTH" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_SEQUENCE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_VALUE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_ARRAY" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_STRING" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_NONNEGATIVEINTEGER" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_LENGTH" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="JAVA_INTEGER" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_SUFF" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_DATE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ATTRIBUTE_CLASS_BASE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_UNION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_UNION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLX_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="WARNING_S" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="DICT_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="UNIT_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="AUTOGENERATED_DONOTEDIT_S" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="SVG_XPATH" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_MAXEXCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_XMLCONTENT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_MINEXCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_MININCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_DOUBLE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_SIMPLECONTENT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_REF" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_LIST" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_EXTENSION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ELEMENT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_MINEXCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_XPATH" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ANNOTATION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="OLD_NAMESPACES" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CML_UNITS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_MININCLUSIVE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_COMPLEXTYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="_UNIT_NS" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="XSD_FLOAT" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_RESTRICTION" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="U_DEGREE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ITEMTYPE" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="U_KCAL" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="CMLXSD_ATTRIBUTEGROUP" class="org.xmlcml.cml.base.CMLConstants" />
	<field name="ATTRIBUTE" class="org.xmlcml.cml.base.CMLConstants" />
	<class name="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Bravais valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<method signature="org.xmlcml.cml.element.CMLCrystal$Bravais[] values()" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="UNKNOWN" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="CUBIC" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="ORTHORHOMBIC" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="MONOCLINIC" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="HEXAGONAL" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="TETRAGONAL" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="desc" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="TRICLINIC" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<field name="TRIGONAL" class="org.xmlcml.cml.element.CMLCrystal$Bravais" />
	<class name="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ZMatrixFormat" />
	<class name="org.openscience.cdk.AtomContainer$2" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainer$2" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$2" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$2" />
	<class name="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String createSMILES(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void createSMILES(org.openscience.cdk.interfaces.IAtom,java.lang.StringBuffer,org.openscience.cdk.interfaces.IAtomContainer,boolean,boolean[],boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String createSMILES(org.openscience.cdk.interfaces.IMolecule,boolean,boolean[])" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="boolean isValidDoubleBondConfiguration(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void addAtoms(java.util.List,java.util.List)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String createSMILESWithoutCheckForMultipleMolecules(org.openscience.cdk.interfaces.IMolecule,boolean,boolean[])" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="boolean isBondBroken(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String generateMassString(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void parseAtom(org.openscience.cdk.interfaces.IAtom,java.lang.StringBuffer,org.openscience.cdk.interfaces.IAtomContainer,boolean,boolean[],org.openscience.cdk.interfaces.IAtom,java.util.List,java.util.List,boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void setupIsotopeFactory(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="boolean isEndOfDoubleBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,boolean[])" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void setUseAromaticityFlag(boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void parseBond(java.lang.StringBuffer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String createChiralSMILES(org.openscience.cdk.interfaces.IMolecule,boolean[])" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void &lt;init&gt;(boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.util.List getCanNeigh(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String createSMILES(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="boolean isRingOpening(org.openscience.cdk.interfaces.IAtom,java.util.List)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="org.openscience.cdk.interfaces.IAtom hasWedges(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="boolean isStartOfDoubleBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,boolean[])" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="org.openscience.cdk.ringsearch.AllRingsFinder getRingFinder()" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void createDFSTree(org.openscience.cdk.interfaces.IAtom,java.util.List,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.util.List getRingOpenings(org.openscience.cdk.interfaces.IAtom,java.util.List)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="org.openscience.cdk.smiles.SmilesGenerator setRings(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void parseChain(java.util.List,java.lang.StringBuffer,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,boolean,boolean[],java.util.List,boolean)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="java.lang.String generateChargeString(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<method signature="void setRingFinder(org.openscience.cdk.ringsearch.AllRingsFinder)" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="ringFinder" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="RING_CONFIG" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="DOWN" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="rings" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="isotopeFactory" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="UP" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="useAromaticityFlag" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="canLabler" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="brokenBonds" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<field name="ringMarker" class="org.openscience.cdk.smiles.SmilesGenerator" />
	<class name="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,boolean)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 getTransformToRotateAndStretchLine(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform2$Type)" class="org.xmlcml.euclid.Transform2" />
	<method signature="int setTransformationType(org.xmlcml.euclid.Transform2$Type)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2$Type getTransformationType()" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 clone(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealSquareMatrix,org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 concatenate(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.RealArray getScales()" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector2,org.xmlcml.euclid.Vector2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getRotationMatrix()" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2$Type calculateMatrixType()" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Real2 getTranslation()" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Window2,org.xmlcml.euclid.Window2,boolean)" class="org.xmlcml.euclid.Transform2" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Transform2" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Angle getAngleOfRotation()" class="org.xmlcml.euclid.Transform2" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Transform2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 clone(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 flipAboutVector(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Transform2" />
	<method signature="org.xmlcml.euclid.Transform2 getRotationAboutPoint(org.xmlcml.euclid.Angle,org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Transform2" />
	<field name="trnsfrm" class="org.xmlcml.euclid.Transform2" />
	<field name="logger" class="org.xmlcml.euclid.Transform2" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<method signature="int getCC(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<field name="CC_PROP" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.ConnectionCountAtom" />
	<class name="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="void seTolerance(double)" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="int getClosestDataDiff(org.openscience.cdk.formula.IsotopeContainer,org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="double compare(org.openscience.cdk.formula.IsotopePattern,org.openscience.cdk.formula.IsotopePattern)" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<method signature="double getTolerance()" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<field name="massE" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<field name="tolerance_ppm" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<field name="chargeToAdd" class="org.openscience.cdk.formula.IsotopePatternSimilarity" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="int getCount()" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="void setCount(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<field name="count" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount" />
	<class name="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getHrefAttribute()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void setHref(java.lang.String)" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractRelatedEntry)" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="java.lang.String getHref()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<field name="_att_href" class="org.xmlcml.cml.element.AbstractRelatedEntry" />
	<class name="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void init()" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="java.util.Map getAttributeGroupMap()" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.SchemaManager)" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void setAttributeGroupMap(java.util.Map)" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void readAssembleAndIndexSchema(java.lang.String)" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void printAttributes()" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute createAttribute(java.lang.String)" class="org.xmlcml.cml.base.AttributeGenerator" />
	<method signature="void indexSchema()" class="org.xmlcml.cml.base.AttributeGenerator" />
	<field name="attributeGroupMap" class="org.xmlcml.cml.base.AttributeGenerator" />
	<class name="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<field name="newActiveModule" class="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ChangeAtomSymbolAction" />
	<class name="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix GaussJordan()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isInvertible()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isSquare()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix diagonal()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isAntisymmetric()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean equals(org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void verifyTableFormat(org.openscience.cdk.graph.invariant.GIMatrix[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix invertLine(int,int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;init&gt;(int[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix multiply(org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix add(org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix addLine(int,int,double)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void setValueAt(int,int,double)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double determinant()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;init&gt;(int,int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void setColumn(int,org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double[][] M(double[][],int,int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix multiplyLine(int,double)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;init&gt;(double[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isTriangularSuperior()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double[][] getArrayValue()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="int height()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix zero(int,int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double det(double[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double getValueAt(int,int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix transpose()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isSymmetric()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.invariant.GIMatrix[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix getColumn(int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void verifyMatrixFormat(double[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix getLine(int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix inverse()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isTriangularInferior()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="boolean isDiagonal()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix multiply(double)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void setLine(int,org.openscience.cdk.graph.invariant.GIMatrix)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="double trace()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="void setArrayValue(double[][])" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="int width()" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<method signature="org.openscience.cdk.graph.invariant.GIMatrix identity(int)" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<field name="m" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<field name="n" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<field name="array" class="org.openscience.cdk.graph.invariant.GIMatrix" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.OrderQueryBond" />
	<class name="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CRK3DFormat" />
	<class name="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionValueAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setConventionValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBondStereo)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String[] getAtomRefArray()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs4Attribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setAtomRefArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefArrayAttribute()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setAtomRefs4(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setAtomRefs4(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getConventionValue()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setAtomRefArray(java.lang.String[])" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<method signature="java.lang.String[] getAtomRefs4()" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_atomrefs4" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_conventionvalue" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_atomrefarray" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBondStereo" />
	<class name="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addAtom(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setAtomRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getMoleculeElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getAtomRef()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addMolecule(org.xmlcml.cml.element.AbstractMolecule)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomType)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomElements()" class="org.xmlcml.cml.element.AbstractAtomType" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_atomref" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractAtomType" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomType" />
	<class name="org.openscience.cdk.graph.matrix.IGraphMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.matrix.IGraphMatrix" />
	<class name="org._3pq.jgrapht.UndirectedGraph" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.UndirectedGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.UndirectedGraph" />
	<class name="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="int[] getEquivalentClass(double[])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="int checkDiffNumber(double[])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="double[][] buildNodeMatrix(double[])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="int[] getTopoEquivClassbyHuXu(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="double[][] buildTrialNodeMatrix(double[])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="double[][] buildBondMatrix()" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="int[] findTopoEquivClass(double[])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="double[] prepareNode(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<method signature="double[] buildWeightMatrix(double[][],double[][])" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="apspMatrix" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="LOST" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="bondMatrix" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="nodeMatrix" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="adjaMatrix" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="logger" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="nodeNumber" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="weight" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<field name="layerNumber" class="org.openscience.cdk.graph.invariant.EquivalentClassPartitioner" />
	<class name="org.xmlcml.euclid.RealArray" />
	<method signature="double[] deleteElements(double[],int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double getBaseLine()" class="org.xmlcml.euclid.RealArray" />
	<method signature="double dotProduct(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="int partition(int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="int indexOfSmallestElement()" class="org.xmlcml.euclid.RealArray" />
	<method signature="java.text.DecimalFormat getFormat()" class="org.xmlcml.euclid.RealArray" />
	<method signature="double lineSearch(double,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double rms()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.IntSet indexSortDescending()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void setElements(double[])" class="org.xmlcml.euclid.RealArray" />
	<method signature="boolean isClear()" class="org.xmlcml.euclid.RealArray" />
	<method signature="boolean checkSize(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="int size()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void setElementAt(int,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void insertArray(int,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray getSymmetricalArray(double,int,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void reverse()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray subtract(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray unitVector()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void setElements(int,double[])" class="org.xmlcml.euclid.RealArray" />
	<method signature="double innerProduct()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void plusEquals(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="int xxpartition(org.xmlcml.euclid.IntArray,double[],int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="boolean equals(org.xmlcml.euclid.RealArray,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void sortDescending()" class="org.xmlcml.euclid.RealArray" />
	<method signature="double getRandomVariate(org.xmlcml.euclid.RealArray,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.IntSet inRange(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void round(double[],int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void addElement(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void xfswap(double[],int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.IntSet indexSortAscending()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void deleteElement(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void subtractEquals(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray getFilter(int,org.xmlcml.euclid.RealArray$Filter)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void deleteElements(int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void makeSpace(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void check(org.xmlcml.euclid.RealArray,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void xxfswap(org.xmlcml.euclid.IntArray,int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray,org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void xxinssort(org.xmlcml.euclid.IntArray,double[],int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void insertElementAt(int,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void replaceNaN(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray getSubArray(int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double getMin()" class="org.xmlcml.euclid.RealArray" />
	<method signature="double largestElement()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void shallowCopy(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void iqsort(int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double get(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(int,java.lang.String,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void inssort(int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void contractArray()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray getReorderedArray(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double absSumAllElements()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double findFirstLocalMaximumafter(int,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double euclideanLength()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray addScalar(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.IntSet outOfRange(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealRange getRange()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray trim(org.xmlcml.euclid.ArrayBase$Trim,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray applyFilter(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray getNormalDistribution(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(int,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(java.lang.String[])" class="org.xmlcml.euclid.RealArray" />
	<method signature="double sumAllElements()" class="org.xmlcml.euclid.RealArray" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray plus(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray cumulativeSum()" class="org.xmlcml.euclid.RealArray" />
	<method signature="double smallestElement()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray,int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double getMax()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void checkConformable(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void setAllElements(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(int,double[])" class="org.xmlcml.euclid.RealArray" />
	<method signature="void negative()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealArray" />
	<method signature="java.lang.Object clone()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void sortAscending()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(int,double,double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double elementAt(int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="int indexOfLargestElement()" class="org.xmlcml.euclid.RealArray" />
	<method signature="org.xmlcml.euclid.RealArray multiplyBy(double)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.RealArray" />
	<method signature="java.lang.String[] getStringValues()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void clearArray()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void xxiqsort(org.xmlcml.euclid.IntArray,double[],int,int)" class="org.xmlcml.euclid.RealArray" />
	<method signature="double[] getReverseArray()" class="org.xmlcml.euclid.RealArray" />
	<method signature="void setFormat(java.text.DecimalFormat)" class="org.xmlcml.euclid.RealArray" />
	<method signature="void addArray(org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.RealArray" />
	<field name="bufsize" class="org.xmlcml.euclid.RealArray" />
	<field name="XXCUTOFF" class="org.xmlcml.euclid.RealArray" />
	<field name="CUTOFF" class="org.xmlcml.euclid.RealArray" />
	<field name="nelem" class="org.xmlcml.euclid.RealArray" />
	<field name="logger" class="org.xmlcml.euclid.RealArray" />
	<field name="maxelem" class="org.xmlcml.euclid.RealArray" />
	<field name="format" class="org.xmlcml.euclid.RealArray" />
	<field name="array" class="org.xmlcml.euclid.RealArray" />
	<class name="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="java.lang.String getElementSymbol(org.xml.sax.Attributes)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="java.util.List getIsotopes()" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="org.openscience.cdk.interfaces.IIsotope createIsotopeOfElement(java.lang.String,org.xml.sax.Attributes)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void startDocument()" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void characters(char[],int,int)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<method signature="void endElement(java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="dictRef" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="isotopes" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="builder" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="workingIsotope" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="currentChars" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="currentElement" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<field name="logger" class="org.openscience.cdk.config.isotopes.IsotopeHandler" />
	<class name="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.LineElement,int,org.openscience.jchempaint.renderer.elements.WedgeLineElement$Direction,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<method signature="void &lt;init&gt;(double,double,double,double,double,int,org.openscience.jchempaint.renderer.elements.WedgeLineElement$Direction,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<field name="direction" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<field name="wedgeType" class="org.openscience.jchempaint.renderer.elements.WedgeLineElement" />
	<class name="org.openscience.cdk.Atom" />
	<method signature="java.lang.Integer getHydrogenCount()" class="org.openscience.cdk.Atom" />
	<method signature="javax.vecmath.Point2d getPoint2d()" class="org.openscience.cdk.Atom" />
	<method signature="void setPoint2d(javax.vecmath.Point2d)" class="org.openscience.cdk.Atom" />
	<method signature="void setCharge(java.lang.Double)" class="org.openscience.cdk.Atom" />
	<method signature="java.lang.Double getCharge()" class="org.openscience.cdk.Atom" />
	<method signature="javax.vecmath.Point3d getPoint3d()" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Atom" />
	<method signature="void setPoint3d(javax.vecmath.Point3d)" class="org.openscience.cdk.Atom" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Atom" />
	<method signature="javax.vecmath.Point3d getFractionalPoint3d()" class="org.openscience.cdk.Atom" />
	<method signature="java.lang.Integer getStereoParity()" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;init&gt;(java.lang.String,javax.vecmath.Point2d)" class="org.openscience.cdk.Atom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;init&gt;(java.lang.String,javax.vecmath.Point3d)" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Atom" />
	<method signature="void setStereoParity(java.lang.Integer)" class="org.openscience.cdk.Atom" />
	<method signature="void setFractionalPoint3d(javax.vecmath.Point3d)" class="org.openscience.cdk.Atom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.Atom" />
	<method signature="boolean compare(java.lang.Object)" class="org.openscience.cdk.Atom" />
	<method signature="void setHydrogenCount(java.lang.Integer)" class="org.openscience.cdk.Atom" />
	<field name="point3d" class="org.openscience.cdk.Atom" />
	<field name="charge" class="org.openscience.cdk.Atom" />
	<field name="hydrogenCount" class="org.openscience.cdk.Atom" />
	<field name="stereoParity" class="org.openscience.cdk.Atom" />
	<field name="serialVersionUID" class="org.openscience.cdk.Atom" />
	<field name="point2d" class="org.openscience.cdk.Atom" />
	<field name="fractionalPoint3d" class="org.openscience.cdk.Atom" />
	<class name="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.MPQCFormat" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="int getBondType()" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<method signature="void setBondType(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<field name="bondType" class="org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond" />
	<class name="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<method signature="void addField(java.lang.String,javax.swing.JComponent,javax.swing.JPanel)" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<method signature="javax.swing.JPanel addTab(java.lang.String)" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<method signature="void &lt;init&gt;(boolean)" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<method signature="void addArea(java.lang.String,javax.swing.JComponent)" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<field name="rows" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<field name="tabbedPane" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.FieldTablePanel" />
	<class name="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mousePressed(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseExited(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseEntered(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void updateView()" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseReleased(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseMoved(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseClicked(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseWheelMoved(java.awt.event.MouseWheelEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IMouseEventRelay)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<method signature="void mouseDragged(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<field name="dragFromY" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<field name="isPopupTrigger" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<field name="_canDrag" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<field name="relay" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<field name="dragFromX" class="org.openscience.jchempaint.controller.SwingMouseEventRelay" />
	<class name="org.openscience.jchempaint.JExternalFrame" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.JExternalFrame" />
	<method signature="void dispose()" class="org.openscience.jchempaint.JExternalFrame" />
	<method signature="void show(java.awt.Component)" class="org.openscience.jchempaint.JExternalFrame" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JExternalFrame" />
	<method signature="javax.swing.JPanel getDummyPanel()" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="theParent" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="embeddedSize" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="dummyPanel" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="initialized" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.JExternalFrame" />
	<field name="theComponent" class="org.openscience.jchempaint.JExternalFrame" />
	<class name="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSpectrum)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMeasurementAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setFormat(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setMeasurement(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addSample(org.xmlcml.cml.element.AbstractSample)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getSampleElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addSubstanceList(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getConditionListElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getMeasurement()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getFormat()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addParameterList(org.xmlcml.cml.element.AbstractParameterList)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getParameterListElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFtAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getSpectrumDataElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormatAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addSpectrumData(org.xmlcml.cml.element.AbstractSpectrumData)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setFt(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getState()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getMoleculeRef()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setMoleculeRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStateAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addConditionList(org.xmlcml.cml.element.AbstractConditionList)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getPeakListElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getFt()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMoleculeRefAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setState(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceListElements()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void addPeakList(org.xmlcml.cml.element.AbstractPeakList)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_moleculeref" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_format" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_measurement" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_state" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_ft" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSpectrum" />
	<class name="org.openscience.jchempaint.action.ZoomAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ZoomAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ZoomAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ZoomAction" />
	<field name="zoomDone" class="org.openscience.jchempaint.action.ZoomAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ZoomAction" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="void setEdgeListFactory(org._3pq.jgrapht.graph.EdgeListFactory)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.Set vertexSet()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean assertCompatibleWithEdgeFactory(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean containsVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean addVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.Edge addEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean removeEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean removeVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.Edge removeEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.lang.Object clone()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean isAllowingLoops()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.graph.EdgeListFactory access$400(org._3pq.jgrapht.graph.AbstractBaseGraph)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean isAllowingMultipleEdges()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.Set edgeSet()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.graph.AbstractBaseGraph$Specifics createSpecifics()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean addEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.EdgeFactory,boolean,boolean)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="boolean containsEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<method signature="org._3pq.jgrapht.EdgeFactory getEdgeFactory()" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_edgeFactory" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_edgeSet" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_factoryEdgeClass" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_allowingLoops" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_allowingMultipleEdges" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_unmodifiableEdgeSet" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_vertexMap" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="LOOPS_NOT_ALLOWED" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_specifics" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_edgeListFactory" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<field name="m_unmodifiableVertexSet" class="org._3pq.jgrapht.graph.AbstractBaseGraph" />
	<class name="org.openscience.cdk.qsar.result.DoubleResultType" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.DoubleResultType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.DoubleResultType" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.result.DoubleResultType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.DoubleResultType" />
	<class name="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="nu.xom.Document buildEnsureCML(java.io.Reader)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="void &lt;init&gt;(nu.xom.NodeFactory)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="void &lt;init&gt;(boolean)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="nu.xom.Document ensureCML(nu.xom.Document)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="void &lt;init&gt;(boolean,nu.xom.NodeFactory)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="nu.xom.Document buildEnsureCML(java.io.InputStream)" class="org.xmlcml.cml.base.CMLBuilder" />
	<method signature="nu.xom.Element parseString(java.lang.String)" class="org.xmlcml.cml.base.CMLBuilder" />
	<class name="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.POVRayFormat" />
	<class name="org.openscience.jchempaint.renderer.elements.PathElement" />
	<method signature="void &lt;init&gt;(java.util.ArrayList,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.PathElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.PathElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.PathElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.PathElement" />
	<field name="points" class="org.openscience.jchempaint.renderer.elements.PathElement" />
	<class name="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMoleculeList cdkMoleculeSetToCMLList(org.openscience.cdk.interfaces.IMoleculeSet,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void setupCustomizers()" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void registerCustomizer(org.openscience.cdk.libio.cml.ICMLCustomizer)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionStep cdkReactionToCMLReactionStep(org.openscience.cdk.interfaces.IReaction,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void checkPrefix(org.xmlcml.cml.base.CMLElement)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionList cdkReactionSetToCMLReactionList(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionStep cdkReactionToCMLReactionStep(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMoleculeList cdkMoleculeSetToCMLList(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkMoleculeToCMLMolecule(org.openscience.cdk.interfaces.IMolecule,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkAtomContainerToCMLMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLCml cdkReactionSchemeToCMLReactionSchemeAndMoleculeList(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void map3DCoordsToCML(org.xmlcml.cml.element.CMLAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLAtom cdkAtomToCMLAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkCrystalToCMLMolecule(org.openscience.cdk.interfaces.ICrystal,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void &lt;init&gt;(boolean,java.lang.String)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkMonomerToCMLMolecule(org.openscience.cdk.interfaces.IMonomer,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkPDBPolymerToCMLMolecule(org.openscience.cdk.interfaces.IPDBPolymer,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkPDBPolymerToCMLMolecule(org.openscience.cdk.interfaces.IPDBPolymer)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkMoleculeToCMLMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLBond cdkBondToCMLBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionScheme cdkReactionSchemeToCMLReactionScheme(org.openscience.cdk.interfaces.IReactionScheme,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLList cdkChemSequenceToCMLList(org.openscience.cdk.interfaces.IChemSequence,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReaction cdkReactionToCMLReaction(org.openscience.cdk.interfaces.IReaction,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReaction cdkReactionToCMLReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkAtomContainerToCMLMolecule(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionScheme cdkReactionSchemeToCMLReactionScheme(org.openscience.cdk.interfaces.IReactionScheme)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void map2DCoordsToCML(org.xmlcml.cml.element.CMLAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLList cdkChemModelToCMLList(org.openscience.cdk.interfaces.IChemModel,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="boolean addAtomID(org.openscience.cdk.interfaces.IAtom,org.xmlcml.cml.element.CMLAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLList cdkChemModelToCMLList(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void mapFractionalCoordsToCML(org.xmlcml.cml.element.CMLAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLList cdkChemSequenceToCMLList(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="void writeProperties(org.openscience.cdk.interfaces.IChemObject,org.xmlcml.cml.base.CMLElement)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkCrystalToCMLMolecule(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLAtom cdkAtomToCMLAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLCml cdkChemFileToCMLList(org.openscience.cdk.interfaces.IChemFile,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLReactionList cdkReactionSetToCMLReactionList(org.openscience.cdk.interfaces.IReactionSet,boolean)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="boolean addDictRef(org.openscience.cdk.interfaces.IChemObject,org.xmlcml.cml.base.CMLElement)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLCml cdkChemFileToCMLList(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.libio.cml.Convertor" />
	<method signature="org.xmlcml.cml.element.CMLMolecule cdkMonomerToCMLMolecule(org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="CUSTOMIZERS_LIST" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="NS_CML" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="useCMLIDs" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="customizers" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="isRef" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="prefix" class="org.openscience.cdk.libio.cml.Convertor" />
	<field name="logger" class="org.openscience.cdk.libio.cml.Convertor" />
	<class name="org.xmlcml.cml.element.CMLTransitionState" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTransitionState" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTransitionState)" class="org.xmlcml.cml.element.CMLTransitionState" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTransitionState" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTransitionState" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTransitionState" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTransitionState" />
	<class name="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(nu.xom.Document)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(java.io.Reader)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(java.io.InputStream)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(javax.xml.transform.Source)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(nu.xom.Node)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void createInstance()" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="org.xmlcml.cml.base.CMLSchemaValidator getInstance()" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<method signature="void validateCML(org.w3c.dom.Node)" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<field name="instance" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<field name="SCHEMA_FILE" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<field name="schema" class="org.xmlcml.cml.base.CMLSchemaValidator" />
	<class name="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<method signature="double getDimValue(int)" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.RebondTool,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<field name="atom" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.RebondTool$TupleAtom" />
	<class name="org.xmlcml.cml.element.CMLOperator" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLOperator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLOperator)" class="org.xmlcml.cml.element.CMLOperator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLOperator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLOperator" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLOperator" />
	<class name="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<method signature="void setFontForZoom(double)" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<method signature="void makeFonts()" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<method signature="java.awt.Font getFont()" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<field name="fontSizeToFontMap" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<field name="currentFont" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<field name="minFontSize" class="org.openscience.jchempaint.renderer.font.AWTFontManager" />
	<class name="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="int get(int)" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<method signature="void add(int)" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<field name="array" class="org.openscience.cdk.qsar.result.IntegerArrayResult" />
	<class name="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MDLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.MDLFormat" />
	<class name="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="java.util.List getPeakOrGroupChildren()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="java.util.List getPeakDescendants()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="java.util.List getPeakChildren()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.xmlcml.cml.element.CMLPeakList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPeakList)" class="org.xmlcml.cml.element.CMLPeakList" />
	<field name="IDX" class="org.xmlcml.cml.element.CMLPeakList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPeakList" />
	<class name="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.io.PCCompoundASNReader)" class="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<field name="label" class="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<field name="this$0" class="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<field name="name" class="org.openscience.cdk.io.PCCompoundASNReader$URN" />
	<class name="org.xmlcml.cml.interfacex.HasDataType" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.interfacex.HasDataType" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.interfacex.HasDataType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.HasDataType" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.interfacex.HasDataType" />
	<class name="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule()" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void close()" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<field name="input" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<field name="builder" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<field name="parserHelper" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<field name="parser" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<field name="molecule" class="org.openscience.cdk.io.PCCompoundXMLReader" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.Token,int[][],java.lang.String[])" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="java.lang.String getMessage()" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<method signature="java.lang.String add_escapes(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<field name="expectedTokenSequences" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<field name="specialConstructor" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<field name="eol" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<field name="currentToken" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<field name="tokenImage" class="org.openscience.cdk.smiles.smarts.parser.ParseException" />
	<class name="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromSetAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromTypeAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getFromType()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLink)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setLinkType(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setHref(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getToType()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getHrefAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setFromSet(java.lang.String[])" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToContextAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setFrom(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getFrom()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setToSet(java.lang.String[])" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromContextAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setFromContext(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getLinkType()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToTypeAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLinkTypeAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFromAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setFromSet(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getFromContext()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String[] getFromSet()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getHref()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getTo()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getToContext()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToSetAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setFromType(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setToType(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setToContext(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setTo(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setToSet(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getToAttribute()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLink" />
	<method signature="java.lang.String[] getToSet()" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_fromcontext" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_linktype" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_totype" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_href" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_fromset" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_toset" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_tocontext" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_fromtype" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_from" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_to" class="org.xmlcml.cml.element.AbstractLink" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLink" />
	<class name="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$2" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$2" />
	<field name="$SwitchMap$org$openscience$jchempaint$renderer$elements$TextGroupElement$Position" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$2" />
	<field name="$SwitchMap$org$openscience$jchempaint$renderer$elements$path$Type" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$2" />
	<class name="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="java.lang.String getCommonDelimiter()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.element.CMLTableHeader createTableHeader()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="int getRowCount()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLArrayList)" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.element.CMLTableHeaderCell createTableHeaderCell(org.xmlcml.cml.element.CMLList)" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="java.util.List getArrays()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.element.CMLTableHeaderCell createTableHeaderCell(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="int getArraysCount()" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.element.CMLTableHeaderCell createTableHeaderCell(org.xmlcml.cml.interfacex.HasArraySize)" class="org.xmlcml.cml.element.CMLArrayList" />
	<method signature="org.xmlcml.cml.element.CMLTableContent createTableContent()" class="org.xmlcml.cml.element.CMLArrayList" />
	<class name="org.openscience.jchempaint.action.UndoAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.UndoAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.UndoAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.UndoAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.UndoAction" />
	<class name="org.openscience.cdk.qsar.result.IntegerResultType" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.IntegerResultType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.IntegerResultType" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.qsar.result.IntegerResultType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.IntegerResultType" />
	<class name="org.xmlcml.cml.element.CMLMatrix$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<method signature="org.xmlcml.cml.element.CMLMatrix$Type[] values()" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<method signature="org.xmlcml.cml.element.CMLMatrix$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="ROTATION_TRANSLATION43" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="value" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_SYMMETRIC_LT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="ROTATION_TRANSLATION32" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_ANTISYMMETRIC" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="DIAGONAL" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="HOMOGENEOUS33" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="LOWER_TRIANGULAR" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="HOMOGENEOUS44" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_ANTISYMMETRIC_LT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_SYMMETRIC" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="ROTATION22" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="RECTANGULAR" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="UPPER_TRIANGULAR" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="UPPER_TRIANGULAR_UT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="ROTATION33" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_SYMMETRIC_UT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="LOWER_TRIANGULAR_LT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="UNITARY" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="ROW_EIGENVECTORS" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="UNIT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<field name="SQUARE_ANTISYMMETRIC_UT" class="org.xmlcml.cml.element.CMLMatrix$Type" />
	<class name="org.openscience.jchempaint.JCPToolBar" />
	<method signature="javax.swing.JToolBar getToolbar(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,int)" class="org.openscience.jchempaint.JCPToolBar" />
	<method signature="java.awt.Component createToolbar(int,java.lang.String,org.openscience.jchempaint.JChemPaintPanel,int)" class="org.openscience.jchempaint.JCPToolBar" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.JCPToolBar" />
	<method signature="javax.swing.JButton createToolbarButton(java.lang.String,org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.JCPToolBar" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JCPToolBar" />
	<method signature="java.lang.String getToolbarResourceString(java.lang.String,java.lang.String)" class="org.openscience.jchempaint.JCPToolBar" />
	<field name="BUTTON_INACTIVE_COLOR" class="org.openscience.jchempaint.JCPToolBar" />
	<field name="logger" class="org.openscience.jchempaint.JCPToolBar" />
	<class name="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void initObjectArray()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void swap(int,int)" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void remove()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer makeResult()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void setAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="boolean isOdd(int)" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer next()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="void initBookkeeping()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="debug" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="i" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="objects" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="j" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="N" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="logger" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="debugCounter" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="atomContainer" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<field name="bookkeeping" class="org.openscience.cdk.graph.AtomContainerPermutor" />
	<class name="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMechanismComponent)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMechanismComponent" />
	<class name="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void jjtOpen()" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void jjtRemoveChild(int)" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="int jjtGetNumChildren()" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void jjtClose()" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void jjtAddChild(org.openscience.cdk.smiles.smarts.parser.Node,int)" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void jjtSetParent(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node jjtGetChild(int)" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node jjtGetParent()" class="org.openscience.cdk.smiles.smarts.parser.Node" />
	<class name="org.openscience.cdk.ElectronContainer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ElectronContainer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ElectronContainer" />
	<method signature="void setElectronCount(java.lang.Integer)" class="org.openscience.cdk.ElectronContainer" />
	<method signature="java.lang.Integer getElectronCount()" class="org.openscience.cdk.ElectronContainer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ElectronContainer" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ElectronContainer" />
	<field name="serialVersionUID" class="org.openscience.cdk.ElectronContainer" />
	<field name="electronCount" class="org.openscience.cdk.ElectronContainer" />
	<class name="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="java.util.Map getBondMap()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLAtomArray getAtomArray()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondByHash(java.lang.String)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondByAtomRefs2(java.lang.String[])" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="int size()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond removeChild(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond appendChild(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="java.util.Map getBondIdMap()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond addBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond removeBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void indexBondId(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void indexBonds()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond insertBond(org.xmlcml.cml.element.CMLBond,int)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBondArray makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void updateLigands()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBondArray)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondById(java.lang.String)" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="void detach()" class="org.xmlcml.cml.element.CMLBondArray" />
	<method signature="org.xmlcml.cml.element.CMLBond indexBondAndLigands(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondArray" />
	<field name="NS" class="org.xmlcml.cml.element.CMLBondArray" />
	<field name="bondMap" class="org.xmlcml.cml.element.CMLBondArray" />
	<field name="bondIdMap" class="org.xmlcml.cml.element.CMLBondArray" />
	<class name="org.openscience.cdk.formula.MolecularFormulaRange$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.formula.MolecularFormulaRange$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.formula.MolecularFormulaRange)" class="org.openscience.cdk.formula.MolecularFormulaRange$1" />
	<field name="this$0" class="org.openscience.cdk.formula.MolecularFormulaRange$1" />
	<class name="org.openscience.cdk.io.IChemObjectWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.IChemObjectWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.IChemObjectWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.IChemObjectWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.IChemObjectWriter" />
	<class name="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer$1)" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="org.openscience.cdk.interfaces.IAtom next()" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="void remove()" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<field name="pointer" class="org.openscience.cdk.AtomContainer$AtomIterator" />
	<class name="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<method signature="org.xmlcml.cml.base.CMLElement$FormalChargeControl[] values()" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<method signature="org.xmlcml.cml.base.CMLElement$FormalChargeControl valueOf(java.lang.String)" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<field name="DEFAULT" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<field name="NO_DEFAULT" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<field name="$VALUES" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<field name="defalt" class="org.xmlcml.cml.base.CMLElement$FormalChargeControl" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="void setHybridizationNumber(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="int getHybridizationNumber()" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<field name="hybridizationNumber" class="org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber" />
	<class name="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SMARTSFormat" />
	<class name="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void fireFrameRead()" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void setReaderMode(org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<method signature="void fireIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<field name="frameReadEvent" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<field name="mode" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<field name="listenerList" class="org.openscience.cdk.io.DefaultChemObjectReader" />
	<class name="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getNamespace()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNamespaceAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setHref(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractDictionary)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getHref()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLElements getEntryElements()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getDictionaryPrefix()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getHrefAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictionaryPrefixAttribute()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void addEntry(org.xmlcml.cml.element.AbstractEntry)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setDictionaryPrefix(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setNamespace(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractDictionary" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_namespace" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_dictionaryprefix" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_href" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractDictionary" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractDictionary" />
	<class name="org.openscience.jchempaint.controller.SelectSquareModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.SelectSquareModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.SelectSquareModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.SelectSquareModule" />
	<class name="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<method signature="void &lt;init&gt;(double,double,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<method signature="void &lt;init&gt;(double,double,double,boolean,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<method signature="void &lt;init&gt;(double,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<field name="radius" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<field name="color" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<field name="y" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<field name="fill" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<field name="x" class="org.openscience.jchempaint.renderer.elements.OvalElement" />
	<class name="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSpectatorList)" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getSpectatorMolecules(java.lang.String)" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<method signature="java.util.List getMolecules(org.xmlcml.cml.element.ReactionComponent$Type)" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSpectatorList" />
	<class name="org.openscience.cdk.graph.AtomContainerAtomPermutor" />
	<method signature="void initObjectArray()" class="org.openscience.cdk.graph.AtomContainerAtomPermutor" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.AtomContainerAtomPermutor" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer makeResult()" class="org.openscience.cdk.graph.AtomContainerAtomPermutor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.AtomContainerAtomPermutor" />
	<class name="org.xmlcml.euclid.Real2Range" />
	<method signature="org.xmlcml.euclid.RealRange getXRange()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="org.xmlcml.euclid.Real2Range plus(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void add(org.xmlcml.euclid.Axis$Axis2,org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="org.xmlcml.euclid.RealRange getYRange()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="org.xmlcml.euclid.Real2 getCentroid()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="boolean includes(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void add(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="boolean includes(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="org.xmlcml.euclid.Real2Range intersectionWith(org.xmlcml.euclid.Real2Range)" class="org.xmlcml.euclid.Real2Range" />
	<method signature="boolean isValid()" class="org.xmlcml.euclid.Real2Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealRange,org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.Real2Range" />
	<field name="yrange" class="org.xmlcml.euclid.Real2Range" />
	<field name="xrange" class="org.xmlcml.euclid.Real2Range" />
	<class name="org._3pq.jgrapht.Graph" />
	<method signature="boolean containsEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean removeAllVertices(java.util.Collection)" class="org._3pq.jgrapht.Graph" />
	<method signature="java.util.Set vertexSet()" class="org._3pq.jgrapht.Graph" />
	<method signature="org._3pq.jgrapht.Edge removeEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="java.util.List removeAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean removeAllEdges(java.util.Collection)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean containsVertex(java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean addVertex(java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean addAllEdges(java.util.Collection)" class="org._3pq.jgrapht.Graph" />
	<method signature="org._3pq.jgrapht.Edge addEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="java.util.Set edgeSet()" class="org._3pq.jgrapht.Graph" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean addAllVertices(java.util.Collection)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean addEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean removeEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.Graph" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean containsEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.Graph" />
	<method signature="boolean removeVertex(java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.Graph" />
	<method signature="org._3pq.jgrapht.EdgeFactory getEdgeFactory()" class="org._3pq.jgrapht.Graph" />
	<class name="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.INChIPlainTextFormat" />
	<class name="org._3pq.jgrapht.event.TraversalListener" />
	<method signature="void connectedComponentStarted(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListener" />
	<method signature="void edgeTraversed(org._3pq.jgrapht.event.EdgeTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListener" />
	<method signature="void connectedComponentFinished(org._3pq.jgrapht.event.ConnectedComponentTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListener" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.TraversalListener" />
	<method signature="void vertexTraversed(org._3pq.jgrapht.event.VertexTraversalEvent)" class="org._3pq.jgrapht.event.TraversalListener" />
	<class name="org.openscience.cdk.Association" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Association" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.Association" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Association" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Association" />
	<method signature="void setAtomAt(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.Association" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Association" />
	<method signature="java.lang.Integer getElectronCount()" class="org.openscience.cdk.Association" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Association" />
	<method signature="org.openscience.cdk.interfaces.IAtom[] getAtoms()" class="org.openscience.cdk.Association" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtomAt(int)" class="org.openscience.cdk.Association" />
	<method signature="int getAtomCount()" class="org.openscience.cdk.Association" />
	<field name="atomCount" class="org.openscience.cdk.Association" />
	<field name="atoms" class="org.openscience.cdk.Association" />
	<field name="serialVersionUID" class="org.openscience.cdk.Association" />
	<field name="electronCount" class="org.openscience.cdk.Association" />
	<class name="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="void translatePoints(int,javax.vecmath.Point3d[][],int,org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="javax.vecmath.Point3d[] getAllSurfacePoints()" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,double,int)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="double getTotalSurfaceArea()" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="double[] getAllSurfaceAreas()" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="javax.vecmath.Point3d[][] atomicSurfacePoints(org.openscience.cdk.geometry.surface.NeighborList,int,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.geometry.surface.Tessellate)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="double getSurfaceArea(int)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="javax.vecmath.Point3d[] getSurfacePoints(int)" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<method signature="void calculateSurface()" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="atoms" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="volumes" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="surf_points" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="tesslevel" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="areas" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="logger" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<field name="solvent_radius" class="org.openscience.cdk.geometry.surface.NumericalSurface" />
	<class name="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRingSet(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateBondElement(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond$Order,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.LineElement generateInnerElement(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IRing,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="boolean isStereoBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="void setOverrideBondWidth(double)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateRingElements(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IRing,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="void createLines(javax.vecmath.Point2d,javax.vecmath.Point2d,double,double,java.awt.Color,org.openscience.jchempaint.renderer.elements.ElementGroup)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateBond(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="void setOverrideColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateStereoElement(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="boolean bindsHydrogen(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="double[] generateDistanceData(javax.vecmath.Point2d,javax.vecmath.Point2d,double)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="java.awt.Color getColorForBond(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="boolean isSingle(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="double getWidthForBond(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateBondElement(org.openscience.cdk.interfaces.IBond,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<method signature="boolean isDouble(org.openscience.cdk.interfaces.IBond)" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<field name="ringSet" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<field name="overrideColor" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<field name="overrideBondWidth" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<field name="logger" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator" />
	<class name="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.AlchemyFormat" />
	<class name="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int compareByAtomicNumber(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 getPoint3(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void unsetPoint(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.cml.element.CMLAtomArray getAtomArray()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getHydrogenCount()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void transformCartesians(org.xmlcml.euclid.Transform3)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getFormalCharge(org.xmlcml.cml.base.CMLElement$FormalChargeControl)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean hasCloseContact(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void renameId(java.lang.String)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Vector3 getVector3(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Real2 getVector2(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 setPoint3(org.xmlcml.euclid.Point3,org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="double getDistance2(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void increaseXYZ3(double,double,double)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="double getSquaredDistanceTo(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void check()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean atomIsCompatible(java.util.List)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean isWithinRadiusSum(org.xmlcml.cml.element.CMLAtom,org.xmlcml.molutil.ChemicalElement$RadiusType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.cml.element.CMLAtom deleteAnyLigandHydrogenAtom()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void clearLigandInfo()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 getXYZFract()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void increaseXY2(double,double)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 getXYZ3()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="double getDistanceTo(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getValenceElectrons()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void transformFractionals(org.xmlcml.euclid.Transform3)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="java.util.List filter(java.util.List,java.util.Set)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void increaseXYZFract(double,double,double)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="java.util.List getLigandHydrogenAtoms()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 get2DPoint3()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean replaceAtomRefs(java.lang.String[],org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,int)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getFormalCharge()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Real2 getXY2()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Vector3 get2DCrossProduct(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="java.util.List getLigandAtoms()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void setXYZ3(org.xmlcml.euclid.Point3)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void setXYZFract(org.xmlcml.euclid.Point3)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void addLigandBond(org.xmlcml.cml.element.CMLBond,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void roundCoords(double,org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void setXY2(org.xmlcml.euclid.Real2)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void transform(org.xmlcml.euclid.Transform2)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,org.xmlcml.molutil.ChemicalElement$AS)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.cml.element.CMLAtom[] getClockwiseLigands(org.xmlcml.cml.element.CMLAtom[])" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void unsetXYZ3()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean hasCoordinates(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getCommonElementSerialNumber(java.lang.String)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Point3 getFractCoord()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void debugAtom(java.lang.String,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.euclid.Vector3 get3DCrossProduct(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;init&gt;(java.lang.String,org.xmlcml.molutil.ChemicalElement)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void clearLigandInfo(org.xmlcml.cml.element.CMLBond,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="org.xmlcml.molutil.ChemicalElement getChemicalElement()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="int getAtomicNumber()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="java.util.List getLigandBonds()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void unsetXYZFract()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void unsetXY2()" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="boolean hasElement(java.lang.String)" class="org.xmlcml.cml.element.CMLAtom" />
	<method signature="void detach()" class="org.xmlcml.cml.element.CMLAtom" />
	<field name="ligandAtoms" class="org.xmlcml.cml.element.CMLAtom" />
	<field name="ligandBonds" class="org.xmlcml.cml.element.CMLAtom" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtom" />
	<field name="logger" class="org.xmlcml.cml.element.CMLAtom" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<method signature="int getTC(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalConnectionAtom" />
	<class name="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void setShape(java.lang.String)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLElements getListElements()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="java.lang.String getShape()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getShapeAttribute()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void addList(org.xmlcml.cml.element.AbstractList)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractArrayList)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractArrayList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="_att_shape" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractArrayList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractArrayList" />
	<class name="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<method signature="void &lt;init&gt;(double,double,java.lang.String,java.lang.Integer,java.lang.Integer,int,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<field name="formalCharge" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<field name="alignment" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<field name="hydrogenCount" class="org.openscience.jchempaint.renderer.elements.AtomSymbolElement" />
	<class name="org.openscience.jchempaint.action.RedoAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.RedoAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.RedoAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.RedoAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.RedoAction" />
	<class name="org.openscience.cdk.MoleculeSet" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="org.openscience.cdk.interfaces.IMolecule getMolecule(int)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.MoleculeSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.MoleculeSet" />
	<method signature="java.lang.Iterable molecules()" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void addMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.MoleculeSet" />
	<method signature="void setMolecules(org.openscience.cdk.interfaces.IMolecule[])" class="org.openscience.cdk.MoleculeSet" />
	<method signature="int getMoleculeCount()" class="org.openscience.cdk.MoleculeSet" />
	<field name="serialVersionUID" class="org.openscience.cdk.MoleculeSet" />
	<class name="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="org.xmlcml.cml.base.CMLElements getKpointElements()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void addKpoint(org.xmlcml.cml.element.AbstractKpoint)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractKpointList)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractKpointList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractKpointList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractKpointList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractKpointList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractKpointList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractKpointList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractKpointList" />
	<class name="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Polar plus(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="double getR()" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Polar divideBy(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="double getY()" class="org.xmlcml.euclid.Polar" />
	<method signature="void subtract()" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;init&gt;(double,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Polar" />
	<method signature="double getX()" class="org.xmlcml.euclid.Polar" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Complex)" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Polar subtract(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Real2 getXY()" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Angle getTheta()" class="org.xmlcml.euclid.Polar" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Polar multiplyBy(org.xmlcml.euclid.Polar)" class="org.xmlcml.euclid.Polar" />
	<method signature="org.xmlcml.euclid.Polar multiplyBy(double)" class="org.xmlcml.euclid.Polar" />
	<field name="r" class="org.xmlcml.euclid.Polar" />
	<field name="theta" class="org.xmlcml.euclid.Polar" />
	<class name="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IBond getClosestBond(int,int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IBond getClosestBond(double,double,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point2d get2DCentreOfMass(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void scaleMolecule(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean has2DCoordinates(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point2d get2DCenter(java.lang.Iterable)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getBondLengthAverage3D(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getAllAtomRMSD(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.Map,boolean)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void translate2D(org.openscience.cdk.interfaces.IAtomContainer,double,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void rotate(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point3d,javax.vecmath.Point3d,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void scaleMolecule(org.openscience.cdk.interfaces.IAtomContainer,java.awt.Dimension,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point2d get2DCenter(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="java.util.List findClosestInSpace(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double[] distanceCalculator(double[],double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getBondLengthRMSD(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.Map,boolean)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void rotate(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean has2DCoordinates(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point2d get2DCenter(java.util.Iterator)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="int[] getBondCoordinates(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void center(org.openscience.cdk.interfaces.IAtomContainer,java.awt.Dimension)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean has2DCoordinates(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="int has2DCoordinatesNew(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean has3DCoordinates(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getAngle(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void normalize(javax.vecmath.Point3d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getScaleFactor(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void sortBy2DDistance(org.openscience.cdk.interfaces.IAtom[],javax.vecmath.Point2d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getHeavyAtomRMSD(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.Map,boolean,boolean)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getAngle(double,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getBondLengthAverage(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="int getBestAlignmentForLabelXY(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getBondLengthAverage(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getAngleRMSD(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.Map)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point2d get2DCenter(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void translate2D(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Vector2d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean checkAtomMapping(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,int,int)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(double,double,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="java.awt.geom.Rectangle2D shiftReactionVertical(org.openscience.cdk.interfaces.IReaction,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point3d get3DCenter(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="java.awt.geom.Rectangle2D shiftContainer(org.openscience.cdk.interfaces.IAtomContainer,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer setVisitedFlagsToFalse(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="java.util.Map mapAtomsOfAlignedStructures(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,double,java.util.Map)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="int[] distanceCalculator(int[],double)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getNormalizationFactor(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="int getBestAlignmentForLabel(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="org.openscience.cdk.interfaces.IAtom getClosestAtom(int,int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="boolean has3DCoordinates(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double getLength2D(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void translateAllPositive(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="java.awt.Dimension get2DDimension(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void getLargestAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="double[] getMinMax(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Vector2d calculatePerpendicularUnitVector(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="javax.vecmath.Point3d get3DCentreOfMass(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void translate2DCenterTo(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<method signature="void translate2DCentreOfMassTo(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Point2d)" class="org.openscience.cdk.geometry.GeometryTools" />
	<field name="logger" class="org.openscience.cdk.geometry.GeometryTools" />
	<class name="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<field name="isotopeGe" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<field name="pattern" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<field name="toleranceMass" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<field name="logger" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<field name="is" class="org.openscience.cdk.formula.rules.IsotopePatternRule" />
	<class name="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="java.util.BitSet getForbidden()" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="void setRMap(org.openscience.cdk.isomorphism.mcss.RMap)" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="java.util.BitSet getExtension()" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="org.openscience.cdk.isomorphism.mcss.RMap getRMap()" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="void setForbidden(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="void setExtension(java.util.BitSet)" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<method signature="void &lt;init&gt;(int,int)" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<field name="extension" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<field name="forbidden" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<field name="rMap" class="org.openscience.cdk.isomorphism.mcss.RNode" />
	<class name="org.xmlcml.euclid.RealRange" />
	<method signature="void normalize()" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getMin()" class="org.xmlcml.euclid.RealRange" />
	<method signature="org.xmlcml.euclid.RealRange intersectionWith(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="boolean contains(double)" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getMax()" class="org.xmlcml.euclid.RealRange" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="void add(double)" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getMidPoint()" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealRange" />
	<method signature="boolean includes(double)" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getRange()" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;init&gt;(double,double,boolean)" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getRandomVariate()" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.RealRange" />
	<method signature="void &lt;init&gt;(double,double)" class="org.xmlcml.euclid.RealRange" />
	<method signature="double getScaleTo(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="boolean isValid()" class="org.xmlcml.euclid.RealRange" />
	<method signature="org.xmlcml.euclid.RealRange plus(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<method signature="void setRange(double,double)" class="org.xmlcml.euclid.RealRange" />
	<method signature="boolean includes(org.xmlcml.euclid.RealRange)" class="org.xmlcml.euclid.RealRange" />
	<field name="minval" class="org.xmlcml.euclid.RealRange" />
	<field name="maxval" class="org.xmlcml.euclid.RealRange" />
	<class name="org.openscience.cdk.io.iterator.IIteratingChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.IIteratingChemObjectReader" />
	<class name="org.openscience.cdk.io.CMLWriter$1" />
	<method signature="void write(int)" class="org.openscience.cdk.io.CMLWriter$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.io.CMLWriter)" class="org.openscience.cdk.io.CMLWriter$1" />
	<field name="this$0" class="org.openscience.cdk.io.CMLWriter$1" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond" />
	<class name="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="boolean nodeCreated()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node rootNode()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void closeNodeScope(org.openscience.cdk.smiles.smarts.parser.Node,int)" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void reset()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void clearNodeScope(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void pushNode(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void closeNodeScope(org.openscience.cdk.smiles.smarts.parser.Node,boolean)" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node popNode()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Node peekNode()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void openNodeScope(org.openscience.cdk.smiles.smarts.parser.Node)" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<method signature="int nodeArity()" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<field name="mk" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<field name="node_created" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<field name="sp" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<field name="marks" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<field name="nodes" class="org.openscience.cdk.smiles.smarts.parser.JJTSMARTSParserState" />
	<class name="org._3pq.jgrapht.edge.EdgeFactories$UndirectedEdgeFactory" />
	<method signature="org._3pq.jgrapht.Edge createEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.edge.EdgeFactories$UndirectedEdgeFactory" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.edge.EdgeFactories$UndirectedEdgeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.edge.EdgeFactories$UndirectedEdgeFactory" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.edge.EdgeFactories$UndirectedEdgeFactory" />
	<class name="org.xmlcml.euclid.Transform3$Type" />
	<method signature="org.xmlcml.euclid.Transform3$Type[] values()" class="org.xmlcml.euclid.Transform3$Type" />
	<method signature="org.xmlcml.euclid.Transform3$Type valueOf(java.lang.String)" class="org.xmlcml.euclid.Transform3$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Transform3$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int,java.lang.String)" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ROT_TRANS_AXIAL_SCALE" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="i" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ROT_ORIG" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="$VALUES" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ROT_TRANS_SCALE" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ROT_TRANS" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ROT_TRANS_SCALE_PERSP" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="s" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="NULL" class="org.xmlcml.euclid.Transform3$Type" />
	<field name="ANY" class="org.xmlcml.euclid.Transform3$Type" />
	<class name="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="void setAtoms(org.openscience.cdk.interfaces.IAtom[])" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="void setAtomAt(org.openscience.cdk.interfaces.IAtom,int)" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.OrderQueryBond" />
	<class name="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void setMax(int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;init&gt;(int[])" class="org.xmlcml.euclid.IntSet" />
	<method signature="org.xmlcml.euclid.IntSet getSubscriptedIntSet(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="org.xmlcml.euclid.IntSet notIn(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void debug()" class="org.xmlcml.euclid.IntSet" />
	<method signature="org.xmlcml.euclid.IntArray getIntArray()" class="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void addRange(org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.IntSet" />
	<method signature="java.util.List getPermutations(java.lang.Integer)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void addSet(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="int size()" class="org.xmlcml.euclid.IntSet" />
	<method signature="java.util.List getPermutations0(java.lang.Integer)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="org.xmlcml.euclid.IntSet intersectionWith(org.xmlcml.euclid.IntSet)" class="org.xmlcml.euclid.IntSet" />
	<method signature="boolean addElement(int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void setElementAt(int,int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntSet" />
	<method signature="java.util.List copy(java.util.List)" class="org.xmlcml.euclid.IntSet" />
	<method signature="void sortAscending()" class="org.xmlcml.euclid.IntSet" />
	<method signature="void initialise(int,int,boolean)" class="org.xmlcml.euclid.IntSet" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.IntSet" />
	<method signature="void setMin(int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="org.xmlcml.euclid.IntSet inverseMap()" class="org.xmlcml.euclid.IntSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.IntSet" />
	<method signature="boolean contains(int)" class="org.xmlcml.euclid.IntSet" />
	<method signature="int[] getElements()" class="org.xmlcml.euclid.IntSet" />
	<method signature="int elementAt(int)" class="org.xmlcml.euclid.IntSet" />
	<field name="integerMap" class="org.xmlcml.euclid.IntSet" />
	<field name="min" class="org.xmlcml.euclid.IntSet" />
	<field name="set" class="org.xmlcml.euclid.IntSet" />
	<field name="nelem" class="org.xmlcml.euclid.IntSet" />
	<field name="logger" class="org.xmlcml.euclid.IntSet" />
	<field name="max" class="org.xmlcml.euclid.IntSet" />
	<field name="array" class="org.xmlcml.euclid.IntSet" />
	<class name="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ADFFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ADFFormat" />
	<class name="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void addAtomicBasisFunction(org.xmlcml.cml.element.AbstractAtomicBasisFunction)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomicBasisFunctionElements()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractBasisSet)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractBasisSet" />
	<class name="org.openscience.cdk.io.CIFReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.CIFReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="java.lang.String extractFirstLetters(java.lang.String)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void processLoopBlock()" class="org.openscience.cdk.io.CIFReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void close()" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void processCellParameter(java.lang.String,java.lang.String)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void processAtomLoopBlock(java.lang.String)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.CIFReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void possiblySetCellParams(double,double,double,double,double,double)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="double parseIntoDouble(java.lang.String)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void skipUntilEmptyOrCommentLine(java.lang.String)" class="org.openscience.cdk.io.CIFReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.CIFReader" />
	<field name="crystal" class="org.openscience.cdk.io.CIFReader" />
	<field name="input" class="org.openscience.cdk.io.CIFReader" />
	<field name="gamma" class="org.openscience.cdk.io.CIFReader" />
	<field name="a" class="org.openscience.cdk.io.CIFReader" />
	<field name="c" class="org.openscience.cdk.io.CIFReader" />
	<field name="beta" class="org.openscience.cdk.io.CIFReader" />
	<field name="logger" class="org.openscience.cdk.io.CIFReader" />
	<field name="b" class="org.openscience.cdk.io.CIFReader" />
	<field name="alpha" class="org.openscience.cdk.io.CIFReader" />
	<class name="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemSubstancesXMLFormat" />
	<class name="org.openscience.cdk.CDKConstants" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.CDKConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.CDKConstants" />
	<field name="IS_HYDROGENBOND_ACCEPTOR" class="org.openscience.cdk.CDKConstants" />
	<field name="INCHI" class="org.openscience.cdk.CDKConstants" />
	<field name="AUTONOMNAME" class="org.openscience.cdk.CDKConstants" />
	<field name="STEREO_ATOM_PARITY_PLUS" class="org.openscience.cdk.CDKConstants" />
	<field name="PI_BOND_COUNT" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3D5" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_DEUTERIUM" class="org.openscience.cdk.CDKConstants" />
	<field name="ISPLACED" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_FLUORINE" class="org.openscience.cdk.CDKConstants" />
	<field name="SPHERICAL_MATCHER" class="org.openscience.cdk.CDKConstants" />
	<field name="ISALIPHATIC" class="org.openscience.cdk.CDKConstants" />
	<field name="CHEMICAL_GROUP_CONSTANT" class="org.openscience.cdk.CDKConstants" />
	<field name="STEREO_ATOM_PARITY_MINUS" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_UNSET" class="org.openscience.cdk.CDKConstants" />
	<field name="BONDORDER_TRIPLE" class="org.openscience.cdk.CDKConstants" />
	<field name="LONE_PAIR_COUNT" class="org.openscience.cdk.CDKConstants" />
	<field name="PART_OF_RING_OF_SIZE" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_PHOSPORUS" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3D4" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3D1" class="org.openscience.cdk.CDKConstants" />
	<field name="TITLE" class="org.openscience.cdk.CDKConstants" />
	<field name="MAX_POINTER_INDEX" class="org.openscience.cdk.CDKConstants" />
	<field name="RING_SIZES" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3D2" class="org.openscience.cdk.CDKConstants" />
	<field name="ISNOTINRING" class="org.openscience.cdk.CDKConstants" />
	<field name="DESCRIPTION" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_HYDROGEN" class="org.openscience.cdk.CDKConstants" />
	<field name="IS_HYDROGENBOND_DONOR" class="org.openscience.cdk.CDKConstants" />
	<field name="BONDORDER_SINGLE" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP3D3" class="org.openscience.cdk.CDKConstants" />
	<field name="SMALLEST_RINGS" class="org.openscience.cdk.CDKConstants" />
	<field name="ALL_RINGS" class="org.openscience.cdk.CDKConstants" />
	<field name="UNSET" class="org.openscience.cdk.CDKConstants" />
	<field name="ATOM_ATOM_MAPPING" class="org.openscience.cdk.CDKConstants" />
	<field name="SMILES" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP2" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_NITROGEN" class="org.openscience.cdk.CDKConstants" />
	<field name="COMMENT" class="org.openscience.cdk.CDKConstants" />
	<field name="TOTAL_H_COUNT" class="org.openscience.cdk.CDKConstants" />
	<field name="HYBRIDIZATION_SP1" class="org.openscience.cdk.CDKConstants" />
	<field name="ANNOTATIONS" class="org.openscience.cdk.CDKConstants" />
	<field name="REACTIVE_CENTER" class="org.openscience.cdk.CDKConstants" />
	<field name="STEREO_ATOM_PARITY_UNDEFINED" class="org.openscience.cdk.CDKConstants" />
	<field name="IS_TYPEABLE" class="org.openscience.cdk.CDKConstants" />
	<field name="DUMMY_POINTER" class="org.openscience.cdk.CDKConstants" />
	<field name="ISCONJUGATED" class="org.openscience.cdk.CDKConstants" />
	<field name="ESSENTIAL_RINGS" class="org.openscience.cdk.CDKConstants" />
	<field name="ISINRING" class="org.openscience.cdk.CDKConstants" />
	<field name="VISITED" class="org.openscience.cdk.CDKConstants" />
	<field name="TOTAL_CONNECTIONS" class="org.openscience.cdk.CDKConstants" />
	<field name="MAX_FLAG_INDEX" class="org.openscience.cdk.CDKConstants" />
	<field name="CASRN" class="org.openscience.cdk.CDKConstants" />
	<field name="ISAROMATIC" class="org.openscience.cdk.CDKConstants" />
	<field name="RELEVANT_RINGS" class="org.openscience.cdk.CDKConstants" />
	<field name="BONDORDER_DOUBLE" class="org.openscience.cdk.CDKConstants" />
	<field name="NAMES" class="org.openscience.cdk.CDKConstants" />
	<field name="MAPPED" class="org.openscience.cdk.CDKConstants" />
	<field name="RING_CONNECTIONS" class="org.openscience.cdk.CDKConstants" />
	<field name="ISOTROPIC_SHIELDING" class="org.openscience.cdk.CDKConstants" />
	<field name="BEILSTEINRN" class="org.openscience.cdk.CDKConstants" />
	<field name="NMRSHIFT_CARBON" class="org.openscience.cdk.CDKConstants" />
	<field name="BONDORDER_QUADRUPLE" class="org.openscience.cdk.CDKConstants" />
	<field name="FORMULA" class="org.openscience.cdk.CDKConstants" />
	<field name="REMARK" class="org.openscience.cdk.CDKConstants" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="void setSymbol(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="java.lang.String getSymbol()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<field name="symbol" class="org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="void setGroupNumber(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="int getGroupNumber()" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<field name="groupNumber" class="org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber" />
	<class name="org.openscience.cdk.io.IChemObjectReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.IChemObjectReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.IChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.IChemObjectReader" />
	<method signature="void setReaderMode(org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.IChemObjectReader" />
	<class name="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void addChild(java.lang.String,org.openscience.jchempaint.renderer.elements.TextGroupElement$Position)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void &lt;init&gt;(double,double,java.lang.String,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void &lt;init&gt;(double,double,java.lang.String,java.awt.Color,java.awt.Color)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void addChild(java.lang.String,java.lang.String,org.openscience.jchempaint.renderer.elements.TextGroupElement$Position)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<method signature="void accept(org.openscience.jchempaint.renderer.elements.IRenderingVisitor)" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<field name="isNotTypeableUnderlined" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<field name="notTypeableUnderlineColor" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<field name="children" class="org.openscience.jchempaint.renderer.elements.TextGroupElement" />
	<class name="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintMenuHelper,javax.swing.JComponent,org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<method signature="void menuDeselected(javax.swing.event.MenuEvent)" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<method signature="void menuCanceled(javax.swing.event.MenuEvent)" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<method signature="void menuSelected(javax.swing.event.MenuEvent)" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<field name="val$jcpPanel" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<field name="this$0" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<field name="val$menu" class="org.openscience.jchempaint.JChemPaintMenuHelper$1" />
	<class name="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="java.util.List getABFList(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLBasisSet$Basis)" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomicBasisFunction)" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="void &lt;init&gt;(int,int,int,java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtomicBasisFunction" />
	<class name="org.xmlcml.euclid.RealArray$Filter" />
	<method signature="org.xmlcml.euclid.RealArray$Filter valueOf(java.lang.String)" class="org.xmlcml.euclid.RealArray$Filter" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.euclid.RealArray$Filter" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.RealArray$Filter" />
	<method signature="org.xmlcml.euclid.RealArray$Filter[] values()" class="org.xmlcml.euclid.RealArray$Filter" />
	<field name="string" class="org.xmlcml.euclid.RealArray$Filter" />
	<field name="GAUSSIAN_FIRST_DERIVATIVE" class="org.xmlcml.euclid.RealArray$Filter" />
	<field name="$VALUES" class="org.xmlcml.euclid.RealArray$Filter" />
	<field name="GAUSSIAN" class="org.xmlcml.euclid.RealArray$Filter" />
	<field name="GAUSSIAN_SECOND_DERIVATIVE" class="org.xmlcml.euclid.RealArray$Filter" />
	<class name="org.openscience.cdk.exception.CDKException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.CDKException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.CDKException" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="org.openscience.cdk.exception.CDKException" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.CDKException" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.isomorphism.matchers.IQueryAtom,org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.SMARTSBond" />
	<class name="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setMin(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="double getErrorValue()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setErrorValue(double)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setMax(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setErrorValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getMin()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLength)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="double getXMLContent()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getMax()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefs2Attribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String[] getAtomRefs2()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setAtomRefs2(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setXMLContent(double)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="void setAtomRefs2(java.lang.String[])" class="org.xmlcml.cml.element.AbstractLength" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_min" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_max" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_errorvalue" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_atomrefs2" class="org.xmlcml.cml.element.AbstractLength" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLength" />
	<class name="org.xmlcml.euclid.Int2" />
	<method signature="org.xmlcml.euclid.Int2 subtract(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="int getX()" class="org.xmlcml.euclid.Int2" />
	<method signature="int getY()" class="org.xmlcml.euclid.Int2" />
	<method signature="void sortDescending()" class="org.xmlcml.euclid.Int2" />
	<method signature="void negative()" class="org.xmlcml.euclid.Int2" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Int2" />
	<method signature="void setY(int)" class="org.xmlcml.euclid.Int2" />
	<method signature="int dotProduct(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="void sortAscending()" class="org.xmlcml.euclid.Int2" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Int2" />
	<method signature="org.xmlcml.euclid.Int2 multiplyBy(int)" class="org.xmlcml.euclid.Int2" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Int2" />
	<method signature="org.xmlcml.euclid.Int2 plus(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="void clear()" class="org.xmlcml.euclid.Int2" />
	<method signature="org.xmlcml.euclid.Int2 getMidPoint(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="void setX(int)" class="org.xmlcml.euclid.Int2" />
	<method signature="int elementAt(int)" class="org.xmlcml.euclid.Int2" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.Int2" />
	<method signature="void swap()" class="org.xmlcml.euclid.Int2" />
	<field name="y" class="org.xmlcml.euclid.Int2" />
	<field name="x" class="org.xmlcml.euclid.Int2" />
	<class name="org.xmlcml.cml.element.CMLMoleculeList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMoleculeList)" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<field name="IDX" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMoleculeList" />
	<class name="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="int getIntegerValue()" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="org.xmlcml.cml.element.CMLAtom[] getAtomRefs4(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="boolean isZero()" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="java.lang.String[] createAtomRefs4(java.util.List)" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="void rearrangeAtomRefs4(java.lang.String[])" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="void setAtomRefs4(org.xmlcml.cml.element.CMLAtom[])" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomParity)" class="org.xmlcml.cml.element.CMLAtomParity" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="PLANARITYLIMIT" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="MINRAD" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="THREEDIM" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="minChiralDeterminant" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="NS" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="EPSILON" class="org.xmlcml.cml.element.CMLAtomParity" />
	<field name="TWODIM" class="org.xmlcml.cml.element.CMLAtomParity" />
	<class name="org.openscience.cdk.qsar.result.DoubleResult" />
	<method signature="void &lt;init&gt;(double)" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<method signature="double doubleValue()" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<field name="value" class="org.openscience.cdk.qsar.result.DoubleResult" />
	<class name="org.openscience.cdk.AtomContainerSet$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainerSet$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainerSet)" class="org.openscience.cdk.AtomContainerSet$1" />
	<field name="this$0" class="org.openscience.cdk.AtomContainerSet$1" />
	<class name="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void add(org.openscience.cdk.interfaces.IMolecularFormulaSet)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void removeMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void setCharge(java.lang.Integer)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.util.List isotopesList()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="int getIsotopeCount(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.lang.Iterable molecularFormulas()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="boolean isTheSame(org.openscience.cdk.interfaces.IIsotope,org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void removeMolecularFormula(int)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.lang.Integer getCharge()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(int)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="int size()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.lang.Iterable isotopes()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void addMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="int getIsotopeCount()" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="java.util.List access$000(org.openscience.cdk.formula.AdductFormula)" class="org.openscience.cdk.formula.AdductFormula" />
	<method signature="void removeAllMolecularFormulas()" class="org.openscience.cdk.formula.AdductFormula" />
	<field name="components" class="org.openscience.cdk.formula.AdductFormula" />
	<field name="serialVersionUID" class="org.openscience.cdk.formula.AdductFormula" />
	<class name="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractCml)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFileIdAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getVersionAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setVersion(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getVersion()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getFileId()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setFileId(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_version" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_fileid" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractCml" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractCml" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom" />
	<class name="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="void setNaturalAbundance(java.lang.Double)" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="void setExactMass(java.lang.Double)" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="java.lang.Integer getMassNumber()" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="java.lang.Double getExactMass()" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="java.lang.Double getNaturalAbundance()" class="org.openscience.cdk.interfaces.IIsotope" />
	<method signature="void setMassNumber(java.lang.Integer)" class="org.openscience.cdk.interfaces.IIsotope" />
	<class name="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void setChild(org.xmlcml.cml.interfacex.HasDataType)" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void &lt;init&gt;(java.lang.String,double,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void canonicalize()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="java.util.List getStringValues()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="double getDouble()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="org.xmlcml.cml.interfacex.HasDataType getChild()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="int getInt()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="org.xmlcml.cml.element.CMLProperty getProperty(org.xmlcml.cml.base.CMLElement,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLProperty)" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="int[] getInts()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="double[] getDoubles()" class="org.xmlcml.cml.element.CMLProperty" />
	<method signature="org.xmlcml.cml.element.CMLPropertyList getPropertyList(org.xmlcml.cml.base.CMLElement,java.lang.String)" class="org.xmlcml.cml.element.CMLProperty" />
	<field name="child" class="org.xmlcml.cml.element.CMLProperty" />
	<field name="NS" class="org.xmlcml.cml.element.CMLProperty" />
	<class name="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian94Format" />
	<class name="org.openscience.jchempaint.renderer.generators.BasicBondGenerator$1" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator$1" />
	<field name="$SwitchMap$org$openscience$cdk$interfaces$IBond$Order" class="org.openscience.jchempaint.renderer.generators.BasicBondGenerator$1" />
	<class name="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeBicycloRings()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyrazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="void configureAtoms(org.openscience.cdk.Molecule)" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeAlkane(int)" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyrroleAnion()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeTetrazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeOxazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeCyclohexene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeFusedRings()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeQuinone()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeIsoxazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeThiadiazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePropylCycloPropane()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule make123Triazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule make4x3CondensedRings()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePiperidine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeSteran()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeSpiroRings()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyridine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeBenzene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeCyclobutadiene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeDiamantane()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.interfaces.IMolecule makeAdenine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeIsothiazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeCyclohexane()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyrimidine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeTetrahydropyran()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeTriazine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeSingleRing()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeMethylDecaline()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeEthylCyclohexane()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyridineOxide()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeImidazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeEthylPropylPhenantren()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeAzulene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeOxadiazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePhenylEthylBenzene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeBranchedAliphatic()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeAlphaPinene()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule make124Triazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeThiazole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeCyclobutane()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeIndole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makeBiphenyl()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.interfaces.IMolecule loadMolecule(java.lang.String)" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyridazine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePyrrole()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<method signature="org.openscience.cdk.Molecule makePhenylAmine()" class="org.openscience.cdk.templates.MoleculeFactory" />
	<field name="logger" class="org.openscience.cdk.templates.MoleculeFactory" />
	<class name="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIMaxExclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element createList()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDMaxInclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setPattern(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDMaxExclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getDescription()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createMinMaxAndEnumerations()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String listDataType()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDMinExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createPattern()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element getSimpleType()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMaxExclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setBase(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createEnumerations()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDMaxExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setUnion(nu.xom.Element)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getBase()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(boolean[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setSummary(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIsList(boolean)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void init()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkListLength(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String toString()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getFullDescription()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int[] getIEnumerationValues()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMaxInclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String[] getStringEnumeration()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkEnumeration(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDEnumerationValues(double[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getSummary()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkEnumeration(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getPattern()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int[] getIntEnumeration()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMinExclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createDocumentation()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDescription(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIntMaxInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(boolean)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDMinInclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getNormalizedValue(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setListLength(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(int[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDoubleMaxExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setRestriction(nu.xom.Element)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(double[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String[] getSEnumerationValues()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIEnumerationValues(int[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIntMinInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element getUnion()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDoubleMinInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMinInclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkMinMax(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setSimpleType(nu.xom.Element)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIMaxInclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkPattern(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setEnumeration(double[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setList(nu.xom.Element)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMaxInclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double[] getDEnumerationValues()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setEnumeration(java.lang.String[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setSEnumerationValues(java.lang.String[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMinExclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="org.xmlcml.cml.base.CMLType[] getSubTypes()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String createBase()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int compareTo(org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIMinExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIMinInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIntMaxExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void &lt;init&gt;(nu.xom.Element)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDoubleMinExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDoubleMaxInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element createUnion()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="boolean getIsList()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDMinInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIMinInclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getListLength()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element getRestriction()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setEnumeration(int[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkMinMax(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setSubTypes(org.xmlcml.cml.base.CMLType[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIMaxInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setDMinExclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setJavaType(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIMaxExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="int getIntMinExclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createLength()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double getDMaxInclusive()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.CMLType)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(java.lang.String[])" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMinInclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="double[] getDoubleEnumeration()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkEnumeration(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void checkValue(java.lang.String)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void createMinMax()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setList(boolean)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setIMinExclusive(int)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element getList()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="nu.xom.Element createRestriction()" class="org.xmlcml.cml.base.CMLType" />
	<method signature="void setMaxExclusive(double)" class="org.xmlcml.cml.base.CMLType" />
	<method signature="java.lang.String createJavaType()" class="org.xmlcml.cml.base.CMLType" />
	<field name="subTypes" class="org.xmlcml.cml.base.CMLType" />
	<field name="dMaxInclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="restriction" class="org.xmlcml.cml.base.CMLType" />
	<field name="id" class="org.xmlcml.cml.base.CMLType" />
	<field name="base" class="org.xmlcml.cml.base.CMLType" />
	<field name="dEnumerationValues" class="org.xmlcml.cml.base.CMLType" />
	<field name="simpleType" class="org.xmlcml.cml.base.CMLType" />
	<field name="iMaxExclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="dMaxExclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="iMinExclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="name" class="org.xmlcml.cml.base.CMLType" />
	<field name="sEnumerationValues" class="org.xmlcml.cml.base.CMLType" />
	<field name="iMaxInclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="iEnumerationValues" class="org.xmlcml.cml.base.CMLType" />
	<field name="list" class="org.xmlcml.cml.base.CMLType" />
	<field name="summary" class="org.xmlcml.cml.base.CMLType" />
	<field name="javaType" class="org.xmlcml.cml.base.CMLType" />
	<field name="dMinExclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="listLength" class="org.xmlcml.cml.base.CMLType" />
	<field name="dMinInclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="iMinInclusive" class="org.xmlcml.cml.base.CMLType" />
	<field name="NO_BASE" class="org.xmlcml.cml.base.CMLType" />
	<field name="description" class="org.xmlcml.cml.base.CMLType" />
	<field name="isList" class="org.xmlcml.cml.base.CMLType" />
	<field name="pattern" class="org.xmlcml.cml.base.CMLType" />
	<field name="union" class="org.xmlcml.cml.base.CMLType" />
	<class name="org.xmlcml.cml.element.CMLKpoint" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLKpoint" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLKpoint)" class="org.xmlcml.cml.element.CMLKpoint" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLKpoint" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLKpoint" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLKpoint" />
	<field name="NS" class="org.xmlcml.cml.element.CMLKpoint" />
	<class name="org.openscience.cdk.exception.InvalidSmilesException" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.Exception)" class="org.openscience.cdk.exception.InvalidSmilesException" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.exception.InvalidSmilesException" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.exception.InvalidSmilesException" />
	<field name="serialVersionUID" class="org.openscience.cdk.exception.InvalidSmilesException" />
	<class name="org.openscience.cdk.validate.DictionaryValidator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.dict.DictionaryDatabase)" class="org.openscience.cdk.validate.DictionaryValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.DictionaryValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.DictionaryValidator" />
	<field name="db" class="org.openscience.cdk.validate.DictionaryValidator" />
	<field name="logger" class="org.openscience.cdk.validate.DictionaryValidator" />
	<class name="org.xmlcml.cml.element.CMLRelatedEntry" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLRelatedEntry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLRelatedEntry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLRelatedEntry)" class="org.xmlcml.cml.element.CMLRelatedEntry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLRelatedEntry" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLRelatedEntry" />
	<class name="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void incrementOrder(int)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="boolean containsElement(java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String atomHash(java.lang.String[])" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String atomHash(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;(java.lang.String,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLAtom getAtom(int)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String getAtomId(int)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void setAtomRefs2(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String createId()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLBond makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String atomHash(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void addAtom(java.util.List,org.xmlcml.cml.element.CMLMolecule,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="double calculateBondLength(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLAtom getOtherAtom(org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String atomHash()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String getOtherAtomId(java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String createId(java.lang.String[])" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void setCyclic(java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String generateAndSetId()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="double getBondLength()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void appendToId(java.lang.String,boolean)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String atomHash(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLBondArray getBondArray()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void renameAtomRef(java.lang.String,java.lang.String)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLBondStereo getBondStereo()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String getCyclic()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String getOrder()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void updateLigands()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;(java.lang.String,org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="boolean areWithinBondingDistance(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void detach()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void clearBondStereo()" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="double getBondLength(org.xmlcml.cml.base.CMLElement$CoordinateType)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="void setBondStereo(org.xmlcml.cml.element.CMLBondStereo)" class="org.xmlcml.cml.element.CMLBond" />
	<method signature="java.lang.String createId(org.xmlcml.cml.element.CMLAtom,org.xmlcml.cml.element.CMLAtom)" class="org.xmlcml.cml.element.CMLBond" />
	<field name="atomList" class="org.xmlcml.cml.element.CMLBond" />
	<field name="ZERO" class="org.xmlcml.cml.element.CMLBond" />
	<field name="TRIPLE" class="org.xmlcml.cml.element.CMLBond" />
	<field name="DOUBLE" class="org.xmlcml.cml.element.CMLBond" />
	<field name="HATCH" class="org.xmlcml.cml.element.CMLBond" />
	<field name="QUERY_HASH" class="org.xmlcml.cml.element.CMLBond" />
	<field name="TRANS" class="org.xmlcml.cml.element.CMLBond" />
	<field name="TRIPLE_T" class="org.xmlcml.cml.element.CMLBond" />
	<field name="NS" class="org.xmlcml.cml.element.CMLBond" />
	<field name="USER_CYCLIC" class="org.xmlcml.cml.element.CMLBond" />
	<field name="SINGLE" class="org.xmlcml.cml.element.CMLBond" />
	<field name="CIS" class="org.xmlcml.cml.element.CMLBond" />
	<field name="CYCLIC" class="org.xmlcml.cml.element.CMLBond" />
	<field name="NOSTEREO" class="org.xmlcml.cml.element.CMLBond" />
	<field name="ACYCLIC" class="org.xmlcml.cml.element.CMLBond" />
	<field name="SINGLE_S" class="org.xmlcml.cml.element.CMLBond" />
	<field name="BOND_LINK" class="org.xmlcml.cml.element.CMLBond" />
	<field name="AROMATIC" class="org.xmlcml.cml.element.CMLBond" />
	<field name="WEDGE" class="org.xmlcml.cml.element.CMLBond" />
	<field name="CYCLIC_UNKNOWN" class="org.xmlcml.cml.element.CMLBond" />
	<field name="LINEAR" class="org.xmlcml.cml.element.CMLBond" />
	<field name="bondType" class="org.xmlcml.cml.element.CMLBond" />
	<field name="bondOrders" class="org.xmlcml.cml.element.CMLBond" />
	<field name="QUERY_BOLD" class="org.xmlcml.cml.element.CMLBond" />
	<field name="HASH_SYMB" class="org.xmlcml.cml.element.CMLBond" />
	<field name="UNKNOWN_ORDER" class="org.xmlcml.cml.element.CMLBond" />
	<field name="DOUBLE_D" class="org.xmlcml.cml.element.CMLBond" />
	<field name="logger" class="org.xmlcml.cml.element.CMLBond" />
	<class name="org.openscience.cdk.qsar.result.IDescriptorResult" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.IDescriptorResult" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.IDescriptorResult" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.IDescriptorResult" />
	<class name="org.xmlcml.cml.element.CMLTable$TableType" />
	<method signature="org.xmlcml.cml.element.CMLTable$TableType getTableType(java.lang.String)" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<method signature="org.xmlcml.cml.element.CMLTable$TableType[] values()" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String)" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<method signature="org.xmlcml.cml.element.CMLTable$TableType valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<field name="ROW_BASED" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<field name="value" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<field name="CONTENT_BASED" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<field name="COLUMN_BASED" class="org.xmlcml.cml.element.CMLTable$TableType" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<method signature="boolean hasMoreElements()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt,org.openscience.cdk.graph.rebond.Bspt$Tuple,double)" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<method signature="java.lang.Object nextElement()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="distance" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="i" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="sp" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="center" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="leaf" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="stack" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.Bspt$EnumerateNear" />
	<class name="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="boolean addTuple(org.openscience.cdk.graph.rebond.Bspt$Tuple)" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt,org.openscience.cdk.graph.rebond.Bspt$Leaf,int,double)" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.graph.rebond.Bspt)" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="void dump(int)" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="double getSplitValue(int)" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<method signature="boolean isLeafWithSpace()" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<field name="tuples" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<field name="this$0" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<field name="count" class="org.openscience.cdk.graph.rebond.Bspt$Leaf" />
	<class name="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="void removeValidator(org.openscience.cdk.validate.IValidator)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElement(org.openscience.cdk.interfaces.IElement)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReaction(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemSequence(org.openscience.cdk.interfaces.IChemSequence)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="void addValidator(org.openscience.cdk.validate.IValidator)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBond(org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomType(org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateElectronContainer(org.openscience.cdk.interfaces.IElectronContainer)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.validate.ValidatorEngine" />
	<field name="validators" class="org.openscience.cdk.validate.ValidatorEngine" />
	<field name="logger" class="org.openscience.cdk.validate.ValidatorEngine" />
	<class name="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject processContent()" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void &lt;init&gt;(java.io.File,org.openscience.cdk.interfaces.IChemObjectBuilder,org.openscience.cdk.io.listener.IReaderListener)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="boolean isRecordEnd(java.lang.String)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void &lt;init&gt;(java.io.File,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createChemObjectReader()" class="org.openscience.cdk.io.random.RandomAccessSDFReader" />
	<class name="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CIFFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CIFFormat" />
	<class name="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="boolean haveSameAtoms(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="void loadTemplates(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer removeMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="void addMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getTemplateAt(int)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="boolean mapTemplateExact(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="int getTemplateCount()" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainerSet getMappedSubstructures(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<method signature="boolean mapTemplates(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.layout.TemplateHandler" />
	<field name="logger" class="org.openscience.cdk.layout.TemplateHandler" />
	<field name="templates" class="org.openscience.cdk.layout.TemplateHandler" />
	<class name="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object,int)" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<method signature="int getType()" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<field name="m_type" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<field name="CONNECTED_COMPONENT_FINISHED" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<field name="CONNECTED_COMPONENT_STARTED" class="org._3pq.jgrapht.event.ConnectedComponentTraversalEvent" />
	<class name="org.openscience.jchempaint.action.ExportAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.ExportAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.ExportAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.action.ExportAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.ExportAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.ExportAction" />
	<field name="currentFilter" class="org.openscience.jchempaint.action.ExportAction" />
	<class name="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSubstanceList)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLElements getAmountElements()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLElements getSubstanceElements()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyListElements()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void addSubstance(org.xmlcml.cml.element.AbstractSubstance)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void addPropertyList(org.xmlcml.cml.element.AbstractPropertyList)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void addAmount(org.xmlcml.cml.element.AbstractAmount)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSubstanceList" />
	<class name="org.openscience.cdk.EnzymeResidueLocator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Atom)" class="org.openscience.cdk.EnzymeResidueLocator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.EnzymeResidueLocator" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.EnzymeResidueLocator" />
	<field name="serialVersionUID" class="org.openscience.cdk.EnzymeResidueLocator" />
	<class name="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<method signature="void constructPanel()" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="tempField" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="TEMPERATURE" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="directionField" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="solventField" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="SOLVENT" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<field name="idField" class="org.openscience.jchempaint.dialog.editor.ReactionEditor" />
	<class name="org.xmlcml.cml.element.CMLGradient" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLGradient" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLGradient" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLGradient)" class="org.xmlcml.cml.element.CMLGradient" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLGradient" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLGradient" />
	<field name="NS" class="org.xmlcml.cml.element.CMLGradient" />
	<class name="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CTXFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CTXFormat" />
	<class name="org.xmlcml.cml.element.CMLAction" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAction" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAction)" class="org.xmlcml.cml.element.CMLAction" />
	<class name="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="int getNumberOfFontSizes()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean atMax()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void setFontName(java.lang.String)" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void resetVirtualCounts()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="java.lang.String getFontName()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean inUpper()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void increaseFontSize()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean inLower()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean inRange()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void setFontStyle(org.openscience.jchempaint.renderer.font.IFontManager$FontStyle)" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void makeFonts()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void toMiddle()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean atUpperBoundary()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void decreaseFontSize()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean atLowerBoundary()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="java.lang.Integer getFontSizeForZoom(double)" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="boolean atMin()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle getFontStyle()" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<method signature="void registerFontSizeMapping(double,int)" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="currentFontIndex" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="zoomToFontSizeMap" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="fontStyle" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="upperVirtualCount" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="lowerVirtualCount" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<field name="fontName" class="org.openscience.jchempaint.renderer.font.AbstractFontManager" />
	<class name="org.openscience.cdk.ChemModel" />
	<method signature="void setRingSet(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.ChemModel" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.ChemModel" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet getMoleculeSet()" class="org.openscience.cdk.ChemModel" />
	<method signature="org.openscience.cdk.interfaces.ICrystal getCrystal()" class="org.openscience.cdk.ChemModel" />
	<method signature="void setMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.ChemModel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemModel" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ChemModel" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ChemModel" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getRingSet()" class="org.openscience.cdk.ChemModel" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ChemModel" />
	<method signature="void setCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.ChemModel" />
	<method signature="void setReactionSet(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.cdk.ChemModel" />
	<method signature="org.openscience.cdk.interfaces.IReactionSet getReactionSet()" class="org.openscience.cdk.ChemModel" />
	<field name="crystal" class="org.openscience.cdk.ChemModel" />
	<field name="ringSet" class="org.openscience.cdk.ChemModel" />
	<field name="setOfMolecules" class="org.openscience.cdk.ChemModel" />
	<field name="setOfReactions" class="org.openscience.cdk.ChemModel" />
	<field name="serialVersionUID" class="org.openscience.cdk.ChemModel" />
	<class name="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Gaussian92Format" />
	<class name="org.openscience.cdk.event.ICDKChangeListener" />
	<method signature="void stateChanged(java.util.EventObject)" class="org.openscience.cdk.event.ICDKChangeListener" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.event.ICDKChangeListener" />
	<class name="org.openscience.jchempaint.renderer.generators.ReactionPlusGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.TextElement makePlus(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,java.awt.Color)" class="org.openscience.jchempaint.renderer.generators.ReactionPlusGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionPlusGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ReactionPlusGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ReactionPlusGenerator" />
	<class name="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseClickedDouble(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseWheelMovedBackward(int)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseWheelMovedForward(int)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseClickedDownRight(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseExit(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseClickedUpRight(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="boolean isBondOnlyInHighlightDistance(double,double,double)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void setSelection(org.openscience.jchempaint.renderer.selection.IChemObjectSelection)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="org.openscience.cdk.interfaces.IChemObject getHighlighted(javax.vecmath.Point2d,org.openscience.cdk.interfaces.IChemObject[])" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="boolean isAtomOnlyInHighlightDistance(double,double,double)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseEnter(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="double getHighlightDistance()" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getSelectedAtomContainer(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void setChemModelRelay(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="boolean noSelection(double,double,double)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="double distanceToAtom(org.openscience.cdk.interfaces.IAtom,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="double distanceToBond(org.openscience.cdk.interfaces.IBond,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<field name="chemModelRelay" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<field name="selection" class="org.openscience.jchempaint.controller.ControllerModuleAdapter" />
	<class name="org.openscience.cdk.io.SMILESWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void &lt;init&gt;(java.io.FileOutputStream)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.SMILESWriter" />
	<method signature="void writeMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.io.SMILESWriter" />
	<field name="writer" class="org.openscience.cdk.io.SMILESWriter" />
	<field name="logger" class="org.openscience.cdk.io.SMILESWriter" />
	<class name="org.xmlcml.cml.element.CMLMechanism" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLMechanism" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMechanism)" class="org.xmlcml.cml.element.CMLMechanism" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLMechanism" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLMechanism" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLMechanism" />
	<field name="NS" class="org.xmlcml.cml.element.CMLMechanism" />
	<class name="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<method signature="void &lt;init&gt;(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<method signature="java.lang.Object getVertex()" class="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<field name="m_vertex" class="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.event.VertexTraversalEvent" />
	<class name="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<method signature="void &lt;init&gt;(boolean)" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<method signature="boolean getMayclose()" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<field name="mayclose" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<field name="source" class="org.openscience.jchempaint.dialog.editor.ChemObjectEditor" />
	<class name="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="boolean canUndo()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="void undo()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="void redo()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="boolean canRedo()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<method signature="java.lang.String getPresentationName()" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="chemModelRelay" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="type" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="undoRedoContainer" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="chemModel" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="removedAtomContainer" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<field name="containerToAddTo" class="org.openscience.jchempaint.controller.undoredo.AddAtomsAndBondsEdit" />
	<class name="org.openscience.jchempaint.renderer.generators.LonePairGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.LonePairGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.LonePairGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.LonePairGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.LonePairGenerator" />
	<class name="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="java.lang.String getSphericalMatcher(org.openscience.cdk.interfaces.IAtomType)" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="java.lang.String getSphericalMatcher(java.lang.String)" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<field name="maxBondOrder" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<field name="atomTypeTools" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<field name="atomTypeIds" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<field name="logger" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<field name="factory" class="org.openscience.cdk.atomtype.MM2AtomTypeMatcher" />
	<class name="org.openscience.cdk.ChemSequence$1" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.ChemSequence$1" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ChemSequence)" class="org.openscience.cdk.ChemSequence$1" />
	<field name="this$0" class="org.openscience.cdk.ChemSequence$1" />
	<class name="org.openscience.cdk.atomtype.IAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.IAtomTypeMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.IAtomTypeMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomType[] findMatchingAtomType(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.atomtype.IAtomTypeMatcher" />
	<class name="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLElements getPropertyElements()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractGradient)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void addProperty(org.xmlcml.cml.element.AbstractProperty)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractGradient" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractGradient" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractGradient" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractGradient" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractGradient" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractGradient" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractGradient" />
	<class name="org.openscience.cdk.ringsearch.RingPartitioner" />
	<method signature="java.util.List partitionRings(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer convertToAtomContainer(org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<method signature="org.openscience.cdk.interfaces.IRingSet walkRingSystem(org.openscience.cdk.interfaces.IRingSet,org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IRingSet)" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<field name="debug" class="org.openscience.cdk.ringsearch.RingPartitioner" />
	<class name="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IMolecularFormulaSet)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void removeMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="java.lang.Iterable molecularFormulas()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="org.openscience.cdk.interfaces.IChemObjectBuilder getBuilder()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void removeMolecularFormula(int)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="int size()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getMolecularFormula(int)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void addMolecularFormula(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<method signature="void removeAllMolecularFormulas()" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<field name="components" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<field name="serialVersionUID" class="org.openscience.cdk.formula.MolecularFormulaSet" />
	<class name="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<method signature="boolean canUndo()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<method signature="void undo()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<method signature="void redo()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<method signature="boolean canRedo()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoable" />
	<class name="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNameAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getContentAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getName()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractMetadata)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getContent()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setName(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractMetadata" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_content" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_name" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractMetadata" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractMetadata" />
	<class name="org.openscience.cdk.Vibration" />
	<method signature="java.util.Iterator getAtomVectors()" class="org.openscience.cdk.Vibration" />
	<method signature="java.lang.String getLabel()" class="org.openscience.cdk.Vibration" />
	<method signature="void removeAtomVectors()" class="org.openscience.cdk.Vibration" />
	<method signature="double[] getAtomVector(int)" class="org.openscience.cdk.Vibration" />
	<method signature="void addAtomVector(double[])" class="org.openscience.cdk.Vibration" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Vibration" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.Vibration" />
	<method signature="int getAtomVectorCount()" class="org.openscience.cdk.Vibration" />
	<field name="label" class="org.openscience.cdk.Vibration" />
	<field name="atomVectors" class="org.openscience.cdk.Vibration" />
	<class name="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setMovingAllowed(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="java.lang.String getDrawElement()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean getAutoUpdateImplicitHydrogens()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setAutoUpdateImplicitHydrogens(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setDrawIsotopeNumber(int)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setRingPointerLength(double)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="double getBondPointerLength()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setSnapAngle(int)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setBondPointerLength(double)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setSnapCartesian(int)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="int getDrawIsotopeNumber()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean isHightlighLastSelected()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setDrawElement(java.lang.String)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean isMovingAllowed()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean getDrawPseudoAtom()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean getSnapToGridCartesian()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setDefaultElementSymbol(java.lang.String)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setSnapToGridCartesian(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setCommonElements(java.lang.String[])" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="java.lang.String getDefaultElementSymbol()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="int getSnapAngle()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setSnapToGridAngle(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="int getSnapCartesian()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setDrawPseudoAtom(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="boolean getSnapToGridAngle()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setHightlighLastSelected(boolean)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="double getRingPointerLength()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="java.lang.String[] getCommonElements()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaxOrder()" class="org.openscience.jchempaint.controller.IControllerModel" />
	<method signature="void setMaxOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.jchempaint.controller.IControllerModel" />
	<class name="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ConformerContainer,org.openscience.cdk.ConformerContainer$1)" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="void remove()" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer next()" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.ConformerContainer)" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<field name="last" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<field name="current" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<field name="this$0" class="org.openscience.cdk.ConformerContainer$CCIterator" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTCharge,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingIdentifier,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmarts,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicMass,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNonCHHeavyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSimpleBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.SimpleNode,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTElement,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTPeriodicGroupNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtomicNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHCount,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTChirality,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTSmallestRingSize,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTTotalConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAliphatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTHybrdizationNumber,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAnyAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTNotBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTGroup,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTReaction,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRingMembership,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTImplicitHighAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndBond,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTAromatic,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTLowAndExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitConnectivity,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTStart,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTRecursiveSmartsExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTOrExpression,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTExplicitAtom,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<method signature="java.lang.Object visit(org.openscience.cdk.smiles.smarts.parser.ASTValence,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor" />
	<class name="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getAtoms()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getReactionComponentChildren()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactantList)" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getFormulas()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getMolecules()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="java.util.List getReactionComponentDescendants()" class="org.xmlcml.cml.element.CMLReactantList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactantList" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactantList" />
	<class name="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getClearAllEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMergeMoleculesEdit(java.util.List,java.util.List,java.util.List,java.util.List,javax.vecmath.Vector2d,java.util.List,org.openscience.jchempaint.controller.undoredo.IUndoRedoable,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getAddAtomsAndBondsEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeAtomSymbolEdit(org.openscience.cdk.interfaces.IAtom,java.lang.String,java.lang.String,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeIsotopeEdit(org.openscience.cdk.interfaces.IAtom,java.lang.Integer,java.lang.Integer,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeHydrogenCountEdit(java.util.Map,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMakeReactantOrProductInNewReactionEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,boolean,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getReplaceAtomEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeValenceEdit(org.openscience.cdk.interfaces.IAtom,java.lang.Integer,java.lang.Integer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getLoadNewModelEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeCoordsEdit(java.util.Map,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getRemoveAtomsAndBondsEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMoveAtomEdit(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Vector2d,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getSingleElectronEdit(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IElectronContainer,boolean,org.openscience.jchempaint.controller.IChemModelRelay,org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMakeReactantOrProductInExistingReactionEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,boolean,java.lang.String)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getAdjustBondOrdersEdit(java.util.Map,java.util.Map,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeChargeEdit(org.openscience.cdk.interfaces.IAtom,int,int,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.undoredo.SwingUndoRedoFactory" />
	<class name="org.openscience.cdk.aromaticity.AromaticityCalculator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.aromaticity.AromaticityCalculator" />
	<method signature="boolean isAromatic(org.openscience.cdk.interfaces.IRing,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.aromaticity.AromaticityCalculator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.aromaticity.AromaticityCalculator" />
	<class name="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void addProduct(org.xmlcml.cml.element.AbstractProduct)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLElements getProductListElements()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLElements getProductElements()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractProductList)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void addProductList(org.xmlcml.cml.element.AbstractProductList)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractProductList" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractProductList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractProductList" />
	<class name="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.FenskeHall_ZMatrixFormat" />
	<class name="org.openscience.cdk.AtomContainerSet" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void growAtomContainerArray()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void removeAllAtomContainers()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void setMultiplier(int,java.lang.Double)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void removeAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.Iterable atomContainers()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer,double)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.Double getMultiplier(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void addAtomContainer(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void replaceAtomContainer(int,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.Double getMultiplier(int)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void sortAtomContainers(java.util.Comparator)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void removeAtomContainer(int)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer(int)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="java.lang.Double[] getMultipliers()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainerSet)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="int getAtomContainerCount()" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="boolean setMultiplier(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Double)" class="org.openscience.cdk.AtomContainerSet" />
	<method signature="boolean setMultipliers(java.lang.Double[])" class="org.openscience.cdk.AtomContainerSet" />
	<field name="atomContainerCount" class="org.openscience.cdk.AtomContainerSet" />
	<field name="multipliers" class="org.openscience.cdk.AtomContainerSet" />
	<field name="serialVersionUID" class="org.openscience.cdk.AtomContainerSet" />
	<field name="atomContainers" class="org.openscience.cdk.AtomContainerSet" />
	<field name="growArraySize" class="org.openscience.cdk.AtomContainerSet" />
	<class name="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MMODFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.MMODFormat" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$1" />
	<class name="org.xmlcml.cml.element.CMLSubstance" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSubstance" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSubstance)" class="org.xmlcml.cml.element.CMLSubstance" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSubstance" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSubstance" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSubstance" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSubstance" />
	<class name="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="int getCursor()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void &lt;init&gt;(java.util.List,org.openscience.jchempaint.renderer.font.IFontManager)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void paint(org.openscience.jchempaint.renderer.visitor.IDrawVisitor,org.openscience.jchempaint.renderer.elements.IRenderingElement)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="org.openscience.jchempaint.renderer.RendererModel getRenderer2DModel()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void paintMolecule(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.visitor.IDrawVisitor,java.awt.geom.Rectangle2D,boolean)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="javax.vecmath.Point2d toModelCoordinates(double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateDiagram(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.Rectangle convertToDiagramBounds(java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void reset()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setZoomToFit(double,double,double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.Rectangle calculateScreenBounds(java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setCursor(int)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.Rectangle paint(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="javax.vecmath.Point2d getDrawCenter()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setup()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setDrawCenter(double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setupTransformToFit(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,boolean)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.util.List getGenerators()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="javax.vecmath.Point2d getModelCenter()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="double calculateScaleForBondLength(double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.Rectangle shift(java.awt.Rectangle,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void shiftDrawCenter(double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setup(org.openscience.cdk.interfaces.IAtomContainer,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="java.awt.Rectangle calculateDiagramBounds(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager getFontManager()" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setModelCenter(double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setZoom(double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="javax.vecmath.Point2d toScreenCoordinates(double,double)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setScale(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void setupTransformNatural(java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<method signature="void repaint(org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="renderPanel" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="modelCenter" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="generators" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="zoom" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="rendererModel" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="transform" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="fontManager" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="DEFAULT_SCALE" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="cachedDiagram" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="scale" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<field name="drawCenter" class="org.openscience.jchempaint.renderer.AtomContainerRenderer" />
	<class name="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.formula.rules.RDBERule,java.lang.Object[],int)" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="boolean hasMoreElements()" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="void moveIndex()" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="java.lang.Object nextElement()" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="int rightmostIndexBelowMax()" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="index" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="m" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="inArray" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="hasMore" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="this$0" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<field name="n" class="org.openscience.cdk.formula.rules.RDBERule$Combinations" />
	<class name="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.Set vertexSet()" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean containsVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.util.Set)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean addVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="org._3pq.jgrapht.Edge addEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void setVerifyIntegrity(boolean)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean removeEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean removeVertex(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void addEdgesUsingFilter(java.util.Set,java.util.Set)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="org._3pq.jgrapht.Edge removeEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.util.Set,java.util.Set)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean access$100(org._3pq.jgrapht.graph.Subgraph)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.Set edgeSet()" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean addEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="void addVerticesUsingFilter(java.util.Set,java.util.Set)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean isVerifyIntegrity()" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="boolean containsEdge(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.Subgraph" />
	<method signature="org._3pq.jgrapht.EdgeFactory getEdgeFactory()" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="NO_SUCH_VERTEX_IN_BASE" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_edgeSet" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_vertexSet" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_isInduced" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_unmodifiableEdgeSet" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_base" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="NO_SUCH_EDGE_IN_BASE" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_verifyIntegrity" class="org._3pq.jgrapht.graph.Subgraph" />
	<field name="m_unmodifiableVertexSet" class="org._3pq.jgrapht.graph.Subgraph" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AtomicNumberAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AtomicNumberAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AtomicNumberAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.AtomicNumberAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AtomicNumberAtom" />
	<class name="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CMLRSSFormat" />
	<class name="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseClickedDouble(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseWheelMovedBackward(int)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseWheelMovedForward(int)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseClickedDownRight(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseExit(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseClickedUpRight(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseEnter(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void setChemModelRelay(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.IControllerModule" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.IControllerModule" />
	<class name="org.xmlcml.cml.element.CMLBondTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondTypeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBondTypeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondTypeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBondTypeList)" class="org.xmlcml.cml.element.CMLBondTypeList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBondTypeList" />
	<class name="org.openscience.jchempaint.action.EditChemObjectPropsAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.EditChemObjectPropsAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.EditChemObjectPropsAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.EditChemObjectPropsAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.EditChemObjectPropsAction" />
	<class name="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateChargeConservation(org.openscience.cdk.Reaction,org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtom(org.openscience.cdk.Atom)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validatePseudoAtom(org.openscience.cdk.Atom)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateIsotope(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateIsotopeExistence(org.openscience.cdk.interfaces.IIsotope)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateAtomCountConservation(org.openscience.cdk.Reaction,org.openscience.cdk.AtomContainer,org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateReaction(org.openscience.cdk.Reaction)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateStereoChemistry(org.openscience.cdk.Bond)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMaxBondOrder(org.openscience.cdk.Bond)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateCharge(org.openscience.cdk.Atom)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBondOrderSum(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.Molecule)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateHydrogenCount(org.openscience.cdk.Atom)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateMolecule(org.openscience.cdk.Molecule)" class="org.openscience.cdk.validate.BasicValidator" />
	<method signature="org.openscience.cdk.validate.ValidationReport validateBond(org.openscience.cdk.Bond)" class="org.openscience.cdk.validate.BasicValidator" />
	<field name="logger" class="org.openscience.cdk.validate.BasicValidator" />
	<class name="org.openscience.cdk.interfaces.IBond$Order" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.openscience.cdk.interfaces.IBond$Order" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order valueOf(java.lang.String)" class="org.openscience.cdk.interfaces.IBond$Order" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IBond$Order" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order[] values()" class="org.openscience.cdk.interfaces.IBond$Order" />
	<field name="TRIPLE" class="org.openscience.cdk.interfaces.IBond$Order" />
	<field name="$VALUES" class="org.openscience.cdk.interfaces.IBond$Order" />
	<field name="DOUBLE" class="org.openscience.cdk.interfaces.IBond$Order" />
	<field name="SINGLE" class="org.openscience.cdk.interfaces.IBond$Order" />
	<field name="QUADRUPLE" class="org.openscience.cdk.interfaces.IBond$Order" />
	<class name="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void fastFindInit(int)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getCyclicFragmentsContainer()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPath(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="boolean fastfind(int,int,boolean)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="int getSpanningTreeSize()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getAllRings()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IRing getRing(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IRingSet getBasicRings()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="int getBondsCyclicCount()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getSpanningTree()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="int getBondsAcyclicCount()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="org.openscience.cdk.interfaces.IRing combineRings(org.openscience.cdk.interfaces.IRingSet,int,int)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="boolean isDisconnected()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void identifyBonds()" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void buildSpanningTree(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.SpanningTree" />
	<method signature="void getBondsInRing(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IRing,int[])" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="bondsCyclicCount" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="edrSize" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="totalVertexCount" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="identifiedBonds" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="sptSize" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="disconnected" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="bondsAcyclicCount" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="molecule" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="ATOM_NUMBER" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="bondsInTree" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="totalEdgeCount" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="parent" class="org.openscience.cdk.graph.SpanningTree" />
	<field name="cb" class="org.openscience.cdk.graph.SpanningTree" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAtom" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAtom" />
	<class name="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setMovingAllowed(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="java.lang.String getDrawElement()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setAutoUpdateImplicitHydrogens(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean isAutoUpdateImplicitHydrogens()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setRingPointerLength(double)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="double getBondPointerLength()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setSnapAngle(int)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setBondPointerLength(double)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setSnapCartesian(int)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean isHightlighLastSelected()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setDrawElement(java.lang.String)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean isMovingAllowed()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean isSnapToGridCartesian()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean getDrawPseudoAtom()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setDefaultElementSymbol(java.lang.String)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="int getDrawIsotope()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setSnapToGridCartesian(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setCommonElements(java.lang.String[])" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="java.lang.String getDefaultElementSymbol()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="int getSnapAngle()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setSnapToGridAngle(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="int getSnapCartesian()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setDrawPseudoAtom(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setHightlighLastSelected(boolean)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="double getRingPointerLength()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="java.lang.String[] getCommonElements()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setDrawIsotope(int)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="org.openscience.cdk.interfaces.IBond$Order getMaxOrder()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="boolean isSnapToGridAngle()" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<method signature="void setMaxOrder(org.openscience.cdk.interfaces.IBond$Order)" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="maxOrder" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="bondPointerLength" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="snapToGridCartesian" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="drawIsotope" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="snapAngle" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="snapCartesian" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="drawElement" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="defaultElementSymbol" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="isMovingAllowed" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="commonElements" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="ringPointerLength" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="snapToGridAngle" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="hightlighLastSelected" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="drawPseudoAtom" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<field name="autoUpdateImplicitHydrogens" class="org.openscience.jchempaint.controller.ControllerParameters" />
	<class name="org.openscience.cdk.smiles.InvPair" />
	<method signature="void setCurr(long)" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void setPrime()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="long getCurr()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void commit()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void setLast(long)" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="boolean equals(java.lang.Object)" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="int getPrime()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="long getLast()" class="org.openscience.cdk.smiles.InvPair" />
	<method signature="void &lt;init&gt;(long,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.smiles.InvPair" />
	<field name="CANONICAL_LABEL" class="org.openscience.cdk.smiles.InvPair" />
	<field name="prime" class="org.openscience.cdk.smiles.InvPair" />
	<field name="last" class="org.openscience.cdk.smiles.InvPair" />
	<field name="atom" class="org.openscience.cdk.smiles.InvPair" />
	<field name="INVARIANCE_PAIR" class="org.openscience.cdk.smiles.InvPair" />
	<field name="curr" class="org.openscience.cdk.smiles.InvPair" />
	<field name="serialVersionUID" class="org.openscience.cdk.smiles.InvPair" />
	<class name="org.xmlcml.cml.element.CMLPeakGroup" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPeakGroup)" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPeakGroup" />
	<class name="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void setUnits(org.xmlcml.cml.interfacex.HasUnits,java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void init(java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String getPrefix(java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String getLocalName(java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String getPrefix()" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String getNamespaceURIString()" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String createValue(java.lang.String,java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="nu.xom.Element getElement()" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="java.lang.String getIdRef()" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<field name="count" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<field name="PREFIX_REGEX" class="org.xmlcml.cml.attribute.NamespaceRefAttribute" />
	<class name="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="java.lang.String getLog()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getAtomContainer()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="long[][] getWarningFlags()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="void generateAtomContainerFromInchi(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="void &lt;init&gt;(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder,java.util.List)" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="java.lang.String getMessage()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="void &lt;init&gt;(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="net.sf.jniinchi.INCHI_RET getReturnStatus()" class="org.openscience.cdk.inchi.InChIToStructure" />
	<method signature="void &lt;init&gt;(java.lang.String,org.openscience.cdk.interfaces.IChemObjectBuilder,java.lang.String)" class="org.openscience.cdk.inchi.InChIToStructure" />
	<field name="input" class="org.openscience.cdk.inchi.InChIToStructure" />
	<field name="output" class="org.openscience.cdk.inchi.InChIToStructure" />
	<field name="molecule" class="org.openscience.cdk.inchi.InChIToStructure" />
	<class name="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="int getCursor()" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="void setCursor(int)" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="org.openscience.jchempaint.renderer.RendererModel getRenderer2DModel()" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="void setZoom(double)" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="javax.vecmath.Point2d toModelCoordinates(double,double)" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="javax.vecmath.Point2d toScreenCoordinates(double,double)" class="org.openscience.jchempaint.renderer.IRenderer" />
	<method signature="void shiftDrawCenter(double,double)" class="org.openscience.jchempaint.renderer.IRenderer" />
	<class name="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List makeAtomsMapOfBondsMap(java.util.List,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean testSubgraphHeuristics(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getIsomorphMap(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="org.openscience.cdk.isomorphism.mcss.RGraph buildRGraph(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getSubgraphMap(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getSubgraphAtomsMaps(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.BitSet getBitSet(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getMaximum(java.util.ArrayList)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean isIsomorph(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getOverlaps(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getIsomorphAtomsMap(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean queryAdjacencyAndOrder(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getSubgraphMaps(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.ArrayList projectList(java.util.List,org.openscience.cdk.interfaces.IAtomContainer,int)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer project(java.util.List,org.openscience.cdk.interfaces.IAtomContainer,int)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getIsomorphMaps(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="void arcConstructor(org.openscience.cdk.isomorphism.mcss.RGraph,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List getSubgraphAtomsMap(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="void nodeConstructor(org.openscience.cdk.isomorphism.mcss.RGraph,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List checkSingleAtomCases(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean isSubgraph(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List makeAtomsMapsOfBondsMaps(java.util.List,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean hasCommonAtom(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.lang.String getCommonSymbol(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="java.util.List search(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.BitSet,java.util.BitSet,boolean,boolean)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<method signature="boolean queryAdjacency(org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<field name="ID1" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<field name="timeout" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<field name="start" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<field name="ID2" class="org.openscience.cdk.isomorphism.UniversalIsomorphismTester" />
	<class name="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setFormat(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormatAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactionStepList)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void addReactionStep(org.xmlcml.cml.element.AbstractReactionStep)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getFormat()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLElements getReactionStepElements()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_format" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactionStepList" />
	<class name="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLElements getMatrixElements()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLElements getTransform3Elements()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setSpaceGroup(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void addMatrix(org.xmlcml.cml.element.AbstractMatrix)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void addTransform3(org.xmlcml.cml.element.AbstractTransform3)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIrreducibleRepresentationAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNumberAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getPointGroup()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setPointGroup(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getSpaceGroup()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setNumber(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPointGroupAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="int getNumber()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getIrreducibleRepresentation()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setIrreducibleRepresentation(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setNumber(int)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractSymmetry)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpaceGroupAttribute()" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_spacegroup" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_irreduciblerepresentation" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_number" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_pointgroup" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractSymmetry" />
	<class name="org.openscience.jchempaint.action.CleanupAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.CleanupAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.CleanupAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.CleanupAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.CleanupAction" />
	<class name="org.xmlcml.cml.element.CMLTableRowList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableRowList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableRowList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableRowList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableRowList)" class="org.xmlcml.cml.element.CMLTableRowList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableRowList" />
	<class name="org.openscience.jchempaint.controller.IViewEventRelay" />
	<method signature="void updateView()" class="org.openscience.jchempaint.controller.IViewEventRelay" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.IViewEventRelay" />
	<class name="org.openscience.cdk.io.PMPReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void constructObject(org.openscience.cdk.interfaces.IChemObjectBuilder,java.lang.String)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void close()" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.PMPReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void processModelCommand(java.lang.String,java.lang.String,java.lang.String,java.lang.String)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.PMPReader" />
	<method signature="java.lang.String readLine()" class="org.openscience.cdk.io.PMPReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.PMPReader" />
	<field name="objHeader" class="org.openscience.cdk.io.PMPReader" />
	<field name="input" class="org.openscience.cdk.io.PMPReader" />
	<field name="bondAtomOnes" class="org.openscience.cdk.io.PMPReader" />
	<field name="PMP_ID" class="org.openscience.cdk.io.PMPReader" />
	<field name="bondAtomTwos" class="org.openscience.cdk.io.PMPReader" />
	<field name="modelStructure" class="org.openscience.cdk.io.PMPReader" />
	<field name="rebonder" class="org.openscience.cdk.io.PMPReader" />
	<field name="lineNumber" class="org.openscience.cdk.io.PMPReader" />
	<field name="objCommand" class="org.openscience.cdk.io.PMPReader" />
	<field name="chemObject" class="org.openscience.cdk.io.PMPReader" />
	<field name="bondOrders" class="org.openscience.cdk.io.PMPReader" />
	<field name="atomids" class="org.openscience.cdk.io.PMPReader" />
	<field name="atomZOrders" class="org.openscience.cdk.io.PMPReader" />
	<field name="bondCounter" class="org.openscience.cdk.io.PMPReader" />
	<field name="atomTypePattern" class="org.openscience.cdk.io.PMPReader" />
	<field name="PMP_ZORDER" class="org.openscience.cdk.io.PMPReader" />
	<field name="bondids" class="org.openscience.cdk.io.PMPReader" />
	<field name="logger" class="org.openscience.cdk.io.PMPReader" />
	<field name="atomGivenIds" class="org.openscience.cdk.io.PMPReader" />
	<class name="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<method signature="java.util.List getParameters()" class="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<field name="autoUpdateSelection" class="org.openscience.jchempaint.renderer.generators.SelectAtomGenerator" />
	<class name="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setStart(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMultiplierToSI(double)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMinValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getXMLContent()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMaxValueArray(double[])" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setConstantToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setUnitType(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getErrorBasis()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setEnd(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMaxValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="double getMultiplierToSI()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getUnitType()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getErrorBasisAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getEnd()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSizeAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setSize(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMultiplierToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getEndAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setMinValueArray(double[])" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setConstantToSI(double)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getStart()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="double[] getMaxValueArray()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="double[] getErrorValueArray()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setErrorBasis(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setErrorValueArray(double[])" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setSize(int)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="double getConstantToSI()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstantToSIAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDelimiterAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setDelimiter(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMultiplierToSIAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getStartAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setErrorValueArray(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getDelimiter()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="double[] getMinValueArray()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitTypeAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinValueArrayAttribute()" class="org.xmlcml.cml.element.AbstractArray" />
	<method signature="int getSize()" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_errorbasis" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_errorvaluearray" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_constanttosi" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_unittype" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_size" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_delimiter" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_maxvaluearray" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_multipliertosi" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_minvaluearray" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_start" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractArray" />
	<field name="_att_end" class="org.xmlcml.cml.element.AbstractArray" />
	<class name="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableHeader)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void addTableHeaderCell(org.xmlcml.cml.element.AbstractTableHeaderCell)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableHeaderCellElements()" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableHeader" />
	<class name="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.SybylDescriptorFormat" />
	<class name="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="int calculateCountExpression()" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="int[] parseCount(java.lang.String)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void cloneContentAndAppend(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<method signature="void generateAndInsertClones(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<field name="argName" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<field name="start" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<field name="end" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.main.CountExpressionAttribute" />
	<class name="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="java.lang.String getDelimitedString(java.lang.String)" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTableRow)" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="void writeHTML(java.io.Writer)" class="org.xmlcml.cml.element.CMLTableRow" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTableRow" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTableRow" />
	<class name="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void setType(java.lang.String)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractOperator)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTypeAttribute()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="java.lang.String getType()" class="org.xmlcml.cml.element.AbstractOperator" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="_att_type" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractOperator" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractOperator" />
	<class name="org.xmlcml.cml.element.ReactionComponent$Type" />
	<method signature="void &lt;init&gt;(java.lang.String,int)" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<method signature="org.xmlcml.cml.element.ReactionComponent$Type valueOf(java.lang.String)" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<method signature="org.xmlcml.cml.element.ReactionComponent$Type[] values()" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<field name="REACTANT" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<field name="PRODUCT" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<field name="$VALUES" class="org.xmlcml.cml.element.ReactionComponent$Type" />
	<class name="org.openscience.cdk.interfaces.IPDBPolymer" />
	<method signature="void addStructure(org.openscience.cdk.interfaces.IPDBStructure)" class="org.openscience.cdk.interfaces.IPDBPolymer" />
	<method signature="java.util.Collection getStructures()" class="org.openscience.cdk.interfaces.IPDBPolymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPDBPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IPDBAtom)" class="org.openscience.cdk.interfaces.IPDBPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IPDBAtom,org.openscience.cdk.interfaces.IMonomer,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.interfaces.IPDBPolymer" />
	<class name="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CMLFormat" />
	<class name="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="java.lang.String getNamespaceURI()" class="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="java.lang.String guessNamespace(java.lang.String)" class="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="org.xmlcml.cml.base.CMLNamespace createNamespace(java.lang.String,org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLNamespace" />
	<method signature="java.lang.String getPrefix()" class="org.xmlcml.cml.base.CMLNamespace" />
	<field name="prefix" class="org.xmlcml.cml.base.CMLNamespace" />
	<field name="namespaceURI" class="org.xmlcml.cml.base.CMLNamespace" />
	<class name="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.StringSTAttribute)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="void checkValue(java.lang.String)" class="org.xmlcml.cml.base.StringSTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.StringSTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.StringSTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.StringSTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.StringSTAttribute" />
	<field name="s" class="org.xmlcml.cml.base.StringSTAttribute" />
	<class name="org.xmlcml.cml.element.CMLPotentialForm" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPotentialForm)" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPotentialForm" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getEndColumn()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getColumn()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void UpdateLineColumn(char)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.Reader,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getBeginColumn()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="char BeginToken()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.InputStream,int,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.Reader)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getLine()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ExpandBuff(boolean)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="java.lang.String GetImage()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.InputStream,int,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getEndLine()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="char readChar()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.Reader,int,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.Reader,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void Done()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;init&gt;(java.io.InputStream,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void FillBuff()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void backup(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.InputStream,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="int getBeginLine()" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.InputStream)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="char[] GetSuffix(int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void ReInit(java.io.Reader,int,int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<method signature="void adjustBeginLineColumn(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="bufcolumn" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="staticFlag" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="prevCharIsLF" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="inputStream" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="column" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="available" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="bufline" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="prevCharIsCR" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="bufsize" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="bufpos" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="buffer" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="tokenBegin" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="inBuf" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="line" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<field name="maxNextCharInd" class="org.openscience.cdk.smiles.smarts.parser.SimpleCharStream" />
	<class name="org._3pq.jgrapht.event.GraphListener" />
	<method signature="void edgeRemoved(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org._3pq.jgrapht.event.GraphListener" />
	<method signature="void edgeAdded(org._3pq.jgrapht.event.GraphEdgeChangeEvent)" class="org._3pq.jgrapht.event.GraphListener" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.GraphListener" />
	<class name="org.openscience.cdk.io.ReaderFactory" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createReader(org.openscience.cdk.io.formats.IChemFormat)" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="void registerFormat(org.openscience.cdk.io.formats.IChemFormatMatcher)" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="java.util.List getFormats()" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createReader(java.io.InputStream)" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="org.openscience.cdk.io.ISimpleChemObjectReader createReader(java.io.Reader)" class="org.openscience.cdk.io.ReaderFactory" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.io.ReaderFactory" />
	<field name="formatFactory" class="org.openscience.cdk.io.ReaderFactory" />
	<field name="headerLength" class="org.openscience.cdk.io.ReaderFactory" />
	<field name="logger" class="org.openscience.cdk.io.ReaderFactory" />
	<class name="org.openscience.cdk.atomtype.IAtomTypeGuesser" />
	<method signature="java.util.List possibleAtomTypes(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.atomtype.IAtomTypeGuesser" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.atomtype.IAtomTypeGuesser" />
	<class name="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet getBondsById(java.lang.String[])" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLAtomSet getAtomSet()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void addBonds(java.util.List)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet complement(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule,java.lang.String[])" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;(java.util.List)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="java.util.List getBondIDs()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void addBondSet(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="int size()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void addBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet intersection(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet symmetricDifference(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void removeBond(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void addBondId(java.lang.String)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="boolean hasContentEqualTo(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet union(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="double getAverage2DBondLength(java.lang.String[],java.lang.String[])" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void removeBondById(java.lang.String)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="boolean contains(org.xmlcml.cml.element.CMLBond)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLMolecule getMolecule()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void init()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void removeBondSet(org.xmlcml.cml.element.CMLBondSet)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBond getBond(int)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="java.util.List getBonds()" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLBond[])" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBond getBondById(java.lang.String)" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="void addBonds(org.xmlcml.cml.element.CMLBond[])" class="org.xmlcml.cml.element.CMLBondSet" />
	<method signature="org.xmlcml.cml.element.CMLBondSet createFromBonds(java.util.List)" class="org.xmlcml.cml.element.CMLBondSet" />
	<field name="idTable" class="org.xmlcml.cml.element.CMLBondSet" />
	<field name="set" class="org.xmlcml.cml.element.CMLBondSet" />
	<field name="NS" class="org.xmlcml.cml.element.CMLBondSet" />
	<field name="molecule" class="org.xmlcml.cml.element.CMLBondSet" />
	<field name="atomRefs2Table" class="org.xmlcml.cml.element.CMLBondSet" />
	<class name="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Reaction,org.openscience.cdk.Reaction$1)" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="void remove()" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="boolean hasNext()" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="org.openscience.cdk.interfaces.IMapping next()" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="java.lang.Object next()" class="org.openscience.cdk.Reaction$MappingIterator" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.Reaction)" class="org.openscience.cdk.Reaction$MappingIterator" />
	<field name="this$0" class="org.openscience.cdk.Reaction$MappingIterator" />
	<field name="pointer" class="org.openscience.cdk.Reaction$MappingIterator" />
	<class name="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="java.lang.String getSpaceGroup()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void setSpaceGroup(java.lang.String)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="java.lang.Integer getZ()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="javax.vecmath.Vector3d getC()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void setB(javax.vecmath.Vector3d)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void setZ(java.lang.Integer)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void setA(javax.vecmath.Vector3d)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="javax.vecmath.Vector3d getA()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void setC(javax.vecmath.Vector3d)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="javax.vecmath.Vector3d getB()" class="org.openscience.cdk.interfaces.ICrystal" />
	<method signature="void add(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.ICrystal" />
	<class name="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<method signature="boolean checkAtomMapping(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,int,int)" class="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<method signature="java.util.Map mapAtomsOfAlignedStructures(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.util.Map)" class="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<field name="logger" class="org.openscience.cdk.isomorphism.AtomMappingTools" />
	<class name="org.openscience.cdk.io.XYZWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.XYZWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.XYZWriter" />
	<field name="fsb" class="org.openscience.cdk.io.XYZWriter" />
	<field name="writer" class="org.openscience.cdk.io.XYZWriter" />
	<field name="logger" class="org.openscience.cdk.io.XYZWriter" />
	<class name="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.NWChemFormat" />
	<class name="org.openscience.cdk.interfaces.IAminoAcid" />
	<method signature="org.openscience.cdk.interfaces.IAtom getCTerminus()" class="org.openscience.cdk.interfaces.IAminoAcid" />
	<method signature="org.openscience.cdk.interfaces.IAtom getNTerminus()" class="org.openscience.cdk.interfaces.IAminoAcid" />
	<method signature="void addNTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAminoAcid" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IAminoAcid" />
	<method signature="void addCTerminus(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.IAminoAcid" />
	<class name="org.openscience.jchempaint.renderer.visitor.IDrawVisitor" />
	<method signature="void setFontManager(org.openscience.jchempaint.renderer.font.IFontManager)" class="org.openscience.jchempaint.renderer.visitor.IDrawVisitor" />
	<method signature="void setRendererModel(org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.visitor.IDrawVisitor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.visitor.IDrawVisitor" />
	<class name="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void addBondSet(org.xmlcml.cml.element.AbstractBondSet)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void addAtomSet(org.xmlcml.cml.element.AbstractAtomSet)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondTypeListElements()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomTypeListElements()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void addAtomTypeList(org.xmlcml.cml.element.AbstractAtomTypeList)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLElements getBondSetElements()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractReactiveCentre)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void addBondTypeList(org.xmlcml.cml.element.AbstractBondTypeList)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomSetElements()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractReactiveCentre" />
	<class name="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZFractAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpaceGroupMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addArray(org.xmlcml.cml.element.AbstractArray)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getHydrogenCount()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIsotopeNumberAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getXFract()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getXFractAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addScalar(org.xmlcml.cml.element.AbstractScalar)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getX3Attribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getX2()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setYFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getYFractAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setZFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setPointGroupMultiplicity(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getCount()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setYFract(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFormalChargeAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIsotopeListRefAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setX3(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setXFract(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setSpinMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getHydrogenCountAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLElements getScalarElements()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getZ3()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addAtomParity(org.xmlcml.cml.element.AbstractAtomParity)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getIsotope()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getIsotopeRef()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setY3(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setOccupancy(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getOccupancyAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPointGroupMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setSpaceGroupMultiplicity(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setY2(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setZ3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotope(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getY3()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getY2Attribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setY3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setX2(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getZFract()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getIsotopeListRef()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setSpinMultiplicity(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getSpinMultiplicity()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getYFract()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIsotopeAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setZFract(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCountAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotopeNumber(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getElementType()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setOccupancy(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtom)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getZ3Attribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setElementType(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setFormalCharge(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addLabel(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setY2(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotopeNumber(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getX3()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getY3Attribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getPointGroupMultiplicity()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setXFract(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setSpaceGroupMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSpinMultiplicityAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getElementTypeAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIsotopeRefAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getY2()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getSpaceGroupMultiplicity()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLElements getAtomParityElements()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setFormalCharge(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setCount(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getFormalCharge()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotopeListRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotopeRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getX2Attribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setX2(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setZ3(double)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="double getOccupancy()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setIsotope(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLElements getLabelElements()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setPointGroupMultiplicity(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setHydrogenCount(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="int getIsotopeNumber()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setX3(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtom" />
	<method signature="void setHydrogenCount(int)" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_occupancy" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_formalcharge" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_isotoperef" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_isotopenumber" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_pointgroupmultiplicity" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_z3" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_hydrogencount" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_isotopelistref" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_isotope" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_x2" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_spinmultiplicity" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_y2" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_yfract" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_spacegroupmultiplicity" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_count" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_x3" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_zfract" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_elementtype" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_xfract" class="org.xmlcml.cml.element.AbstractAtom" />
	<field name="_att_y3" class="org.xmlcml.cml.element.AbstractAtom" />
	<class name="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$1" />
	<method signature="void mousePressed(java.awt.event.MouseEvent)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$1" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.applet.JChemPaintAbstractApplet)" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$1" />
	<field name="this$0" class="org.openscience.jchempaint.applet.JChemPaintAbstractApplet$1" />
	<class name="org.openscience.cdk.io.XYZReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.XYZReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void close()" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.XYZReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.XYZReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.XYZReader" />
	<field name="input" class="org.openscience.cdk.io.XYZReader" />
	<field name="logger" class="org.openscience.cdk.io.XYZReader" />
	<class name="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean isPureTranslation()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="double[] getRow(int)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getTranslation()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3,org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTransform3,org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.euclid.Transform3$Type getTransformationType()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.element.CMLPoint3 getCentreOfRotation()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.element.CMLTransform3 makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.element.CMLTransform3 concatenate(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean isIdentity()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(int,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLTransform3,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="int setTransformationType(org.xmlcml.euclid.Transform3$Type)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLine3,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.cml.element.CMLMatrix getMatrix()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void setMatrix(double[])" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="double[] getScales()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3,org.xmlcml.cml.element.CMLVector3,org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="int indexOf(java.util.List,org.xmlcml.cml.element.CMLTransform3,double)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="double[] getMatrixAsArray()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.euclid.Point3 transform(org.xmlcml.euclid.Point3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean isUnit()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void normalizeCrystallographically()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="boolean hasNonZeroTranslationComponent()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform3$Type)" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="double[] getAxisAndAngle()" class="org.xmlcml.cml.element.CMLTransform3" />
	<method signature="org.xmlcml.euclid.Transform3 getEuclidTransform3()" class="org.xmlcml.cml.element.CMLTransform3" />
	<field name="SIZE" class="org.xmlcml.cml.element.CMLTransform3" />
	<field name="UNIT44" class="org.xmlcml.cml.element.CMLTransform3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTransform3" />
	<class name="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="void setOperator(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.SymbolChargeIDQueryAtom" />
	<class name="org.xmlcml.euclid.Util" />
	<method signature="boolean isIntArray(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String replaceNumericEntityByISOLatinString(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String replaceNumericEntityByMnemonic(java.lang.String,java.lang.String,int,int,java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String removeHTML(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String toCamelCase(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String trim(double)" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isInt(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String outputNumber(int,int,double)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String getSuffix(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="byte[] readByteArray(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void check(int,int,int)" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isFloat(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="byte[] stripNewlines(byte[])" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String quoteConcatenate(java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String concatenate(boolean[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String[] removeElementFromStringArray(java.lang.String[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String replaceISOControlsByMnemonic(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String concatenate(double[][],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.util.List getCommaSeparatedStrings(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.FileOutputStream getFileOutputStream(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String getCanonicalDate(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String getPWDName()" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String substituteStrings(java.lang.String,java.lang.String[],java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="void BUG(java.lang.Exception)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String spaces(int)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String translateToMnemonic(char)" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.File createNewFile(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.File getTestOutputDirectory(java.lang.Class)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String concatenate(double[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String capitalise(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String truncateAndAddNewlinesAndEllipsis(java.lang.String,int)" class="org.xmlcml.euclid.Util" />
	<method signature="void message(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.net.URL getResource(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="double[] splitToDoubleArray(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void check(double[],int)" class="org.xmlcml.euclid.Util" />
	<method signature="int getIntFromHex(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String[] addElementToStringArray(java.lang.String[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="char convertUTF8ToLatin1(char,char)" class="org.xmlcml.euclid.Util" />
	<method signature="void BUG(java.lang.String,java.lang.Exception)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String normaliseWhitespace(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="int indexOfBalancedBracket(char,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="int[] splitToIntArray(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String dump(java.net.URL)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String concatenate(int[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.util.Hashtable invert(java.util.Hashtable)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String substituteString(java.lang.String,java.lang.String,java.lang.String,int)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String concatenate(java.lang.String[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void warning(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String truncateAndAddEllipsis(java.lang.String,int)" class="org.xmlcml.euclid.Util" />
	<method signature="java.util.List createList(java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isEqual(int[],int[],int)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String createCommaSeparatedStrings(java.util.List)" class="org.xmlcml.euclid.Util" />
	<method signature="void throwNYI()" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.InputStream getInputStreamFromResource(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void sortByEmbeddedInteger(java.util.List)" class="org.xmlcml.euclid.Util" />
	<method signature="int nextPrime(int)" class="org.xmlcml.euclid.Util" />
	<method signature="double trimFloat(double,int)" class="org.xmlcml.euclid.Util" />
	<method signature="void BUG(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="int indexOf(java.lang.String,java.lang.String[],boolean)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String leftTrim(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="double[] splitToDoubleArray(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isFloatArray(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="double getDouble(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isEqual(double[],double[],double)" class="org.xmlcml.euclid.Util" />
	<method signature="byte[] readByteArray(java.io.DataInputStream)" class="org.xmlcml.euclid.Util" />
	<method signature="void BUG(java.lang.Throwable)" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.File getTEMP_DIRECTORY()" class="org.xmlcml.euclid.Util" />
	<method signature="boolean isPrime(int)" class="org.xmlcml.euclid.Util" />
	<method signature="int getPrime(int)" class="org.xmlcml.euclid.Util" />
	<method signature="char[] convertLatin1ToUTF8(char)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String substituteEquals(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void copyFile(java.io.File,java.io.File)" class="org.xmlcml.euclid.Util" />
	<method signature="void output(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String substituteDOSbyAscii(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String buildPath(java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String replaceNumericEntityByGreekMnemonics(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.io.File getResourceFile(java.lang.String[])" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String stripISOControls(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Util" />
	<method signature="boolean deleteFile(java.io.File,boolean)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String outputFloat(int,int,double)" class="org.xmlcml.euclid.Util" />
	<method signature="void BUG(java.lang.String,java.lang.Throwable)" class="org.xmlcml.euclid.Util" />
	<method signature="void createFile(java.io.File,java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Util" />
	<method signature="boolean containsString(java.lang.String[],java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="void error(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="double format(double,int)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String deQuote(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<method signature="java.lang.String rightTrim(java.lang.String)" class="org.xmlcml.euclid.Util" />
	<field name="GREEK_ENTITIES" class="org.xmlcml.euclid.Util" />
	<field name="months" class="org.xmlcml.euclid.Util" />
	<field name="DATE_REGEX1" class="org.xmlcml.euclid.Util" />
	<field name="primeList" class="org.xmlcml.euclid.Util" />
	<field name="DATE_REGEX2" class="org.xmlcml.euclid.Util" />
	<field name="FS" class="org.xmlcml.euclid.Util" />
	<field name="UPPER_GREEK_ENTITIES" class="org.xmlcml.euclid.Util" />
	<field name="formTable" class="org.xmlcml.euclid.Util" />
	<field name="UPPER_ROMAN_REGEX" class="org.xmlcml.euclid.Util" />
	<field name="dosEquivalents" class="org.xmlcml.euclid.Util" />
	<field name="LOWER_ROMAN_NUMERAL" class="org.xmlcml.euclid.Util" />
	<field name="ISOLATIN_HI" class="org.xmlcml.euclid.Util" />
	<field name="TEMP_DIRECTORY" class="org.xmlcml.euclid.Util" />
	<field name="LOWER_ROMAN_REGEX" class="org.xmlcml.euclid.Util" />
	<field name="ISOLATIN_LO" class="org.xmlcml.euclid.Util" />
	<field name="logger" class="org.xmlcml.euclid.Util" />
	<field name="ISOLATIN_ENTITIES" class="org.xmlcml.euclid.Util" />
	<field name="asciiEquivalents" class="org.xmlcml.euclid.Util" />
	<class name="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getConnectedAtomContainer()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(java.awt.Color)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="boolean isFinished()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="void clear()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.selection.LogicalSelection$Type)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="boolean isFilled()" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<method signature="java.util.Collection elements(java.lang.Class)" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<field name="type" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<field name="chemModel" class="org.openscience.jchempaint.renderer.selection.LogicalSelection" />
	<class name="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<method signature="void setControllerHub(org.openscience.jchempaint.controller.ControllerHub)" class="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<field name="hub" class="org.openscience.jchempaint.controller.PhantomBondGenerator" />
	<class name="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setXMLContent(java.lang.String[])" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="java.lang.String[] getXMLContent()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSizeAttribute()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setSize(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomSet)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setXMLContent(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setSize(int)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="int getSize()" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_xmlContent" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_att_size" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomSet" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$LookaheadSuccess" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$LookaheadSuccess" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$LookaheadSuccess" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser$1)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser$LookaheadSuccess" />
	<class name="org.openscience.cdk.ChemSequence" />
	<method signature="void stateChanged(org.openscience.cdk.interfaces.IChemObjectChangeEvent)" class="org.openscience.cdk.ChemSequence" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModel(int)" class="org.openscience.cdk.ChemSequence" />
	<method signature="void growChemModelArray()" class="org.openscience.cdk.ChemSequence" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.ChemSequence" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ChemSequence" />
	<method signature="java.lang.Iterable chemModels()" class="org.openscience.cdk.ChemSequence" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ChemSequence" />
	<method signature="void addChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.ChemSequence" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.ChemSequence" />
	<method signature="int getChemModelCount()" class="org.openscience.cdk.ChemSequence" />
	<method signature="void removeChemModel(int)" class="org.openscience.cdk.ChemSequence" />
	<field name="chemModelCount" class="org.openscience.cdk.ChemSequence" />
	<field name="chemModels" class="org.openscience.cdk.ChemSequence" />
	<field name="serialVersionUID" class="org.openscience.cdk.ChemSequence" />
	<field name="growArraySize" class="org.openscience.cdk.ChemSequence" />
	<class name="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getClearAllEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMergeMoleculesEdit(java.util.List,java.util.List,java.util.List,java.util.List,javax.vecmath.Vector2d,java.util.List,org.openscience.jchempaint.controller.undoredo.IUndoRedoable,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getAddAtomsAndBondsEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeAtomSymbolEdit(org.openscience.cdk.interfaces.IAtom,java.lang.String,java.lang.String,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeIsotopeEdit(org.openscience.cdk.interfaces.IAtom,java.lang.Integer,java.lang.Integer,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeHydrogenCountEdit(java.util.Map,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMakeReactantOrProductInNewReactionEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,boolean,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getReplaceAtomEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeValenceEdit(org.openscience.cdk.interfaces.IAtom,java.lang.Integer,java.lang.Integer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getLoadNewModelEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.cdk.interfaces.IReactionSet,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeCoordsEdit(java.util.Map,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getRemoveAtomsAndBondsEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMoveAtomEdit(org.openscience.cdk.interfaces.IAtomContainer,javax.vecmath.Vector2d,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getSingleElectronEdit(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IElectronContainer,boolean,org.openscience.jchempaint.controller.IChemModelRelay,org.openscience.cdk.interfaces.IAtom,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getMakeReactantOrProductInExistingReactionEdit(org.openscience.cdk.interfaces.IChemModel,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtomContainer,java.lang.String,boolean,java.lang.String)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getAdjustBondOrdersEdit(java.util.Map,java.util.Map,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<method signature="org.openscience.jchempaint.controller.undoredo.IUndoRedoable getChangeChargeEdit(org.openscience.cdk.interfaces.IAtom,int,int,java.lang.String,org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.undoredo.IUndoRedoFactory" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="boolean isSeenVertex(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="org._3pq.jgrapht.traverse.CrossComponentIterator$Specifics createGraphSpecifics(org._3pq.jgrapht.Graph)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="org._3pq.jgrapht.event.VertexTraversalEvent createVertexTraversalEvent(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void encounterVertex(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void encounterVertexAgain(java.lang.Object,org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="java.lang.Object getSeenData(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="java.lang.Object putSeenData(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="java.lang.Object provideNextVertex()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="org._3pq.jgrapht.event.EdgeTraversalEvent createEdgeTraversalEvent(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.Graph,java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void addUnseenChildrenOf(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="boolean hasNext()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="boolean isConnectedComponentExhausted()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="java.lang.Object next()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<method signature="void encounterStartVertex()" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_ccFinishedEvent" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_state" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_vertexIterator" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_reusableVertexEvent" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_ccStartedEvent" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_specifics" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_startVertex" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="CCS_AFTER_COMPONENT" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_seen" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="m_reusableEdgeEvent" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="CCS_WITHIN_COMPONENT" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<field name="CCS_BEFORE_COMPONENT" class="org._3pq.jgrapht.traverse.CrossComponentIterator" />
	<class name="org._3pq.jgrapht.graph.SimpleGraph" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.EdgeFactory)" class="org._3pq.jgrapht.graph.SimpleGraph" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.graph.SimpleGraph" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.SimpleGraph" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.graph.SimpleGraph" />
	<class name="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Character getStartChainID()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setStartInsertionCode(java.lang.Character)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Character getStartInsertionCode()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setEndSequenceNumber(java.lang.Integer)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setEndInsertionCode(java.lang.Character)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Integer getEndSequenceNumber()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setEndChainID(java.lang.Character)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setStartSequenceNumber(java.lang.Integer)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setStartChainID(java.lang.Character)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Character getEndChainID()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="void setStructureType(java.lang.String)" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Integer getStartSequenceNumber()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.String getStructureType()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<method signature="java.lang.Character getEndInsertionCode()" class="org.openscience.cdk.interfaces.IPDBStructure" />
	<class name="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.MDLV2000Format" />
	<class name="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.GamessFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.GamessFormat" />
	<class name="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getConnectedAtomContainer()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="boolean contains(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="boolean isFinished()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void reset()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="boolean isEmpty()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="java.util.Collection elements(java.lang.Class)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(java.awt.Color)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void clear()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void addPoint(javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="void select(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<method signature="boolean isFilled()" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<field name="atoms" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<field name="finished" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<field name="bonds" class="org.openscience.jchempaint.renderer.selection.ShapeSelection" />
	<class name="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="java.lang.String getMenuResourceString(java.lang.String,java.lang.String)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="org.openscience.cdk.tools.ILoggingTool access$200()" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="org.openscience.jchempaint.action.JCPAction getJCPAction()" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="org.openscience.jchempaint.action.JCPAction access$100(org.openscience.jchempaint.JChemPaintMenuHelper)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="java.util.List access$000()" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="javax.swing.JComponent createMenu(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,boolean,java.lang.String,javax.swing.JComponent)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="javax.swing.JComponent createMenu(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,boolean,java.lang.String)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="javax.swing.JMenuItem createMenuItem(org.openscience.jchempaint.JChemPaintPanel,java.lang.String,boolean)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<method signature="void addShortCuts(java.lang.String,javax.swing.JMenuItem,org.openscience.jchempaint.JChemPaintPanel)" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<field name="logger" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<field name="usedKeys" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<field name="jcpaction" class="org.openscience.jchempaint.JChemPaintMenuHelper" />
	<class name="org.openscience.cdk.Polymer" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.Polymer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.Polymer" />
	<method signature="boolean atomIsInMonomer(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.Polymer" />
	<method signature="void removeMonomer(java.lang.String)" class="org.openscience.cdk.Polymer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.Polymer" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.Polymer" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String)" class="org.openscience.cdk.Polymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.Polymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer)" class="org.openscience.cdk.Polymer" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.Polymer" />
	<field name="monomers" class="org.openscience.cdk.Polymer" />
	<field name="serialVersionUID" class="org.openscience.cdk.Polymer" />
	<class name="org.xmlcml.cml.element.CMLReactionStep" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactionStep" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactionStep" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactionStep" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactionStep)" class="org.xmlcml.cml.element.CMLReactionStep" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactionStep" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactionStep" />
	<class name="org.openscience.jchempaint.renderer.generators.TooltipGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.TooltipGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.TooltipGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.TooltipGenerator" />
	<class name="org.openscience.jchempaint.GT$Language" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.GT$Language" />
	<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,boolean)" class="org.openscience.jchempaint.GT$Language" />
	<field name="display" class="org.openscience.jchempaint.GT$Language" />
	<field name="code" class="org.openscience.jchempaint.GT$Language" />
	<field name="language" class="org.openscience.jchempaint.GT$Language" />
	<class name="org.xmlcml.cml.attribute.DictRefAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.attribute.DictRefAttribute" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.attribute.DictRefAttribute" />
	<method signature="org.xmlcml.cml.attribute.DictRefAttribute getDictRefFromElementOrParent(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.attribute.DictRefAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.attribute.DictRefAttribute" />
	<field name="NAME" class="org.xmlcml.cml.attribute.DictRefAttribute" />
	<class name="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet returnOrdered(double,org.openscience.cdk.interfaces.IMolecularFormulaSet)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormulaSet generate(double)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="java.lang.String[] generateOrderE()" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="void callDefaultRestrictions()" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="int getMaxOccurence(double,int,int[],java.util.List)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula getFormula(java.util.List,int[])" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="void setRestrictions(java.util.List)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="java.util.List orderList(java.util.List)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="void setDefaultRestrictions()" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="double calculateMassT(java.util.List,int[])" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="int[][] getMatrix(int)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="org.openscience.cdk.interfaces.IMolecularFormula putInOrder(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<method signature="java.util.List getRestrictions()" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="orderElements" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="builder" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="mfRange" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="rules" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="tolerance" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="charge" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="matrix_Base" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="logger" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<field name="factory" class="org.openscience.cdk.formula.MassToFormulaTool" />
	<class name="org.xmlcml.cml.element.CMLAtomTypeList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLAtomTypeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLAtomTypeList)" class="org.xmlcml.cml.element.CMLAtomTypeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLAtomTypeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLAtomTypeList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLAtomTypeList" />
	<class name="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setScale(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle calculateDiagramBounds(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void &lt;init&gt;(java.util.List,org.openscience.jchempaint.renderer.font.IFontManager)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="org.openscience.jchempaint.renderer.RendererModel getRenderer2DModel()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void addReactionGenerator(org.openscience.jchempaint.renderer.generators.IReactionGenerator)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void reset()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setZoomToFit(double,double,double,double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle calculateDiagramBounds(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle paintReaction(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle paintChemModel(org.openscience.cdk.interfaces.IChemModel,org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.util.List getGenerators()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void paintReaction(org.openscience.cdk.interfaces.IReaction,org.openscience.jchempaint.renderer.visitor.IDrawVisitor,java.awt.geom.Rectangle2D,boolean)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle paintMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateDiagram(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void paintChemModel(org.openscience.cdk.interfaces.IChemModel,org.openscience.jchempaint.renderer.visitor.IDrawVisitor,java.awt.geom.Rectangle2D,boolean)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle shift(java.awt.Rectangle,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generateDiagram(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setup(org.openscience.cdk.interfaces.IReaction,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="double calculateAverageBondLength(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="double calculateAverageBondLength(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setScale(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setupTransformNatural(java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setup(org.openscience.cdk.interfaces.IChemModel,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void paint(org.openscience.jchempaint.renderer.visitor.IDrawVisitor,org.openscience.jchempaint.renderer.elements.IRenderingElement)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="double calculateAverageBondLength(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setup(org.openscience.cdk.interfaces.IReactionSet,java.awt.Rectangle)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void paintReactionSet(org.openscience.cdk.interfaces.IReactionSet,org.openscience.jchempaint.renderer.visitor.IDrawVisitor,java.awt.geom.Rectangle2D,boolean)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="double calculateAverageBondLength(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle convertToDiagramBounds(java.awt.geom.Rectangle2D)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="javax.vecmath.Point2d getDrawCenter()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void paintMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet,org.openscience.jchempaint.renderer.visitor.IDrawVisitor,java.awt.geom.Rectangle2D,boolean)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setup()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setDrawCenter(double,double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setupTransformToFit(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,double,boolean)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setScale(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.geom.Rectangle2D calculateBounds(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void &lt;init&gt;(java.util.List,java.util.List,org.openscience.jchempaint.renderer.font.IFontManager,org.openscience.jchempaint.RenderPanel)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="javax.vecmath.Point2d getModelCenter()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="double calculateScaleForBondLength(double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle calculateDiagramBounds(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle paintReactionSet(org.openscience.cdk.interfaces.IReactionSet,org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void shiftDrawCenter(double,double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="java.awt.Rectangle calculateDiagramBounds(org.openscience.cdk.interfaces.IReaction)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void addGenerator(org.openscience.jchempaint.renderer.generators.IGenerator)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setScale(org.openscience.cdk.interfaces.IReactionSet)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setModelCenter(double,double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void setZoom(double)" class="org.openscience.jchempaint.renderer.Renderer" />
	<method signature="void repaint(org.openscience.jchempaint.renderer.visitor.IDrawVisitor)" class="org.openscience.jchempaint.renderer.Renderer" />
	<field name="reactionGenerators" class="org.openscience.jchempaint.renderer.Renderer" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreQuery" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.pharmacophore.PharmacophoreQuery" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQuery" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreQuery" />
	<field name="exclusionVolumes" class="org.openscience.cdk.pharmacophore.PharmacophoreQuery" />
	<class name="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="int outDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="void addEdgeToTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="java.util.List incomingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedEdgeContainer getEdgeContainer(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="void removeEdgeFromTouchingVertices(org._3pq.jgrapht.Edge)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="int degreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="int inDegreeOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="java.util.List outgoingEdgesOf(java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="java.util.List getAllEdges(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="org._3pq.jgrapht.Edge getEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<method signature="void &lt;init&gt;(org._3pq.jgrapht.graph.AbstractBaseGraph,org._3pq.jgrapht.graph.AbstractBaseGraph$1)" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<field name="NOT_IN_DIRECTED_GRAPH" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<field name="this$0" class="org._3pq.jgrapht.graph.AbstractBaseGraph$DirectedSpecifics" />
	<class name="org.xmlcml.molutil.ChemicalElement" />
	<method signature="org.xmlcml.molutil.ChemicalElement getChemicalElementIgnoreCase(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.lang.String getColorString()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="org.xmlcml.molutil.ChemicalElement getElement(int)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.util.Set getElementSet(java.lang.String[])" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="org.xmlcml.molutil.ChemicalElement getChemicalElement(org.xmlcml.molutil.ChemicalElement$AS)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setIsotopes(int[],double[])" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void debug()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.lang.String getSymbol()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setElectronegativity(double)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int getGroup()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getAtomicWeight()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.awt.Color getColor()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="org.xmlcml.molutil.ChemicalElement getChemicalElement(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setColor(java.awt.Color)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getAtomicRadius()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.lang.String getElectronicState(nu.xom.Element,java.lang.String,java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getElectronegativity(nu.xom.Element,java.lang.String,java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void debug(org.xmlcml.molutil.ChemicalElement)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void addIsotope(int[],double[])" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void &lt;init&gt;(java.lang.String,int,double)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getVDWRadius()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setCovalentRadius(double)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getRadius(nu.xom.Element,java.lang.String,java.lang.String,java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getRadius(org.xmlcml.molutil.ChemicalElement$RadiusType)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int getMainIsotope()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getTypeAdjustedCovalentRadius()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getBondingRadiusTolerance()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setBondingRadiusTolerance(double)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double[] getIsotopeAbundances()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.lang.String getElectronicGroundState()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int getPeriod()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int getAtomicNumber()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getElectronegativity()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="boolean isChemicalElementType(org.xmlcml.molutil.ChemicalElement$Type)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.lang.String toString()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int getValenceElectrons()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="int[] getIsotopeMasses()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="boolean isChemicalElementType(org.xmlcml.molutil.ChemicalElement$Type,int)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="java.util.Set getElementSet(java.util.List)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getWeight(nu.xom.Element,java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setAtomicRadius(double)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="double getCovalentRadius()" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="org.xmlcml.molutil.ChemicalElement grabChemicalElement(java.lang.String)" class="org.xmlcml.molutil.ChemicalElement" />
	<method signature="void setVDWRadius(double)" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="period" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="periodicTable" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="atomicNumber" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="atomicRadius" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="group" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="pTable" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="isotopeMasses" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="bondingRadiusTolerance" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="isotopeAbundances" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="atomicWeight" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="DEFAULT_BONDING_RADIUS_TOLERANCE" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="vanderwaalsRadius" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="covalentRadius" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="electronicGroundState" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="atomicSymbol" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="color" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="DEFAULT_ATOMIC_RADIUS" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="MAXELEM" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="ELEMENT_FILE" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="DEFAULT_COVALENT_RADIUS" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="logger" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="DEFAULT_VDW_RADIUS" class="org.xmlcml.molutil.ChemicalElement" />
	<field name="electronegativity" class="org.xmlcml.molutil.ChemicalElement" />
	<class name="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isStereo(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean stereosAreOpposite(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isLeft(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isValidDoubleBondConfiguration(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="double giveAngle(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isCisTrans(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="int isTrigonalBipyramidalOrOctahedral(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean closeEnoughToBond(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,double)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="double giveAngleBothMethods(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d,boolean)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isStartOfDoubleBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,boolean[])" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="void makeUpDownBonds(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isSquarePlanar(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="boolean isEndOfDoubleBond(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,boolean[])" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="int isTetrahedral(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="double giveAngleFromMiddle(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.geometry.BondTools" />
	<method signature="double giveAngleBothMethods(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom,boolean)" class="org.openscience.cdk.geometry.BondTools" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AromaticSymbolAtom" />
	<class name="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="java.lang.String getObjectClass()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getCMLValueAttribute()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractLabel)" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="java.lang.String getCMLValue()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getObjectClassAttribute()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void setObjectClass(java.lang.String)" class="org.xmlcml.cml.element.AbstractLabel" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractLabel" />
	<field name="_att_objectclass" class="org.xmlcml.cml.element.AbstractLabel" />
	<field name="_att_value" class="org.xmlcml.cml.element.AbstractLabel" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractLabel" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractLabel" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractLabel" />
	<class name="org._3pq.jgrapht.EdgeFactory" />
	<method signature="org._3pq.jgrapht.Edge createEdge(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.EdgeFactory" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.EdgeFactory" />
	<class name="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void close()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void initIOSettings()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="java.util.Map parseOptions(java.lang.String)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="org.openscience.cdk.interfaces.IMolecule readMolecule(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void readSGroup(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="java.lang.String readLine()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void readBondBlock(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;init&gt;(java.io.InputStream,org.openscience.cdk.io.IChemObjectReader$Mode)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="java.lang.String readCommand(java.lang.String)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="java.lang.String exhaustStringTokenizer(java.util.StringTokenizer)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="java.lang.String readHeader(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="boolean isReady()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer readConnectionTable(org.openscience.cdk.interfaces.IChemObjectBuilder)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void readAtomBlock(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.MDLV3000Reader" />
	<field name="input" class="org.openscience.cdk.io.MDLV3000Reader" />
	<field name="logger" class="org.openscience.cdk.io.MDLV3000Reader" />
	<field name="keyValueTuple2" class="org.openscience.cdk.io.MDLV3000Reader" />
	<field name="lineNumber" class="org.openscience.cdk.io.MDLV3000Reader" />
	<field name="keyValueTuple" class="org.openscience.cdk.io.MDLV3000Reader" />
	<class name="org.xmlcml.cml.element.CMLReaction$Index" />
	<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Index[] values()" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<method signature="org.xmlcml.cml.element.CMLReaction$Index valueOf(java.lang.String)" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<field name="index" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<field name="REACTANT_I" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<field name="$VALUES" class="org.xmlcml.cml.element.CMLReaction$Index" />
	<class name="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractIsotopeList)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void addIsotope(org.xmlcml.cml.element.AbstractIsotope)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLElements getIsotopeElements()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractIsotopeList" />
	<class name="org.xmlcml.cml.element.CMLIsotopeList" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLIsotopeList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLIsotopeList)" class="org.xmlcml.cml.element.CMLIsotopeList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLIsotopeList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLIsotopeList" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLIsotopeList" />
	<class name="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setConstantToSI(double)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setMultiplierToSI(double)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setConstantToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setUnitType(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="double getConstantToSI()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="double getMultiplierToSI()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConstantToSIAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getUnitType()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMultiplierToSIAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTableHeaderCell)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setMultiplierToSI(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitTypeAttribute()" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_multipliertosi" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_constanttosi" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_unittype" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractTableHeaderCell" />
	<class name="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<method signature="void fireIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<field name="listenerList" class="org.openscience.cdk.io.DefaultChemObjectWriter" />
	<class name="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLScalar[])" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLLattice getLattice()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="double getCellVolume()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLScalar createScalar(java.lang.String,double,java.lang.String)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="double getCellVolume2()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLCrystal getReciprocalCell()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void setCellParameters(double[],double[])" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="double getReciprocalCellVolume()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLCrystal getContainedCrystal(org.xmlcml.cml.base.CMLElement)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLLattice)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="java.util.List createCellParameterElements()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getOrthogonalizationMatrix()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="double[] getCellParameterValues()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void setCellParameters(double,double,double,double,double,double)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLLattice getReciprocalLattice()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLLattice getPrimitiveLattice(org.xmlcml.cml.element.CMLCrystal$Centering)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="double getCellVolume1()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLLattice getPrimitiveLattice()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLScalar[] createScalars(double[],double[])" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="java.util.List getCellScalars()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void setCellParameters(double[])" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.cml.element.CMLScalar createScalar(java.lang.String,double,java.lang.String,double)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLCrystal)" class="org.xmlcml.cml.element.CMLCrystal" />
	<method signature="org.xmlcml.euclid.Transform3 getOrthogonalizationTransform()" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="A" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="GAMMA" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="C" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="Z2OP" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="NS" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="B" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="BETA" class="org.xmlcml.cml.element.CMLCrystal" />
	<field name="ALPHA" class="org.xmlcml.cml.element.CMLCrystal" />
	<class name="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix copyLowerToUpper()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(int)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(int[][])" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void transpose()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="boolean isLowerTriangular()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(int,int)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix diagonal(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntArray lowerTriangle()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix copyUpperToLower()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix plus(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix outerProduct(org.xmlcml.euclid.IntArray)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix multiply(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntMatrix,int,int,int)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;(int,int[])" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="org.xmlcml.euclid.IntSquareMatrix subtract(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="boolean isUnit()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="boolean isSymmetric()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="int trace()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="boolean isUpperTriangular()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.IntSquareMatrix" />
	<method signature="void shallowCopy(org.xmlcml.euclid.IntSquareMatrix)" class="org.xmlcml.euclid.IntSquareMatrix" />
	<field name="logger" class="org.xmlcml.euclid.IntSquareMatrix" />
	<class name="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowMoleculeTitle(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setSelectedPartColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setFontName(java.lang.String)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getHoverOverColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setAtomRadius(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.lang.String getFontName()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isFitToScreen()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowAtomAtomMapping()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isHighlightShapeFilled()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setWedgeWidth(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getBondWidth()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setSelectionRadius(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="int getArrowHeadWidth()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setForeColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowAromaticityInCDKStyle()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setMappingLineWidth(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getNotTypeableUnderlineColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getSelectionRadius()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowReactionBoxes()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowAromaticity(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape getCompactShape()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getBondLength()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowAtomTypeNames()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getScale()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getRingProportion()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="org.openscience.jchempaint.renderer.RenderingParameters$AtomShape getSelectionShape()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getMappingColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getSelectedPartColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setMargin(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setBackColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getWedgeWidth()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getBondDistance()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getExternalHighlightColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getBoundsColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowAtomTypeNames(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowMoleculeTitle()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setMappingColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setDefaultBondColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getDefaultBondColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setExternalHighlightColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowTooltip(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowReactionBoxes(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isKekuleStructure()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="org.openscience.jchempaint.renderer.font.IFontManager$FontStyle getFontStyle()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setHoverOverColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getMargin()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getMappingLineWidth()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setHighlightShapeFilled(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowTooltip()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setBondWidth(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isUseAntiAliasing()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setArrowHeadWidth(int)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowExplicitHydrogens()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isCompact()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setColorAtomsByType(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getHighlightDistance()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setRingProportion(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setSelectionShape(org.openscience.jchempaint.renderer.RenderingParameters$AtomShape)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowAromaticity()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setCompactShape(org.openscience.jchempaint.renderer.RenderingParameters$AtomShape)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setUseAntiAliasing(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowImplicitHydrogens(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setBoundsColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setNotTypeableUnderlineColor(java.awt.Color)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowExplicitHydrogens(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowEndCarbons(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setHighlightDistance(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setFitToScreen(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setCompact(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setKekuleStructure(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowEndCarbons()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setScale(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isShowImplicitHydrogens()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setFontStyle(org.openscience.jchempaint.renderer.font.IFontManager$FontStyle)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setWillDrawNumbers(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="double getAtomRadius()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getBackColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="java.awt.Color getForeColor()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isColorAtomsByType()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setBondDistance(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setBondLength(double)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowAromaticityInCDKStyle(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="void setShowAtomAtomMapping(boolean)" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<method signature="boolean isWillDrawNumbers()" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="compact" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="bondLength" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showMoleculeTitle" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="notTypeableUnderlineColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showTooltip" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showExplicitHydrogens" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showAromaticityInCDKStyle" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="foreColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="fontStyle" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="boundsColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showReactionBoxes" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showAtomAtomMapping" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="scale" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="kekuleStructure" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="defaultBondColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="bondDistance" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="mappingColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="useAntiAliasing" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="fontName" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="fitToScreen" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showAtomTypeNames" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="hoverOverColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="wedgeWidth" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="colorAtomsByType" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showEndCarbons" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="compactShape" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="externalHighlightColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="highlightDistance" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="mappingLineWidth" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="atomRadius" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="bondWidth" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="ringProportion" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showAromaticity" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="selectionShape" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="willDrawNumbers" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="selectedPartColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="arrowHeadWidth" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="selectionRadius" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="highlightShapeFilled" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="backColor" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="margin" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<field name="showImplicitHydrogens" class="org.openscience.jchempaint.renderer.RenderingParameters" />
	<class name="org.openscience.cdk.io.ShelXReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="org.openscience.cdk.interfaces.ICrystal readCrystal(org.openscience.cdk.interfaces.ICrystal)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void close()" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.ShelXReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.ShelXReader" />
	<field name="input" class="org.openscience.cdk.io.ShelXReader" />
	<field name="logger" class="org.openscience.cdk.io.ShelXReader" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="void setRingBond(org.openscience.cdk.isomorphism.matchers.IQueryBond)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryBond getRingBond()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="org.openscience.cdk.isomorphism.matchers.IQueryAtom getAtom()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<method signature="void setAtom(org.openscience.cdk.isomorphism.matchers.IQueryAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<field name="atom" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<field name="ringBond" class="org.openscience.cdk.isomorphism.matchers.smarts.RingIdentifierAtom" />
	<class name="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Point3 getIntersectionWith(org.xmlcml.euclid.Plane3,org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Vector3 getVector()" class="org.xmlcml.euclid.Plane3" />
	<method signature="boolean isAntiparallelTo(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Point3 getClosestPointTo(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3,double)" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Point3 getIntersectionWith(org.xmlcml.euclid.Line3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Line3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(double,double,double,double)" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Line3 getIntersectionWith(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Angle getAngleMadeWith(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="boolean containsPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="double getDistance()" class="org.xmlcml.euclid.Plane3" />
	<method signature="boolean isParallelTo(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void negative()" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Plane3" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(double[],double)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Plane3" />
	<method signature="org.xmlcml.euclid.Plane3 subtract()" class="org.xmlcml.euclid.Plane3" />
	<method signature="double[] getArray()" class="org.xmlcml.euclid.Plane3" />
	<method signature="double getDistanceFromPoint(org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Plane3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Plane3)" class="org.xmlcml.euclid.Plane3" />
	<field name="logger" class="org.xmlcml.euclid.Plane3" />
	<field name="array" class="org.xmlcml.euclid.Plane3" />
	<field name="dist" class="org.xmlcml.euclid.Plane3" />
	<field name="vect" class="org.xmlcml.euclid.Plane3" />
	<class name="org.openscience.cdk.interfaces.IMonomer" />
	<method signature="java.lang.String getMonomerType()" class="org.openscience.cdk.interfaces.IMonomer" />
	<method signature="void setMonomerName(java.lang.String)" class="org.openscience.cdk.interfaces.IMonomer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IMonomer" />
	<method signature="void setMonomerType(java.lang.String)" class="org.openscience.cdk.interfaces.IMonomer" />
	<method signature="java.lang.String getMonomerName()" class="org.openscience.cdk.interfaces.IMonomer" />
	<class name="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getConnectedAtomContainer()" class="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<method signature="boolean isFilled()" class="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<method signature="java.util.Collection elements(java.lang.Class)" class="org.openscience.jchempaint.renderer.selection.AbstractSelection$1" />
	<class name="org.openscience.jchempaint.action.SaveAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.SaveAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.SaveAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.action.SaveAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.SaveAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.SaveAction" />
	<class name="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void TotalHCount()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void SmartsExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void NoHydrogenElement()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_1()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_5()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void TotalConnectivity()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void AtomicMass()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ReInit(java.io.Reader)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void NonCHHeavyAtom()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_3_3()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void RingConnectivity()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void Chirality()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token getToken(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_3R_17()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void RecursiveSmartsExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void LowAndBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ExplicitAtomExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ExplicitHighAndExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token getNextToken()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.ASTAtom AtomExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void SimpleBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ImplicitHighAndExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.Token jj_consume_token(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_3_2()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.ParseException generateParseException()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="int jj_ntk()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void HybridizationNumber()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.isomorphism.matchers.QueryAtomContainer parse(java.lang.String)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_add_error_token(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void NotExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void PeriodicGroupNumber()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_0()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void SmallestRingSize()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_rescan_token()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="org.openscience.cdk.smiles.smarts.parser.ASTStart Start()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ExplicitConnectivity()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ReactionExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void Charge()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void AnyAtom()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_3()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void PrimitiveAtomExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void Aliphatic()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void NotBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_2_3(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_save(int,int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_2()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void GroupExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void disable_tracing()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void OrExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void RingMembership()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void enable_tracing()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void jj_la1_4()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void AtomicNumber()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_2_2(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ReInit(org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void RingIdentifier()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_3_1()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void LowAndExpression()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void OrBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_2_1(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParserTokenManager)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ExplicitHighAndBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_scan_token(int)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void Valence()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ImplicitHCount()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ReInit(java.io.InputStream)" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void Aromatic()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="void ImplicitHighAndBond()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<method signature="boolean jj_3R_18()" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_nt" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_endpos" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_0" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_2_rtns" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_lasttokens" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="token_source" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_gc" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_scanpos" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="lookingAhead" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_gen" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_1" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_4" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_expentry" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_5" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="token" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_2" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_lastpos" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_expentries" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_input_stream" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_la1_3" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_rescan" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jjtree" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_ls" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_kind" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_semLA" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<field name="jj_ntk" class="org.openscience.cdk.smiles.smarts.parser.SMARTSParser" />
	<class name="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="int getColumns()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRowsAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getTableType()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setColumns(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableContentElements()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="int getRows()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayListElements()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableRowListElements()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void addTableContent(org.xmlcml.cml.element.AbstractTableContent)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setRows(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void addArrayList(org.xmlcml.cml.element.AbstractArrayList)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setTableType(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void addTableHeader(org.xmlcml.cml.element.AbstractTableHeader)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setRows(int)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getColumnsAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableHeaderElements()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setColumns(int)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTableTypeAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractTable)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void addTableRowList(org.xmlcml.cml.element.AbstractTableRowList)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractTable" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_columns" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_rows" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_tabletype" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractTable" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractTable" />
	<class name="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer setInitialCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer setCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="java.lang.String removeAromaticityFlagsFromHoseCode(java.lang.String)" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="pOC" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="p_n" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="pOP" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="hcg" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="p_p" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<field name="pOS" class="org.openscience.cdk.charges.AtomTypeCharges" />
	<class name="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.BGFFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.BGFFormat" />
	<class name="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.Real2Range getRange2()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.Real2 elementAt(int)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void add(org.xmlcml.euclid.Real2)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.RealArray getYArray()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void deleteElement(int)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealArray,org.xmlcml.euclid.RealArray)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="int size()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="void add(org.xmlcml.euclid.Real2Array)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.RealArray getXArray()" class="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.Real2 get(int)" class="org.xmlcml.euclid.Real2Array" />
	<method signature="org.xmlcml.euclid.Real2Array createFromPairs(java.lang.String,java.lang.String)" class="org.xmlcml.euclid.Real2Array" />
	<field name="yarr" class="org.xmlcml.euclid.Real2Array" />
	<field name="xarr" class="org.xmlcml.euclid.Real2Array" />
	<field name="nelem" class="org.xmlcml.euclid.Real2Array" />
	<class name="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setM(int)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setSymbol(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getSymbolAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLElements getGradientElements()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getAtomRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setL(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setAtomRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getSymbol()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getLm()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLmAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void addGradient(org.xmlcml.cml.element.AbstractGradient)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setLm(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getNAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getAtomRef()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractAtomicBasisFunction)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="int getM()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="int getN()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setL(int)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setN(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="int getL()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setM(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<method signature="void setN(int)" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_atomref" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_lm" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_l" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_n" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_m" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<field name="_att_symbol" class="org.xmlcml.cml.element.AbstractAtomicBasisFunction" />
	<class name="org.openscience.cdk.charges.IChargeCalculator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.IChargeCalculator" />
	<class name="org.openscience.cdk.charges.Polarizability" />
	<method signature="double calculateBondPolarizability(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IBond)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="double getPolarizabilitiyFactorForAtom(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="double calculateGHEffectiveAtomPolarizability(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,boolean,int[][])" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="void addExplicitHydrogens(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="int getNumberOfHydrogen(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="double getKJPolarizabilityFactor(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="double calculateGHEffectiveAtomPolarizability(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,int,boolean)" class="org.openscience.cdk.charges.Polarizability" />
	<method signature="double calculateKJMeanMolecularPolarizability(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.Polarizability" />
	<field name="logger" class="org.openscience.cdk.charges.Polarizability" />
	<class name="org.xmlcml.cml.element.CMLReactionScheme" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLReactionScheme)" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<field name="NS" class="org.xmlcml.cml.element.CMLReactionScheme" />
	<class name="org.xmlcml.cml.interfacex.HasArraySize" />
	<method signature="java.util.List getStringValues()" class="org.xmlcml.cml.interfacex.HasArraySize" />
	<method signature="int getArraySize()" class="org.xmlcml.cml.interfacex.HasArraySize" />
	<method signature="int[] getInts()" class="org.xmlcml.cml.interfacex.HasArraySize" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.interfacex.HasArraySize" />
	<method signature="double[] getDoubles()" class="org.xmlcml.cml.interfacex.HasArraySize" />
	<class name="org.openscience.cdk.interfaces.ISingleElectron" />
	<method signature="org.openscience.cdk.interfaces.IAtom getAtom()" class="org.openscience.cdk.interfaces.ISingleElectron" />
	<method signature="void setAtom(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.ISingleElectron" />
	<method signature="boolean contains(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.interfaces.ISingleElectron" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.ISingleElectron" />
	<class name="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getTerm()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRowsAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractEntry)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinInclusiveAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setColumns(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxExclusiveAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setLength(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinExclusive(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setPattern(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getRows()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getFractionDigits()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinInclusive(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinLength(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxLength(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinExclusive(double)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getWhiteSpaceAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setRows(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setTerm(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getLengthAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setTotalDigits(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getDataType()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setRows(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxInclusive(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setDataType(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxInclusiveAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTermAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMaxLengthAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getUnitsAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getMaxLength()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="double getMinExclusive()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getWhiteSpace()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getMinLength()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxInclusive(double)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getColumns()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinLength(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setFractionDigits(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setFractionDigits(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinLengthAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getMinExclusiveAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getPattern()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getPatternAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="double getMinInclusive()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setWhiteSpace(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setLength(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMinInclusive(double)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getTotalDigits()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxLength(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxExclusive(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTotalDigitsAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getUnits()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDataTypeAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setUnits(java.lang.String)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="double getMaxExclusive()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getColumnsAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="double getMaxInclusive()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setTotalDigits(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="int getLength()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setColumns(int)" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getFractionDigitsAttribute()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractEntry" />
	<method signature="void setMaxExclusive(double)" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_minexclusive" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_maxlength" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_units" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_columns" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_fractiondigits" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_whitespace" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_totaldigits" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_term" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_maxinclusive" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_length" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_mininclusive" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_rows" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_maxexclusive" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_pattern" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_minlength" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractEntry" />
	<field name="_att_datatype" class="org.xmlcml.cml.element.AbstractEntry" />
	<class name="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="void setWeight(double)" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="void &lt;init&gt;(java.lang.Object,java.lang.Object)" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="double getWeight()" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="java.lang.Object getTarget()" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="boolean containsVertex(java.lang.Object)" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="java.lang.Object clone()" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="java.lang.Object oppositeVertex(java.lang.Object)" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<method signature="java.lang.Object getSource()" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<field name="m_source" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<field name="serialVersionUID" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<field name="m_target" class="org._3pq.jgrapht.edge.DefaultEdge" />
	<class name="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PubChemSubstanceXMLFormat" />
	<class name="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void mouseClickedDouble(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void mouseClickedDown(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="java.util.List findMergeCandidates(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.controller.IChemModelRelay,org.openscience.jchempaint.controller.ControllerModuleAdapter)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="java.util.Map calculateMerge(java.util.Set)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void setID(java.lang.String)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void mouseMove(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void mouseClickedUp(javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void endMove()" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="java.lang.String getDrawModeString()" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="java.lang.String getID()" class="org.openscience.jchempaint.controller.MoveModule" />
	<method signature="void mouseDrag(javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="switchtowhenoutside" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="atomsToMove" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="logger" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="start2DCenter" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="offset" class="org.openscience.jchempaint.controller.MoveModule" />
	<field name="ID" class="org.openscience.jchempaint.controller.MoveModule" />
	<class name="org._3pq.jgrapht.traverse.CrossComponentIterator$Specifics" />
	<method signature="java.util.List edgesOf(java.lang.Object)" class="org._3pq.jgrapht.traverse.CrossComponentIterator$Specifics" />
	<method signature="void &lt;init&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$Specifics" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.CrossComponentIterator$Specifics" />
	<class name="org.openscience.cdk.ringsearch.Path" />
	<method signature="void revert()" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="org.openscience.cdk.ringsearch.Path join(org.openscience.cdk.ringsearch.Path,org.openscience.cdk.ringsearch.Path,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="java.lang.String toString(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.Path" />
	<method signature="int getIntersectionSize(org.openscience.cdk.ringsearch.Path)" class="org.openscience.cdk.ringsearch.Path" />
	<field name="serialVersionUID" class="org.openscience.cdk.ringsearch.Path" />
	<class name="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="void remove()" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="void setReuseEvents(boolean)" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="void removeTraversalListener(org._3pq.jgrapht.event.TraversalListener)" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="boolean isReuseEvents()" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="void addTraversalListener(org._3pq.jgrapht.event.TraversalListener)" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<method signature="boolean isCrossComponentTraversal()" class="org._3pq.jgrapht.traverse.GraphIterator" />
	<class name="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.ABINITFormat" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<method signature="int getRC(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.TotalRingConnectionAtom" />
	<class name="org.xmlcml.cml.base.CMLLog" />
	<method signature="void writeXML(java.io.Writer)" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void write(java.io.Writer)" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void add(java.io.File,java.lang.String)" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void add(java.lang.Throwable,java.lang.String)" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void add(java.lang.String)" class="org.xmlcml.cml.base.CMLLog" />
	<method signature="void add(org.xmlcml.cml.base.CMLLog$Severity,java.lang.String)" class="org.xmlcml.cml.base.CMLLog" />
	<field name="messageList" class="org.xmlcml.cml.base.CMLLog" />
	<class name="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.Chem3D_Cartesian_1Format" />
	<class name="org.openscience.cdk.interfaces.IFragmentAtom" />
	<method signature="void setExpanded(boolean)" class="org.openscience.cdk.interfaces.IFragmentAtom" />
	<method signature="void setFragment(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.interfaces.IFragmentAtom" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getFragment()" class="org.openscience.cdk.interfaces.IFragmentAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IFragmentAtom" />
	<method signature="boolean isExpanded()" class="org.openscience.cdk.interfaces.IFragmentAtom" />
	<class name="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="java.util.List getUniqueMatchingPharmacophoreAtoms()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="boolean hasDistanceConstraints(org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="java.util.List getAtomMappings(java.util.List,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="boolean checkQuery(org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="java.util.List getTargetQueryBondMappings()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer getPharmacophoreMolecule(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="java.util.List getMatchingPharmacophoreAtoms()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="boolean hasAngleConstraints(org.openscience.cdk.isomorphism.matchers.IQueryAtomContainer)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="org.openscience.cdk.pharmacophore.PharmacophoreQuery getPharmacophoreQuery()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="javax.vecmath.Point3d getEffectiveCoordinates(org.openscience.cdk.interfaces.IAtomContainer,java.util.List)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="int[] intIndices(java.util.List)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="void setPharmacophoreQuery(org.openscience.cdk.pharmacophore.PharmacophoreQuery)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="java.util.List getMatchingPharmacophoreBonds()" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.pharmacophore.PharmacophoreQuery)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtomContainer,boolean)" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="bondMapHash" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="pharmacophoreMolecule" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="pharmacophoreQuery" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="bondMapping" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="matchingPAtoms" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="logger" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<field name="matchingPBonds" class="org.openscience.cdk.pharmacophore.PharmacophoreMatcher" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTAliphatic" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTAliphatic" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAliphatic" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTAliphatic" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTAliphatic" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.AliphaticAtom" />
	<class name="org.xmlcml.cml.base.CMLElements" />
	<method signature="nu.xom.Element get(int)" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="java.lang.Class getType()" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="java.util.Iterator iterator()" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="void &lt;init&gt;(nu.xom.Elements)" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="int size()" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="java.util.List getList()" class="org.xmlcml.cml.base.CMLElements" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.CMLElements" />
	<field name="elementsArray" class="org.xmlcml.cml.base.CMLElements" />
	<field name="type" class="org.xmlcml.cml.base.CMLElements" />
	<class name="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="org.openscience.cdk.interfaces.IChemModel getChemModel(int)" class="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="java.lang.Iterable chemModels()" class="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="void addChemModel(org.openscience.cdk.interfaces.IChemModel)" class="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="int getChemModelCount()" class="org.openscience.cdk.interfaces.IChemSequence" />
	<method signature="void removeChemModel(int)" class="org.openscience.cdk.interfaces.IChemSequence" />
	<class name="org.openscience.cdk.AtomContainer$3" />
	<method signature="java.util.Iterator iterator()" class="org.openscience.cdk.AtomContainer$3" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.AtomContainer)" class="org.openscience.cdk.AtomContainer$3" />
	<field name="this$0" class="org.openscience.cdk.AtomContainer$3" />
	<class name="org.openscience.cdk.libio.md.Residue" />
	<method signature="int getNumber()" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void setParentMolecule(org.openscience.cdk.libio.md.MDMolecule)" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void setName(java.lang.String)" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void setNumber(int)" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="org.openscience.cdk.libio.md.MDMolecule getParentMolecule()" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="java.lang.String getName()" class="org.openscience.cdk.libio.md.Residue" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.interfaces.IAtomContainer,int,org.openscience.cdk.libio.md.MDMolecule)" class="org.openscience.cdk.libio.md.Residue" />
	<field name="serialVersionUID" class="org.openscience.cdk.libio.md.Residue" />
	<field name="parentMolecule" class="org.openscience.cdk.libio.md.Residue" />
	<field name="name" class="org.openscience.cdk.libio.md.Residue" />
	<field name="number" class="org.openscience.cdk.libio.md.Residue" />
	<class name="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<method signature="void setChemObject(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<method signature="void constructPanel()" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<method signature="void applyChanges()" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<field name="labelField" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.dialog.editor.PseudoAtomEditor" />
	<class name="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.DMol3Format" />
	<field name="myself" class="org.openscience.cdk.io.formats.DMol3Format" />
	<class name="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="boolean accepts(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void fireFrameRead()" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void remove()" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void addChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="org.openscience.cdk.io.setting.IOSetting[] getIOSettings()" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void removeChemObjectIOListener(org.openscience.cdk.io.listener.IChemObjectIOListener)" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<method signature="void fireIOSettingQuestion(org.openscience.cdk.io.setting.IOSetting)" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<field name="frameReadEvent" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<field name="listenerList" class="org.openscience.cdk.io.iterator.event.DefaultEventChemObjectReader" />
	<class name="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="java.lang.String getJavaShortClassName()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute,java.lang.String)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.base.IntSTAttribute)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void setCMLValue(java.lang.String)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void setCMLValue(int)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="java.lang.String getJavaType()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="int getInt()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="java.lang.Object getCMLValue()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void &lt;init&gt;(nu.xom.Attribute)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="java.lang.String getJavaGetMethod()" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void checkValue(int)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.cml.base.IntSTAttribute" />
	<field name="i" class="org.xmlcml.cml.base.IntSTAttribute" />
	<field name="JAVA_SHORT_CLASS" class="org.xmlcml.cml.base.IntSTAttribute" />
	<field name="JAVA_GET_METHOD" class="org.xmlcml.cml.base.IntSTAttribute" />
	<field name="JAVA_TYPE" class="org.xmlcml.cml.base.IntSTAttribute" />
	<class name="org.xmlcml.cml.element.CMLSpectrumData" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLSpectrumData)" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<field name="NS" class="org.xmlcml.cml.element.CMLSpectrumData" />
	<class name="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.YasaraFormat" />
	<class name="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="boolean matches(int,java.lang.String)" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.CrystClustFormat" />
	<class name="org.openscience.cdk.charges.MMFF94PartialCharges" />
	<method signature="org.openscience.cdk.interfaces.IAtomContainer assignMMFF94PartialCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.MMFF94PartialCharges" />
	<method signature="void calculateCharges(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.charges.MMFF94PartialCharges" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.charges.MMFF94PartialCharges" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.charges.MMFF94PartialCharges" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<field name="numSSSR" class="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.RingMembershipAtom" />
	<class name="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<method signature="boolean matches(org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<field name="smallestRingSize" class="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<field name="serialVersionUID" class="org.openscience.cdk.isomorphism.matchers.smarts.SmallestRingAtom" />
	<class name="org.openscience.cdk.io.RssWriter" />
	<method signature="void setPublisher(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getCreatormap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void close()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setMultiMap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getLinkmap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setImagelink(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setDescription(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setAbout(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setDatemap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getInchimap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setCreator(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setTitlemap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getTitlemap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setTitle(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getMultiMap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setInchimap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setLink(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setLinkmap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="java.util.Map getDatemap()" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setTimezone(java.lang.String)" class="org.openscience.cdk.io.RssWriter" />
	<method signature="void setCreatormap(java.util.Map)" class="org.openscience.cdk.io.RssWriter" />
	<field name="inchimap" class="org.openscience.cdk.io.RssWriter" />
	<field name="about" class="org.openscience.cdk.io.RssWriter" />
	<field name="creatormap" class="org.openscience.cdk.io.RssWriter" />
	<field name="title" class="org.openscience.cdk.io.RssWriter" />
	<field name="titlemap" class="org.openscience.cdk.io.RssWriter" />
	<field name="link" class="org.openscience.cdk.io.RssWriter" />
	<field name="publisher" class="org.openscience.cdk.io.RssWriter" />
	<field name="NS_DCELEMENTS" class="org.openscience.cdk.io.RssWriter" />
	<field name="NS_RSS10" class="org.openscience.cdk.io.RssWriter" />
	<field name="linkmap" class="org.openscience.cdk.io.RssWriter" />
	<field name="creator" class="org.openscience.cdk.io.RssWriter" />
	<field name="timezone" class="org.openscience.cdk.io.RssWriter" />
	<field name="datemap" class="org.openscience.cdk.io.RssWriter" />
	<field name="description" class="org.openscience.cdk.io.RssWriter" />
	<field name="writer" class="org.openscience.cdk.io.RssWriter" />
	<field name="NS_RDF" class="org.openscience.cdk.io.RssWriter" />
	<field name="imagelink" class="org.openscience.cdk.io.RssWriter" />
	<field name="multiMap" class="org.openscience.cdk.io.RssWriter" />
	<class name="org._3pq.jgrapht.event.VertexSetListener" />
	<method signature="void vertexRemoved(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org._3pq.jgrapht.event.VertexSetListener" />
	<method signature="void vertexAdded(org._3pq.jgrapht.event.GraphVertexChangeEvent)" class="org._3pq.jgrapht.event.VertexSetListener" />
	<method signature="void &lt;clinit&gt;()" class="org._3pq.jgrapht.event.VertexSetListener" />
	<class name="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<method signature="java.lang.Object readRecord(int)" class="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<method signature="int size()" class="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<method signature="java.lang.Object first()" class="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<method signature="java.lang.Object last()" class="org.openscience.cdk.io.random.IRandomAccessChemObjectReader" />
	<class name="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="java.io.File saveAsSMILES(org.openscience.cdk.interfaces.IChemModel,java.io.File)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="java.io.File saveAsRXN(org.openscience.cdk.interfaces.IChemModel,java.io.File)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="boolean askIOSettings()" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="boolean getWasCancelled()" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="void actionPerformed(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.JChemPaintPanel,boolean)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="java.io.File saveAsCML2(org.openscience.cdk.interfaces.IChemObject,java.io.File)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="java.io.File saveAsMol(org.openscience.cdk.interfaces.IChemModel,java.io.File)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="void saveAs(java.awt.event.ActionEvent)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<method signature="java.io.File saveAsCDKSourceCode(org.openscience.cdk.interfaces.IChemModel,java.io.File)" class="org.openscience.jchempaint.action.SaveAsAction" />
	<field name="type" class="org.openscience.jchempaint.action.SaveAsAction" />
	<field name="wasCancelled" class="org.openscience.jchempaint.action.SaveAsAction" />
	<field name="cow" class="org.openscience.jchempaint.action.SaveAsAction" />
	<field name="serialVersionUID" class="org.openscience.jchempaint.action.SaveAsAction" />
	<class name="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Transform3 concatenate(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Transform3 clone(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void setTranslation(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Line3,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform3" />
	<method signature="java.lang.String getCrystallographicString()" class="org.xmlcml.euclid.Transform3" />
	<method signature="int getAxisAndAngle(org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform3" />
	<method signature="java.lang.String trans(double)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Axis$Axis3,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Transform3$Type getTransformationType()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(java.lang.String)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Transform3 clone(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="int setTransformationType(org.xmlcml.euclid.Transform3$Type)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.RealArray getScales()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealSquareMatrix,org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.RealSquareMatrix getRotationMatrix()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.RealSquareMatrix)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Angle,org.xmlcml.euclid.Angle,org.xmlcml.euclid.Angle)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform3,org.xmlcml.euclid.Point3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Vector3 getTranslation()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Vector3,org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="void checkNotNull(org.xmlcml.euclid.Transform3)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Point3 getCentreOfRotation()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Transform3$Type)" class="org.xmlcml.euclid.Transform3" />
	<method signature="org.xmlcml.euclid.Transform3$Type checkMatrix()" class="org.xmlcml.euclid.Transform3" />
	<method signature="void incrementTranslation(org.xmlcml.euclid.Vector3)" class="org.xmlcml.euclid.Transform3" />
	<field name="oper" class="org.xmlcml.euclid.Transform3" />
	<field name="trnsfrm" class="org.xmlcml.euclid.Transform3" />
	<field name="logger" class="org.xmlcml.euclid.Transform3" />
	<class name="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPeakStructure)" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="java.util.List getCouplingsFrom(org.xmlcml.cml.element.CMLMolecule)" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="boolean hasValidNestedPeakStructure()" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<field name="NS" class="org.xmlcml.cml.element.CMLPeakStructure" />
	<class name="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="boolean isXMLBased()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getInstance()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="int getRequiredDataFeatures()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="int getSupportedDataFeatures()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String[] getNameExtensions()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String getPreferredNameExtension()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String getReaderClassName()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String getMIMEType()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String getWriterClassName()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<method signature="java.lang.String getFormatName()" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<field name="myself" class="org.openscience.cdk.io.formats.PDBMLFormat" />
	<class name="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="int currentSegment(float[])" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="void &lt;init&gt;(org.openscience.jchempaint.renderer.elements.GeneralPath,java.awt.geom.AffineTransform)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="void next()" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="int type(org.openscience.jchempaint.renderer.elements.path.Type)" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="int currentSegment(double[])" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="boolean isDone()" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<method signature="int getWindingRule()" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<field name="index" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<field name="val$path" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<field name="val$transform" class="org.openscience.jchempaint.renderer.visitor.AWTDrawVisitor$1" />
	<class name="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getTableRowElements()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="int getColumns()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLTable)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.element.CMLTableRowList getOrCreateTableRowList()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void writeRows(java.io.Writer,org.xmlcml.cml.element.CMLTableHeader,org.xmlcml.cml.base.CMLElements)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void checkRowsAndColumns()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void setTableType(java.lang.String)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void addArray(org.xmlcml.cml.element.CMLArray)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="java.util.List getColumnValuesList()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.element.CMLTable$TableType getTableTypeEnum()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void setTableType(org.xmlcml.cml.element.CMLTable$TableType)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.element.CMLArrayList getOrCreateArrayList()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="int getRows()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="boolean check(org.xmlcml.cml.element.CMLTable$TableType)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void writeContent(java.io.Writer,org.xmlcml.cml.element.CMLTableHeader,org.xmlcml.cml.element.CMLTableContent)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="void writeArrays(java.io.Writer,java.util.List)" class="org.xmlcml.cml.element.CMLTable" />
	<method signature="org.xmlcml.cml.base.CMLElements getArrayElements()" class="org.xmlcml.cml.element.CMLTable" />
	<field name="NS" class="org.xmlcml.cml.element.CMLTable" />
	<class name="org.openscience.cdk.graph.ConnectivityChecker" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet partitionIntoMolecules(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.ConnectivityChecker" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.graph.ConnectivityChecker" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.graph.ConnectivityChecker" />
	<method signature="boolean isConnected(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.graph.ConnectivityChecker" />
	<class name="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<method signature="void &lt;init&gt;(javax.vecmath.Point2d,javax.vecmath.Point2d,javax.vecmath.Point2d)" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<method signature="float[] points()" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<field name="p3" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<field name="p1" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<field name="p2" class="org.openscience.jchempaint.renderer.elements.path.CubicTo" />
	<class name="org.openscience.cdk.io.SMILESReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void close()" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="org.openscience.cdk.interfaces.IMoleculeSet readMoleculeSet(org.openscience.cdk.interfaces.IMoleculeSet)" class="org.openscience.cdk.io.SMILESReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.SMILESReader" />
	<field name="input" class="org.openscience.cdk.io.SMILESReader" />
	<field name="sp" class="org.openscience.cdk.io.SMILESReader" />
	<field name="logger" class="org.openscience.cdk.io.SMILESReader" />
	<class name="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findAllRings(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Integer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findAllRingsInIsolatedRingSystem(org.openscience.cdk.interfaces.IAtomContainer,java.lang.Integer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void remove(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtomContainer,java.util.List,org.openscience.cdk.interfaces.IRingSet,java.lang.Integer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void initPathGraph(org.openscience.cdk.interfaces.IAtomContainer,java.util.List)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void checkTimeout()" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void detectRings(java.util.List,org.openscience.cdk.interfaces.IRingSet,org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.interfaces.IAtom selectAtom(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void doSearch(org.openscience.cdk.interfaces.IAtomContainer,java.util.List,org.openscience.cdk.interfaces.IRingSet,java.lang.Integer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="long getTimeout()" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findAllRings(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.ringsearch.AllRingsFinder setTimeout(long)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<method signature="org.openscience.cdk.interfaces.IRingSet findAllRingsInIsolatedRingSystem(org.openscience.cdk.interfaces.IAtomContainer)" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="debug" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="timeout" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="removePaths" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="newPaths" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="potentialRings" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="logger" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="startTime" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<field name="originalAc" class="org.openscience.cdk.ringsearch.AllRingsFinder" />
	<class name="org.xmlcml.euclid.Int2Range" />
	<method signature="org.xmlcml.euclid.IntRange getYRange()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Int2Range)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="org.xmlcml.euclid.IntRange getXRange()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="org.xmlcml.euclid.Int2Range intersectionWith(org.xmlcml.euclid.Int2Range)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="void add(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="boolean isEqualTo(org.xmlcml.euclid.Int2Range)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="boolean includes(org.xmlcml.euclid.Int2)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="boolean includes(org.xmlcml.euclid.Int2Range)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="java.lang.String toString()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="boolean isValid()" class="org.xmlcml.euclid.Int2Range" />
	<method signature="org.xmlcml.euclid.Int2Range plus(org.xmlcml.euclid.Int2Range)" class="org.xmlcml.euclid.Int2Range" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.IntRange,org.xmlcml.euclid.IntRange)" class="org.xmlcml.euclid.Int2Range" />
	<field name="yrange" class="org.xmlcml.euclid.Int2Range" />
	<field name="xrange" class="org.xmlcml.euclid.Int2Range" />
	<class name="org.openscience.cdk.smiles.smarts.parser.ASTOrBond" />
	<method signature="java.lang.Object jjtAccept(org.openscience.cdk.smiles.smarts.parser.SMARTSParserVisitor,java.lang.Object)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrBond" />
	<method signature="void &lt;init&gt;(org.openscience.cdk.smiles.smarts.parser.SMARTSParser,int)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrBond" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.smiles.smarts.parser.ASTOrBond" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.smiles.smarts.parser.ASTOrBond" />
	<class name="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void setWriter(java.io.OutputStream)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void writeMolecule(org.openscience.cdk.interfaces.IMolecule)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void close()" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void &lt;init&gt;(java.io.OutputStream)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void &lt;init&gt;(java.io.Writer)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void setWriter(java.io.Writer)" class="org.openscience.cdk.io.Mol2Writer" />
	<method signature="void write(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.Mol2Writer" />
	<field name="writer" class="org.openscience.cdk.io.Mol2Writer" />
	<field name="logger" class="org.openscience.cdk.io.Mol2Writer" />
	<field name="matcher" class="org.openscience.cdk.io.Mol2Writer" />
	<class name="org.openscience.cdk.formula.rules.IRule" />
	<method signature="double validate(org.openscience.cdk.interfaces.IMolecularFormula)" class="org.openscience.cdk.formula.rules.IRule" />
	<method signature="void setParameters(java.lang.Object[])" class="org.openscience.cdk.formula.rules.IRule" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.formula.rules.IRule" />
	<method signature="java.lang.Object[] getParameters()" class="org.openscience.cdk.formula.rules.IRule" />
	<class name="org.openscience.cdk.io.HINReader" />
	<method signature="org.openscience.cdk.io.formats.IResourceFormat getFormat()" class="org.openscience.cdk.io.HINReader" />
	<method signature="boolean accepts(java.lang.Class)" class="org.openscience.cdk.io.HINReader" />
	<method signature="org.openscience.cdk.interfaces.IChemObject read(org.openscience.cdk.interfaces.IChemObject)" class="org.openscience.cdk.io.HINReader" />
	<method signature="void close()" class="org.openscience.cdk.io.HINReader" />
	<method signature="void setReader(java.io.Reader)" class="org.openscience.cdk.io.HINReader" />
	<method signature="java.lang.String getMolName(java.lang.String)" class="org.openscience.cdk.io.HINReader" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.io.HINReader" />
	<method signature="org.openscience.cdk.interfaces.IChemFile readChemFile(org.openscience.cdk.interfaces.IChemFile)" class="org.openscience.cdk.io.HINReader" />
	<method signature="void &lt;init&gt;(java.io.InputStream)" class="org.openscience.cdk.io.HINReader" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.io.HINReader" />
	<method signature="void setReader(java.io.InputStream)" class="org.openscience.cdk.io.HINReader" />
	<method signature="boolean isConnected(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.cdk.io.HINReader" />
	<method signature="void &lt;init&gt;(java.io.Reader)" class="org.openscience.cdk.io.HINReader" />
	<field name="input" class="org.openscience.cdk.io.HINReader" />
	<class name="org.xmlcml.euclid.EuclidConstants" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_QUERY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_COMMA" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_DOLLAR" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_SPACE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_COLON" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_COLON" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_UNDER" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_BACKSLASH" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_NEWLINE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_RSQUARE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_AMP" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_STAR" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="F_S" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_TAB" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_RANGLE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_EQUALS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_HASH" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_SHRIEK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_PERIOD" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_RCURLY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="PUNC" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_LSQUARE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_SPACE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_LANGLE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_NL" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_TILDE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_BACKSLASH" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_HASH" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="U_S" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_RETURN" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_QUOT" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_LBRAK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_NL" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_RETURN" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_QUOT" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_PERIOD" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_SLASH" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_NEWLINE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_TILDE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_RANGLE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_SHRIEK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_ATSIGN" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_TAB" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_POUND" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_FORMFEED" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_LBRAK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_LSQUARE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="EPS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_UNDER" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_RSQUARE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_PLUS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_EMPTY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="NONWHITEPUNC" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_MINUS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_LCURLY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_SEMICOLON" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_CARET" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_QUERY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="WHITESPACE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_CARET" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_NBSP" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_PIPE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_APOS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_RBRAK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_SEMICOLON" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_RBRAK" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="TWO_THIRDS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_PERCENT" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_PLUS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_AMP" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_LANGLE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_COMMA" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_PERCENT" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_RCURLY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_MINUS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="ONE_THIRD" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_APOS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_EQUALS" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_FORMFEED" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_ATSIGN" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_STAR" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_POUND" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_PIPE" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_WHITEREGEX" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_LCURLY" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="C_DOLLAR" class="org.xmlcml.euclid.EuclidConstants" />
	<field name="S_SLASH" class="org.xmlcml.euclid.EuclidConstants" />
	<class name="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.base.CMLElement makeElementInContext(nu.xom.Element)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.euclid.Vector3 getEuclidVector3()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="boolean isZero()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 createCMLVector3(org.xmlcml.euclid.Vector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;(double,double,double)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="boolean longerThan(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 subtract(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="nu.xom.Node copy()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLVector3,double)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void setElementAt(int,double)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 transform(org.xmlcml.cml.element.CMLTransform3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLPoint3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void setXYZ3(double[])" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="boolean isEqualTo(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="java.lang.String getString()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getNonColinearVector()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="double getLength()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 projectOnto(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void finishMakingElement(nu.xom.Element)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 multiplyBy(double)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 normalize()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getCrossProduct(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.euclid.Angle getAngleMadeWith(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 getPerpendicularVector()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.euclid.Vector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="double elementAt(int)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="double[] getXYZ3()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="org.xmlcml.cml.element.CMLVector3 plus(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;(double[])" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="boolean isColinearVector(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="double getScalarTripleProduct(org.xmlcml.cml.element.CMLVector3,org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<method signature="double dot(org.xmlcml.cml.element.CMLVector3)" class="org.xmlcml.cml.element.CMLVector3" />
	<field name="NS" class="org.xmlcml.cml.element.CMLVector3" />
	<class name="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<method signature="int length()" class="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<method signature="void &lt;init&gt;(int)" class="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<field name="size" class="org.openscience.cdk.qsar.result.IntegerArrayResultType" />
	<class name="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void addAttribute(nu.xom.Attribute)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getRole()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void &lt;init&gt;(org.xmlcml.cml.element.AbstractParameterList)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getId()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getTitleAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setConvention(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void addMetadataList(org.xmlcml.cml.element.AbstractMetadataList)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void addParameter(org.xmlcml.cml.element.AbstractParameter)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getIdAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getConventionAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getDictRef()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setTitle(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getDictRefAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getConvention()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLElements getNameElements()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setId(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRefAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void addName(org.xmlcml.cml.element.AbstractName)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void addParameterList(org.xmlcml.cml.element.AbstractParameterList)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getRef()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLElements getMetadataListElements()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLElements getParameterListElements()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void &lt;clinit&gt;()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLElements getParameterElements()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="org.xmlcml.cml.base.CMLAttribute getRoleAttribute()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="java.lang.String getTitle()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void &lt;init&gt;()" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setDictRef(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<method signature="void setRole(java.lang.String)" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_role" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_title" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_ref" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_convention" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="TAG" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_dictref" class="org.xmlcml.cml.element.AbstractParameterList" />
	<field name="_att_id" class="org.xmlcml.cml.element.AbstractParameterList" />
	<class name="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="void decorate(org.openscience.jchempaint.renderer.elements.TextGroupElement,org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="void &lt;init&gt;()" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.IRenderingElement generate(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="boolean hideAtomSymbol(org.openscience.cdk.interfaces.IAtom,org.openscience.jchempaint.renderer.RendererModel)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="java.util.List getPosition(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="java.util.Stack getUnusedPositions(org.openscience.cdk.interfaces.IAtomContainer,org.openscience.cdk.interfaces.IAtom)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<method signature="org.openscience.jchempaint.renderer.elements.TextGroupElement$Position getNextPosition(java.util.Stack)" class="org.openscience.jchempaint.renderer.generators.ExtendedAtomGenerator" />
	<class name="org.openscience.cdk.templates.AminoAcids" />
	<method signature="java.lang.String convertOneLetterCodeToThreeLetterCode(java.lang.String)" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="java.util.Map getHashMapBySingleCharCode()" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="java.lang.String convertThreeLetterCodeToOneLetterCode(java.lang.String)" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="java.util.HashMap getHashMapByThreeLetterCode()" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="int[][] aaBondInfo()" class="org.openscience.cdk.templates.AminoAcids" />
	<method signature="org.openscience.cdk.AminoAcid[] createAAs()" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="aminoAcids" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="NO_ATOMS" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="RESIDUE_NAME" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="logger" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="NO_BONDS" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="RESIDUE_NAME_SHORT" class="org.openscience.cdk.templates.AminoAcids" />
	<field name="ID" class="org.openscience.cdk.templates.AminoAcids" />
	<class name="org.openscience.cdk.BioPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IMonomer,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.BioPolymer" />
	<method signature="org.openscience.cdk.interfaces.IStrand getStrand(java.lang.String)" class="org.openscience.cdk.BioPolymer" />
	<method signature="void &lt;clinit&gt;()" class="org.openscience.cdk.BioPolymer" />
	<method signature="java.util.Map getStrands()" class="org.openscience.cdk.BioPolymer" />
	<method signature="java.lang.Object clone()" class="org.openscience.cdk.BioPolymer" />
	<method signature="void addAtom(org.openscience.cdk.interfaces.IAtom,org.openscience.cdk.interfaces.IStrand)" class="org.openscience.cdk.BioPolymer" />
	<method signature="java.util.Collection getStrandNames()" class="org.openscience.cdk.BioPolymer" />
	<method signature="int getMonomerCount()" class="org.openscience.cdk.BioPolymer" />
	<method signature="int getStrandCount()" class="org.openscience.cdk.BioPolymer" />
	<method signature="java.lang.String toString()" class="org.openscience.cdk.BioPolymer" />
	<method signature="void removeStrand(java.lang.String)" class="org.openscience.cdk.BioPolymer" />
	<method signature="void &lt;init&gt;()" class="org.openscience.cdk.BioPolymer" />
	<method signature="java.util.Collection getMonomerNames()" class="org.openscience.cdk.BioPolymer" />
	<method signature="org.openscience.cdk.interfaces.IMonomer getMonomer(java.lang.String,java.lang.String)" class="org.openscience.cdk.BioPolymer" />
	<field name="strands" class="org.openscience.cdk.BioPolymer" />
	<field name="serialVersionUID" class="org.openscience.cdk.BioPolymer" />
</entrypoints>

<!-- WARNING:Unresolved external dependency: junit.framework.TestCase not found! -->
<!-- writing shrinked /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-nu.jar to /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/shrinkout/jchempaint-applet-nu.jar. -->
<inOutPair in="/home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-nu.jar" out="/home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/shrinkout/jchempaint-applet-nu.jar">
	<removed-code>
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,nu.xom.Attribute$Type)" class="nu.xom.Attribute" />
		<method signature="void setType(nu.xom.Attribute$Type)" class="nu.xom.Attribute" />
		<method signature="boolean isXMLID()" class="nu.xom.Attribute" />
		<method signature="void setLocalName(java.lang.String)" class="nu.xom.Attribute" />
		<method signature="void setNamespace(java.lang.String,java.lang.String)" class="nu.xom.Attribute" />
		<method signature="void &lt;init&gt;(org.xml.sax.XMLReader)" class="nu.xom.Builder" />
		<method signature="void &lt;init&gt;(org.xml.sax.XMLReader,boolean)" class="nu.xom.Builder" />
		<method signature="nu.xom.Document build(java.io.Reader,java.lang.String)" class="nu.xom.Builder" />
		<method signature="nu.xom.Document build(java.lang.String,java.lang.String)" class="nu.xom.Builder" />
		<method signature="nu.xom.NodeFactory getNodeFactory()" class="nu.xom.Builder" />
		<method signature="void &lt;init&gt;(nu.xom.Comment)" class="nu.xom.Comment" />
		<method signature="void setValue(java.lang.String)" class="nu.xom.Comment" />
		<field name="serialVersionUID" class="nu.xom.CycleException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.CycleException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.String)" class="nu.xom.DocType" />
		<method signature="void &lt;init&gt;(java.lang.String)" class="nu.xom.DocType" />
		<method signature="void setRootElementName(java.lang.String)" class="nu.xom.DocType" />
		<method signature="void setInternalDTDSubset(java.lang.String)" class="nu.xom.DocType" />
		<method signature="void setPublicID(java.lang.String)" class="nu.xom.DocType" />
		<method signature="void setSystemID(java.lang.String)" class="nu.xom.DocType" />
		<method signature="void setBaseURI(java.lang.String)" class="nu.xom.DocumentFragment" />
		<field name="NEL" class="nu.xom.EBCDICWriter" />
		<method signature="nu.xom.Element getFirstChildElement(java.lang.String)" class="nu.xom.Element" />
		<method signature="void insertChild(java.lang.String,int)" class="nu.xom.Element" />
		<method signature="nu.xom.Nodes removeChildren()" class="nu.xom.Element" />
		<method signature="void removeNamespaceDeclaration(java.lang.String)" class="nu.xom.Element" />
		<method signature="void setBaseURI(java.lang.String)" class="nu.xom.Element" />
		<field name="serialVersionUID" class="nu.xom.IllegalAddException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.IllegalAddException" />
		<field name="serialVersionUID" class="nu.xom.IllegalCharacterDataException" />
		<field name="serialVersionUID" class="nu.xom.IllegalDataException" />
		<method signature="java.lang.String getData()" class="nu.xom.IllegalDataException" />
		<field name="serialVersionUID" class="nu.xom.IllegalNameException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.IllegalNameException" />
		<field name="serialVersionUID" class="nu.xom.IllegalTargetException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.IllegalTargetException" />
		<class name="nu.xom.Info" />
		<class name="nu.xom.JDK15XML1_0Parser" />
		<field name="serialVersionUID" class="nu.xom.JaxenConnector" />
		<field name="serialVersionUID" class="nu.xom.JaxenNavigator" />
		<field name="serialVersionUID" class="nu.xom.MalformedURIException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.MalformedURIException" />
		<field name="serialVersionUID" class="nu.xom.MultipleParentException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.MultipleParentException" />
		<field name="XML_NAMESPACE" class="nu.xom.Namespace" />
		<field name="serialVersionUID" class="nu.xom.NamespaceConflictException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.NamespaceConflictException" />
		<method signature="void remove(java.lang.String)" class="nu.xom.Namespaces" />
		<field name="serialVersionUID" class="nu.xom.NoSuchAttributeException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.NoSuchAttributeException" />
		<field name="serialVersionUID" class="nu.xom.NoSuchChildException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.NoSuchChildException" />
		<method signature="nu.xom.Node remove(int)" class="nu.xom.Nodes" />
		<method signature="void insert(nu.xom.Node,int)" class="nu.xom.Nodes" />
		<method signature="void setBaseURI(java.lang.String)" class="nu.xom.ParentNode" />
		<field name="serialVersionUID" class="nu.xom.ParsingException" />
		<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="nu.xom.ParsingException" />
		<method signature="void &lt;init&gt;(java.lang.String,int,int,java.lang.Throwable)" class="nu.xom.ParsingException" />
		<method signature="void &lt;init&gt;(java.lang.String)" class="nu.xom.ParsingException" />
		<method signature="java.lang.String getURI()" class="nu.xom.ParsingException" />
		<method signature="void &lt;init&gt;(nu.xom.ProcessingInstruction)" class="nu.xom.ProcessingInstruction" />
		<method signature="void setTarget(java.lang.String)" class="nu.xom.ProcessingInstruction" />
		<method signature="void setValue(java.lang.String)" class="nu.xom.ProcessingInstruction" />
		<method signature="void writeEscaped(java.lang.String)" class="nu.xom.Serializer" />
		<method signature="boolean getPreserveBaseURI()" class="nu.xom.Serializer" />
		<method signature="void setPreserveBaseURI(boolean)" class="nu.xom.Serializer" />
		<method signature="java.lang.String getEncoding()" class="nu.xom.Serializer" />
		<method signature="int getColumnNumber()" class="nu.xom.Serializer" />
		<field name="_128_SPACES" class="nu.xom.TextWriter" />
		<field name="_128" class="nu.xom.TextWriter" />
		<method signature="int getColumnNumber()" class="nu.xom.TextWriter" />
		<method signature="void &lt;init&gt;()" class="nu.xom.TextWriterFactory" />
		<method signature="void &lt;init&gt;()" class="nu.xom.URIUtil" />
		<field name="serialVersionUID" class="nu.xom.UnavailableCharacterException" />
		<method signature="char getCharacter()" class="nu.xom.UnavailableCharacterException" />
		<method signature="java.lang.String getEncoding()" class="nu.xom.UnavailableCharacterException" />
		<field name="CANONICAL_COMBINING_CLASS_NOT_REORDERED" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_OVERLAY" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_NUKTA" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_KANA_VOICING" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_VIRAMA" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_10" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_11" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_12" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_13" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_14" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_15" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_16" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_17" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_18" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_19" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_20" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_21" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_22" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_23" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_24" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_25" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_26" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_27" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_28" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_29" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_30" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_31" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_32" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_33" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_34" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_35" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_36" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_84" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_91" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_103" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_107" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_118" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_122" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_129" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_130" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_132" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_ATTACHED_BELOW" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_BELOW_LEFT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_BELOW" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_BELOW_RIGHT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_LEFT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_RIGHT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_ABOVE_LEFT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_ABOVE" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_ABOVE_RIGHT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_DOUBLE_BELOW" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_DOUBLE_ABOVE" class="nu.xom.UnicodeUtil" />
		<field name="CANONICAL_COMBINING_CLASS_IOTA_SUBSCRIPT" class="nu.xom.UnicodeUtil" />
		<field name="FIRST_HANGUL_SYLLABLE" class="nu.xom.UnicodeUtil" />
		<field name="LAST_HANGUL_SYLLABLE" class="nu.xom.UnicodeUtil" />
		<method signature="void &lt;init&gt;()" class="nu.xom.UnicodeUtil" />
		<field name="CAPACITY" class="nu.xom.UnsynchronizedBufferedWriter" />
		<field name="serialVersionUID" class="nu.xom.ValidityException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)" class="nu.xom.ValidityException" />
		<method signature="void &lt;init&gt;(java.lang.String,int,int)" class="nu.xom.ValidityException" />
		<method signature="void &lt;init&gt;(java.lang.String,int,int,java.lang.Throwable)" class="nu.xom.ValidityException" />
		<method signature="void &lt;init&gt;(java.lang.String,java.lang.String,int,int)" class="nu.xom.ValidityException" />
		<method signature="void &lt;init&gt;(java.lang.String)" class="nu.xom.ValidityException" />
		<method signature="nu.xom.Document getDocument()" class="nu.xom.ValidityException" />
		<method signature="int getErrorCount()" class="nu.xom.ValidityException" />
		<method signature="java.lang.String getValidityError(int)" class="nu.xom.ValidityException" />
		<method signature="int getLineNumber(int)" class="nu.xom.ValidityException" />
		<method signature="int getColumnNumber(int)" class="nu.xom.ValidityException" />
		<field name="val$empty" class="nu.xom.Verifier$1" />
		<method signature="void &lt;init&gt;(org.xml.sax.InputSource)" class="nu.xom.Verifier$1" />
		<method signature="org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)" class="nu.xom.Verifier$1" />
		<class name="nu.xom.Verifier$EmptyReader" />
		<field name="LOAD" class="nu.xom.Verifier$URICache" />
		<field name="XML_CHARACTER" class="nu.xom.Verifier" />
		<field name="NAME_CHARACTER" class="nu.xom.Verifier" />
		<field name="NAME_START_CHARACTER" class="nu.xom.Verifier" />
		<field name="NCNAME_CHARACTER" class="nu.xom.Verifier" />
		<field name="parser" class="nu.xom.Verifier" />
		<method signature="void &lt;init&gt;()" class="nu.xom.Verifier" />
		<method signature="void checkInternalDTDSubset(java.lang.String)" class="nu.xom.Verifier" />
		<field name="serialVersionUID" class="nu.xom.WellformednessException" />
		<field name="serialVersionUID" class="nu.xom.XMLException" />
		<field name="serialVersionUID" class="nu.xom.XPathException" />
		<method signature="java.lang.String getXPath()" class="nu.xom.XPathException" />
		<field name="serialVersionUID" class="nu.xom.XPathTypeException" />
		<method signature="java.lang.Object getReturnValue()" class="nu.xom.XPathTypeException" />
		<field name="serialVersionUID" class="nu.xom.canonical.CanonicalizationException" />
		<field name="CANONICAL_XML" class="nu.xom.canonical.Canonicalizer" />
		<field name="CANONICAL_XML_WITH_COMMENTS" class="nu.xom.canonical.Canonicalizer" />
		<field name="EXCLUSIVE_XML_CANONICALIZATION" class="nu.xom.canonical.Canonicalizer" />
		<field name="EXCLUSIVE_XML_CANONICALIZATION_WITH_COMMENTS" class="nu.xom.canonical.Canonicalizer" />
		<method signature="void &lt;init&gt;(java.io.OutputStream,boolean)" class="nu.xom.canonical.Canonicalizer" />
		<method signature="void &lt;init&gt;(java.io.OutputStream,java.lang.String)" class="nu.xom.canonical.Canonicalizer" />
		<method signature="void setInclusiveNamespacePrefixList(java.lang.String)" class="nu.xom.canonical.Canonicalizer" />
		<class name="nu.xom.converters.DOMConverter" />
		<method signature="org.xml.sax.ContentHandler getContentHandler()" class="nu.xom.converters.SAXConverter" />
		<method signature="void setLexicalHandler(org.xml.sax.ext.LexicalHandler)" class="nu.xom.converters.SAXConverter" />
		<method signature="org.xml.sax.ext.LexicalHandler getLexicalHandler()" class="nu.xom.converters.SAXConverter" />
		<class name="nu.xom.tests.XOMTestCase" />
		<class name="nu.xom.xinclude.BadEncodingAttributeException" />
		<class name="nu.xom.xinclude.BadHTTPHeaderException" />
		<class name="nu.xom.xinclude.BadHrefAttributeException" />
		<class name="nu.xom.xinclude.BadParseAttributeException" />
		<class name="nu.xom.xinclude.EncodingHeuristics" />
		<class name="nu.xom.xinclude.InclusionLoopException" />
		<class name="nu.xom.xinclude.MisplacedFallbackException" />
		<class name="nu.xom.xinclude.NoIncludeLocationException" />
		<class name="nu.xom.xinclude.XIncludeException" />
		<class name="nu.xom.xinclude.XIncluder" />
		<class name="nu.xom.xinclude.XPointer" />
		<class name="nu.xom.xinclude.XPointerException" />
		<class name="nu.xom.xinclude.XPointerResourceException" />
		<class name="nu.xom.xinclude.XPointerSyntaxException" />
		<class name="nu.xom.xslt.XOMInputSource" />
		<class name="nu.xom.xslt.XOMReader" />
		<class name="nu.xom.xslt.XOMResult" />
		<class name="nu.xom.xslt.XOMSource" />
		<class name="nu.xom.xslt.XSLException" />
		<class name="nu.xom.xslt.XSLTHandler" />
		<class name="nu.xom.xslt.XSLTransform$1" />
		<class name="nu.xom.xslt.XSLTransform$FatalListener" />
		<class name="nu.xom.xslt.XSLTransform" />
	</removed-code>
	<removed-resources>
	</removed-resources>
<!-- 	shrinked /home/shk3/workspace/org.openscience.cdk.jchempaint30/dist/jar/jchempaint-applet-nu.jar BY 44.90%. -->
<!-- 	size before: 257 KB, size after: 141 KB. -->
<!-- 	removed 28 classes, 78 methods, 93 fields, 0 resources. -->
<!-- 	89 classes remaining of 117 total. -->
</inOutPair>
<!-- WARNING:Not all dependencies could be resolved. Please see the logfile for details. -->
</yshrink>

